PostgreSQL research

Postgres-XC customized tablespace, role, database, schema usage

2013-04-05 17:22:32   查看原文>>

Postgres-XC和单节点的PostgreSQL节点一样可以支持表空间, 数据库, 角色以及schema.
但是需要注意的是Postgres-XC自己创建的角色, 数据库, 表空间, schema必须在所有的coordinator, datanode节点上一致. 
否则DDL语句可能会报错.
例如在单节点的PostgreSQL数据库中执行如下SQL : 

\c digoal digoal
create table digoal.test(id int primary key, info text) tablespace tbs_digoal;

在Postgres-XC节点中执行时需要考虑以下问题 : 
1. 所有的coordinator 以及datanode节点必须存在digoal数据库
2. 所有的coordinator 以及datanode节点必须存在digoal用户
3. 所有的coordinator 以及datanode节点的digoal库中必须存在digoal schema
4. 所有的coordinator 以及datanode节点必须存在tbs_digoal表空间.
5. 所有的coordinator 以及datanode节点必须配置如下权限 : 
    允许digoal用户连接digoal库, 并且在digoal schema中创建表的权限.
    digoal用户写表空间tbs_digoal的权限.

具体的操作方法如下 : 
1. 新建用户
连接到Postgres-XC集群中的任意一台coordinator节点, 前提条件是已经正常的配置了pgxc_node(包含所有的coordinator和datanode).
执行以下SQL : 

postgres=# create role digoal nosuperuser login encrypted password 'digoal';
CREATE ROLE


这样将会自动在pgxc_node中的所有节点执行以上SQL.

2. 新建表空间
注意如果datanode和coordinator部署在同一台服务器上, 就不能使用以上方法创建表空间. 因为要指定不同的表空间目录.
实际上在Postgres-XL中可以直接创建, 因为在表空间目录的子目录中会使用节点名后缀, 所以目录不会冲突, 详见 : 
http://blog.163.com/digoal@126/blog/static/163877040201462511494662/

所以没有本文如此麻烦, 在不支持节点名后缀时才需要如此.

需要使用execute direct on node_name $$SQL$$; 来创建表空间.
例如 : 
假设当前环境如下 : 

postgres=# select * from pgxc_node order by node_name;
  node_name   | node_type | node_port |    node_host    | nodeis_primary | nodeis_preferred |   node_id   
--------------+-----------+-----------+-----------------+----------------+------------------+-------------
 coordinate_1 | C         |      1921 | db-172-16-19-11 | f              | f                |  -922782310
 coordinate_2 | C         |      1921 | db-172-16-19-13 | f              | f                |  1027955327
 coordinate_3 | C         |      1921 | db-172-16-19-15 | f              | f                |   183504851
 coordinate_4 | C         |      1921 | db-172-16-19-17 | f              | f                | -1338651536
 coordinate_5 | C         |      1921 | 127.0.0.1       | f              | f                |  2058409530
 datanode_1   | D         |      1923 | db-172-16-19-11 | t              | f                |  -675012441
 datanode_2   | D         |      1923 | db-172-16-19-13 | f              | f                | -1047623914
 datanode_3   | D         |      1923 | db-172-16-19-15 | f              | f                |  1787525382
 datanode_4   | D         |      1923 | db-172-16-19-17 | f              | f                |   -83063638
 datanode_5   | D         |      1923 | db-172-16-19-19 | f              | t                |   137889650
(10 rows)



(在所有的datanode和coordinator节点) 创建表空间目录 : 

db-172-16-19-11 : mkdir -p /data01/pgxc_coordinate_tbs/tbs_digoal ; chown -R postgres:postgres /data01/pgxc_coordinate_tbs
db-172-16-19-11 : mkdir -p /data01/pgxc_datanode_tbs/tbs_digoal ; chown -R postgres:postgres /data01/pgxc_datanode_tbs
db-172-16-19-13 : mkdir -p /data01/pgxc_coordinate_tbs/tbs_digoal ; chown -R postgres:postgres /data01/pgxc_coordinate_tbs
db-172-16-19-13 : mkdir -p /data01/pgxc_datanode_tbs/tbs_digoal ; chown -R postgres:postgres /data01/pgxc_datanode_tbs
db-172-16-19-15 : mkdir -p /data01/pgxc_coordinate_tbs/tbs_digoal ; chown -R postgres:postgres /data01/pgxc_coordinate_tbs
db-172-16-19-15 : mkdir -p /data01/pgxc_datanode_tbs/tbs_digoal ; chown -R postgres:postgres /data01/pgxc_datanode_tbs
db-172-16-19-17 : mkdir -p /data01/pgxc_coordinate_tbs/tbs_digoal ; chown -R postgres:postgres /data01/pgxc_coordinate_tbs
db-172-16-19-17 : mkdir -p /data01/pgxc_datanode_tbs/tbs_digoal ; chown -R postgres:postgres /data01/pgxc_datanode_tbs
db-172-16-19-19 : mkdir -p /data01/pgxc_coordinate_tbs/tbs_digoal ; chown -R postgres:postgres /data01/pgxc_coordinate_tbs
db-172-16-19-19 : mkdir -p /data01/pgxc_datanode_tbs/tbs_digoal ; chown -R postgres:postgres /data01/pgxc_datanode_tbs



(连接到任意1个coordinator节点, 使用超级用户执行以下SQL) 创建表空间 : 

psql -h db-172-16-19-11 -p 1921 -U postgres postgres
execute direct on datanode_1 $$create tablespace tbs_digoal location '/data01/pgxc_datanode_tbs/tbs_digoal'$$;
execute direct on coordinate_1 $$create tablespace tbs_digoal location '/data01/pgxc_coordinate_tbs/tbs_digoal'$$;
execute direct on datanode_2 $$create tablespace tbs_digoal location '/data01/pgxc_datanode_tbs/tbs_digoal'$$;
execute direct on coordinate_2 $$create tablespace tbs_digoal location '/data01/pgxc_coordinate_tbs/tbs_digoal'$$;
execute direct on datanode_3 $$create tablespace tbs_digoal location '/data01/pgxc_datanode_tbs/tbs_digoal'$$;
execute direct on coordinate_3 $$create tablespace tbs_digoal location '/data01/pgxc_coordinate_tbs/tbs_digoal'$$;
execute direct on datanode_4 $$create tablespace tbs_digoal location '/data01/pgxc_datanode_tbs/tbs_digoal'$$;
execute direct on coordinate_4 $$create tablespace tbs_digoal location '/data01/pgxc_coordinate_tbs/tbs_digoal'$$;
execute direct on datanode_5 $$create tablespace tbs_digoal location '/data01/pgxc_datanode_tbs/tbs_digoal'$$;
execute direct on coordinate_5 $$create tablespace tbs_digoal location '/data01/pgxc_coordinate_tbs/tbs_digoal'$$;


注意本地节点不能使用execute direct来执行,

ERROR:  EXECUTE DIRECT cannot execute locally this utility query


(连接到任意另1个coordinator节点, 使用超级用户执行以下SQL) 创建表空间 : 

psql -h db-172-16-19-12 -p 1921 -U postgres postgres
execute direct on coordinate_1 $$create tablespace tbs_digoal location '/data01/pgxc_coordinate_tbs/tbs_digoal'$$;



3. (连接到任意1个coordinator节点, 使用超级用户执行以下SQL) 新建数据库

psql -h db-172-16-19-11 -p 1921 -U postgres postgres
create database digoal with owner postgres template template0 encoding 'UTF8' tablespace tbs_digoal;



4. (连接到任意1个coordinator节点, 使用超级用户执行以下SQL) 新建用户

psql -h db-172-16-19-11 -p 1921 -U postgres postgres
postgres=# create role digoal nosuperuser login encrypted password 'digoal';
CREATE ROLE



5. (连接到任意1个coordinator节点, 使用超级用户执行以下SQL) 赋予权限

psql -h db-172-16-19-11 -p 1921 -U postgres postgres
postgres=# grant all on database digoal to digoal;
GRANT
postgres=# grant all on tablespace tbs_digoal to digoal;
GRANT



6. (连接到任意1个coordinator节点, 使用超级用户执行以下SQL) 新建schema

psql -h db-172-16-19-11 -p 1921 -U postgres postgres
postgres=# \c digoal digoal
You are now connected to database "digoal" as user "digoal".
digoal=> create schema digoal ;
CREATE SCHEMA



7. (连接到任意1个coordinator节点, 使用超级用户执行以下SQL) 新建表

psql -h db-172-16-19-11 -p 1921 -U postgres postgres
digoal=> create table digoal.test(id int primary key, info text) tablespace tbs_digoal distribute by hash(id) to node datanode_1,datanode_2,datanode_3,datanode_4,datanode_5;
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "test_pkey" for table "test"
CREATE TABLE



【注意】
1. 执行DDL前一定要确保pgxc_pool_check()返回真.
如果不为真, 使用pgxc_pool_reload() 重置. 再执行pgxc_pool_check()检查pool和pgxc_node是否一致.
这样才能确保接下来要执行的DDL会在所有的coordinator DDL同步.

【参考】
1. http://blog.163.com/digoal@126/blog/static/16387704020133292915600/
