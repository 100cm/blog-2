PostgreSQL research

Postgres-XC 1.0.2 use caveat

2013-04-03 14:55:27   查看原文>>

接上一篇BLOG : 
http://blog.163.com/digoal@126/blog/static/16387704020133292915600/

[使用注意事项]
一, 初始节点信息in pgxc_node异常(算个小的BUG) : 
在postgres-xc部署好后, 因为初始类型是coordinator, 所以务必将所有datanode节点类型改为datanode type, 否则会有问题哦.

1. datanode初始节点信息.

[pgxc@db-192-168-122-171 ~]$ psql -h 192.168.122.173 -p 1923 -U postgres postgres
psql (PGXC 1.0.2, based on PG 9.1.7)
Type "help" for help.
postgres=# select * from pgxc_node;
 node_name  | node_type | node_port | node_host | nodeis_primary | nodeis_preferred |  node_id   
------------+-----------+-----------+-----------+----------------+------------------+------------
 datanode_1 | C         |      5432 | localhost | f              | f                | -675012441
(1 row)


# 初始的本地节点node_type=coordinator, 端口号=5432, node_host=localhost. 显然与本地配置不一致.

postgres=# alter node datanode_1 with (type=datanode, host='127.0.0.1',port=1923);
WARNING:  01000: unrecognized node type: 139
LOCATION:  GetCommandLogLevel, utility.c:3722
ERROR:  42601: PGXC node datanode_1: cannot alter Coordinator to Datanode
LOCATION:  PgxcNodeAlter, nodemgr.c:666


# 本地实际启动时pg_ctl -Z datanode, 但是尝试修改为datanode上的node信息报错. 所以先不用管它.
# 本地节点不允许删除, 如下.

postgres=# drop node datanode_1 ;
WARNING:  01000: unrecognized node type: 141
LOCATION:  GetCommandLogLevel, utility.c:3722
ERROR:  42601: PGXC Node datanode_1: cannot drop local node
LOCATION:  PgxcNodeRemove, nodemgr.c:736



2. coordinate初始节点信息的修改 : 

[pgxc@db-192-168-122-171 ~]$ psql -h 192.168.122.173 -p 1921 -U postgres postgres
psql (PGXC 1.0.2, based on PG 9.1.7)
Type "help" for help.
postgres=# select * from pgxc_node;
  node_name   | node_type | node_port |    node_host    | nodeis_primary | nodeis_preferred |   node_id   
--------------+-----------+-----------+-----------------+----------------+------------------+-------------
 coordinate_1 | C         |      5432 | localhost       | f              | f                |  -922782310
postgres=# alter node coordinate_1 with (host='127.0.0.1',port=1921);
ALTER NODE
postgres=# select oid,* from pgxc_node;
  oid  |  node_name   | node_type | node_port |    node_host    | nodeis_primary | nodeis_preferred |   node_id   
-------+--------------+-----------+-----------+-----------------+----------------+------------------+-------------
 11129 | coordinate_1 | C         |      1921 | 127.0.0.1       | f              | f                |  -922782310


# 修改后记得执行pgxc_pool_reload();

二, 在coordinator节点修改或新增或删除node信息前最好停止该coordinator节点的所有操作. 在操作完node信息后立刻执行pgxc_pool_reload重新加载pool信息.
    然后再允许该coordinator节点的操作, 以免带来不必要的麻烦.
    (这里完全可以做成自动的, 希望以后pgxc改进这部分功能.)

三, 所有datanode节点中,只能有1个primary节点.

postgres=# create node datanode_1 with (type=datanode, host='192.168.122.173', port=1923, primary=true, preferred=false);
ERROR:  PGXC node datanode_1: two nodes cannot be primary
postgres=# select pgxc_pool_reload();
 pgxc_pool_reload 
------------------
 t
(1 row)


# 如果pgxc_node中查到目前没有primary节点, 那么可能是由于pool未更新造成的. 更新后即可.

postgres=# create node datanode_1 with (type=datanode, host='192.168.122.173', port=1923, primary=true, preferred=false);
CREATE NODE


# 如果coordinator pool的信息会感知node信息的变化自动更新, 那么就不会有这个问题.

四, coordinator节点的pgxc_node, pgxc_group信息必须一致, 但是目前来看, 这些信息需要自己来确保一致, 希望未来程序对此进行改进.
创建分布表 : 
# 方法1, 使用datanode定义分发节点. 

psql -h 192.168.122.173 -p 1921 -U postgres postgres
postgres=# select oid,* from pgxc_node;
  oid  |  node_name   | node_type | node_port |    node_host    | nodeis_primary | nodeis_preferred |   node_id   
-------+--------------+-----------+-----------+-----------------+----------------+------------------+-------------
 16389 | datanode_1   | D         |      1923 | 192.168.122.173 | t              | t                |  -675012441
 16390 | datanode_2   | D         |      1923 | 192.168.122.174 | f              | f                | -1047623914
 16391 | datanode_3   | D         |      1923 | 192.168.122.175 | f              | f                |  1787525382
 16392 | datanode_4   | D         |      1923 | 192.168.122.176 | f              | f                |   -83063638
 16393 | datanode_5   | D         |      1923 | 192.168.122.177 | f              | f                |   137889650
 16394 | datanode_6   | D         |      1923 | 192.168.122.178 | f              | f                |  -678318491
 11129 | coordinate_1 | C         |      1921 | 127.0.0.1       | f              | f                |  -922782310
(7 rows)
postgres=# create table t1 (id int primary key, info text) distribute by hash(id) to node datanode_1, datanode_2, datanode_3, datanode_4, datanode_5, datanode_6;
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "t1_pkey" for table "t1"
CREATE TABLE


# 创建表时, 根据pgxc_node中的node_type=C的节点同步执行. 这里只配置了本地节点, 所以元数据不会同步到其他coordinator中.

psql -h 192.168.122.174 -p 1921 -U postgres postgres
postgres=# select * from t1;
ERROR:  relation "t1" does not exist
LINE 1: select * from t1;
                      ^


# 删除表也是如此.

psql -h 192.168.122.173 -p 1921 -U postgres postgres
postgres=# drop table t1;
DROP TABLE



# 方法2, 使用group定义分发节点.

psql -h 192.168.122.173 -p 1921 -U postgres postgres
postgres=# create node group gp0 with datanode_1, datanode_2, datanode_3, datanode_4, datanode_5, datanode_6;
CREATE NODE GROUP
postgres=# create table t1 (id int primary key, info text) distribute by hash(id) to group gp0;
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "t1_pkey" for table "t1"
CREATE TABLE
postgres=# select * from pgxc_class;
 pcrelid | pclocatortype | pcattnum | pchashalgorithm | pchashbuckets |              nodeoids               
---------+---------------+----------+-----------------+---------------+-------------------------------------
   16444 | H             |        1 |               1 |          4096 | 16389 16390 16391 16392 16393 16394
(1 row)


# 创建表时, 根据pgxc_node中的node_type=C的节点同步执行. 这里只配置了本地节点, 所以元数据不会同步到其他coordinator中.

psql -h 192.168.122.174 -p 1921 -U postgres postgres
postgres=# select * from t1;
ERROR:  relation "t1" does not exist
LINE 1: select * from t1;
                      ^


# 删除表也是如此.

psql -h 192.168.122.173 -p 1921 -U postgres postgres
postgres=# drop table t1;
DROP TABLE



# 方法3, 在本地添加远程的coordinate节点信息.

postgres=# create node coordinate_2 with (type=coordinator, host='192.168.122.174', port=1921);
CREATE NODE
postgres=# create node coordinate_3 with (type=coordinator, host='192.168.122.175', port=1921);
CREATE NODE
postgres=# create node coordinate_4 with (type=coordinator, host='192.168.122.176', port=1921);
CREATE NODE
postgres=# create node coordinate_5 with (type=coordinator, host='192.168.122.177', port=1921);
CREATE NODE
postgres=# create node coordinate_6 with (type=coordinator, host='192.168.122.178', port=1921);
CREATE NODE
postgres=# select oid,* from pgxc_node order by node_name;
  oid  |  node_name   | node_type | node_port |    node_host    | nodeis_primary | nodeis_preferred |   node_id   
-------+--------------+-----------+-----------+-----------------+----------------+------------------+-------------
 11129 | coordinate_1 | C         |      1921 | 127.0.0.1       | f              | f                |  -922782310
 16452 | coordinate_2 | C         |      1921 | 192.168.122.174 | f              | f                |  1027955327
 16453 | coordinate_3 | C         |      1921 | 192.168.122.175 | f              | f                |   183504851
 16454 | coordinate_4 | C         |      1921 | 192.168.122.176 | f              | f                | -1338651536
 16455 | coordinate_5 | C         |      1921 | 192.168.122.177 | f              | f                |  2058409530
 16457 | coordinate_6 | C         |      1921 | 192.168.122.178 | f              | f                |    15814306
 16389 | datanode_1   | D         |      1923 | 192.168.122.173 | t              | t                |  -675012441
 16390 | datanode_2   | D         |      1923 | 192.168.122.174 | f              | f                | -1047623914
 16391 | datanode_3   | D         |      1923 | 192.168.122.175 | f              | f                |  1787525382
 16392 | datanode_4   | D         |      1923 | 192.168.122.176 | f              | f                |   -83063638
 16393 | datanode_5   | D         |      1923 | 192.168.122.177 | f              | f                |   137889650
 16394 | datanode_6   | D         |      1923 | 192.168.122.178 | f              | f                |  -678318491
(12 rows)
postgres=# select pgxc_pool_reload();
 pgxc_pool_reload 
------------------
 t
(1 row)
postgres=# create table t1 (id int primary key, info text) distribute by hash(id) to group gp0;
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "t1_pkey" for table "t1"
ERROR:  PGXC Group gp0: group not defined
postgres=# \dt
No relations found.


# 当本地定义了多个coordinator节点后,
# 执行DDL, 会在所有的coordinator节点执行create table t1 (id int primary key, info text) distribute by hash(id) to group gp0;生成元数据.
# 注意这个表未创建成功, 是因为其他coordinator节点未定义gp0这个组.
# 在其中的一个coordinator定义组时, group的信息不会被同步到其他coordinator, 包括datanode的定义也是如此, 可以认为group,datanode是coordinator节点本地的信息. 如下

psql -h 192.168.122.173 -p 1921 -U postgres postgres
postgres=# drop node group gp0;
DROP NODE GROUP
postgres=# create node group gp0 with datanode_1, datanode_2, datanode_3, datanode_4, datanode_5, datanode_6;
CREATE NODE GROUP
psql -h 192.168.122.174 -p 1921 -U postgres postgres
postgres=# select * from pgxc_group;
 group_name | group_members 
------------+---------------
(0 rows)


# 为了确保pgxc集群元数据定义一致, 建议每个coordinator节点的pgxc_node以及pgxc_group一致.
# 并且调整了pgxc_node信息后记得调用pgxc_pool_reload重载node连接.
psql -h 192.168.122.174 -p 1921 -U postgres postgres

create node coordinate_1 with (type=coordinator, host='192.168.122.173', port=1921);
create node coordinate_3 with (type=coordinator, host='192.168.122.175', port=1921);
create node coordinate_4 with (type=coordinator, host='192.168.122.176', port=1921);
create node coordinate_5 with (type=coordinator, host='192.168.122.177', port=1921);
create node coordinate_6 with (type=coordinator, host='192.168.122.178', port=1921);
create node group gp0 with datanode_1, datanode_2, datanode_3, datanode_4, datanode_5, datanode_6;
postgres=# select oid,* from pgxc_node order by node_name;
  oid  |  node_name   | node_type | node_port |    node_host    | nodeis_primary | nodeis_preferred |   node_id   
-------+--------------+-----------+-----------+-----------------+----------------+------------------+-------------
 24591 | coordinate_1 | C         |      1921 | 192.168.122.173 | f              | f                |  -922782310
 11129 | coordinate_2 | C         |      1921 | 127.0.0.1       | f              | f                |  1027955327
 24586 | coordinate_3 | C         |      1921 | 192.168.122.175 | f              | f                |   183504851
 24587 | coordinate_4 | C         |      1921 | 192.168.122.176 | f              | f                | -1338651536
 24588 | coordinate_5 | C         |      1921 | 192.168.122.177 | f              | f                |  2058409530
 24589 | coordinate_6 | C         |      1921 | 192.168.122.178 | f              | f                |    15814306
 24581 | datanode_1   | D         |      1923 | 192.168.122.173 | t              | f                |  -675012441
 24582 | datanode_2   | D         |      1923 | 192.168.122.174 | f              | t                | -1047623914
 24578 | datanode_3   | D         |      1923 | 192.168.122.175 | f              | f                |  1787525382
 24579 | datanode_4   | D         |      1923 | 192.168.122.176 | f              | f                |   -83063638
 24580 | datanode_5   | D         |      1923 | 192.168.122.177 | f              | f                |   137889650
 16409 | datanode_6   | D         |      1923 | 192.168.122.178 | f              | f                |  -678318491
(12 rows)
postgres=# select * from pgxc_group;
 group_name |            group_members            
------------+-------------------------------------
 gp0        | 24581 24582 24578 24579 24580 16409
(1 row)
select pgxc_pool_reload();



psql -h 192.168.122.175 -p 1921 -U postgres postgres

create node coordinate_1 with (type=coordinator, host='192.168.122.173', port=1921);
create node coordinate_2 with (type=coordinator, host='192.168.122.174', port=1921);
create node coordinate_4 with (type=coordinator, host='192.168.122.176', port=1921);
create node coordinate_5 with (type=coordinator, host='192.168.122.177', port=1921);
create node coordinate_6 with (type=coordinator, host='192.168.122.178', port=1921);
create node group gp0 with datanode_1, datanode_2, datanode_3, datanode_4, datanode_5, datanode_6;
postgres=# select oid,* from pgxc_node order by node_name;
  oid  |  node_name   | node_type | node_port |    node_host    | nodeis_primary | nodeis_preferred |   node_id   
-------+--------------+-----------+-----------+-----------------+----------------+------------------+-------------
 16426 | coordinate_1 | C         |      1921 | 192.168.122.173 | f              | f                |  -922782310
 16427 | coordinate_2 | C         |      1921 | 192.168.122.174 | f              | f                |  1027955327
 11129 | coordinate_3 | C         |      1921 | 127.0.0.1       | f              | f                |   183504851
 16428 | coordinate_4 | C         |      1921 | 192.168.122.176 | f              | f                | -1338651536
 16429 | coordinate_5 | C         |      1921 | 192.168.122.177 | f              | f                |  2058409530
 16430 | coordinate_6 | C         |      1921 | 192.168.122.178 | f              | f                |    15814306
 16417 | datanode_1   | D         |      1923 | 192.168.122.173 | t              | f                |  -675012441
 16418 | datanode_2   | D         |      1923 | 192.168.122.174 | f              | f                | -1047623914
 16419 | datanode_3   | D         |      1923 | 192.168.122.175 | f              | t                |  1787525382
 16420 | datanode_4   | D         |      1923 | 192.168.122.176 | f              | f                |   -83063638
 16421 | datanode_5   | D         |      1923 | 192.168.122.177 | f              | f                |   137889650
 16422 | datanode_6   | D         |      1923 | 192.168.122.178 | f              | f                |  -678318491
(12 rows)
postgres=# select * from pgxc_group;
 group_name |            group_members            
------------+-------------------------------------
 gp0        | 16417 16418 16419 16420 16421 16422
(1 row)
select pgxc_pool_reload();



psql -h 192.168.122.176 -p 1921 -U postgres postgres

create node coordinate_1 with (type=coordinator, host='192.168.122.173', port=1921);
create node coordinate_2 with (type=coordinator, host='192.168.122.174', port=1921);
create node coordinate_3 with (type=coordinator, host='192.168.122.175', port=1921);
create node coordinate_5 with (type=coordinator, host='192.168.122.177', port=1921);
create node coordinate_6 with (type=coordinator, host='192.168.122.178', port=1921);
create node group gp0 with datanode_1, datanode_2, datanode_3, datanode_4, datanode_5, datanode_6;
postgres=# select oid,* from pgxc_node order by node_name;
  oid  |  node_name   | node_type | node_port |    node_host    | nodeis_primary | nodeis_preferred |   node_id   
-------+--------------+-----------+-----------+-----------------+----------------+------------------+-------------
 16425 | coordinate_1 | C         |      1921 | 192.168.122.173 | f              | f                |  -922782310
 16426 | coordinate_2 | C         |      1921 | 192.168.122.174 | f              | f                |  1027955327
 16427 | coordinate_3 | C         |      1921 | 192.168.122.175 | f              | f                |   183504851
 11129 | coordinate_4 | C         |      1921 | 127.0.0.1       | f              | f                | -1338651536
 16428 | coordinate_5 | C         |      1921 | 192.168.122.177 | f              | f                |  2058409530
 16429 | coordinate_6 | C         |      1921 | 192.168.122.178 | f              | f                |    15814306
 16417 | datanode_1   | D         |      1923 | 192.168.122.173 | t              | f                |  -675012441
 16418 | datanode_2   | D         |      1923 | 192.168.122.174 | f              | f                | -1047623914
 16419 | datanode_3   | D         |      1923 | 192.168.122.175 | f              | f                |  1787525382
 16420 | datanode_4   | D         |      1923 | 192.168.122.176 | f              | t                |   -83063638
 16421 | datanode_5   | D         |      1923 | 192.168.122.177 | f              | f                |   137889650
 16409 | datanode_6   | D         |      1923 | 192.168.122.178 | f              | f                |  -678318491
(12 rows)
postgres=# select * from pgxc_group;
 group_name |            group_members            
------------+-------------------------------------
 gp0        | 16417 16418 16419 16420 16421 16409
(1 row)
select pgxc_pool_reload();



psql -h 192.168.122.177 -p 1921 -U postgres postgres

create node coordinate_1 with (type=coordinator, host='192.168.122.173', port=1921);
create node coordinate_2 with (type=coordinator, host='192.168.122.174', port=1921);
create node coordinate_3 with (type=coordinator, host='192.168.122.175', port=1921);
create node coordinate_4 with (type=coordinator, host='192.168.122.176', port=1921);
create node coordinate_6 with (type=coordinator, host='192.168.122.178', port=1921);
create node group gp0 with datanode_1, datanode_2, datanode_3, datanode_4, datanode_5, datanode_6;
postgres=# select oid,* from pgxc_node order by node_name;
  oid  |  node_name   | node_type | node_port |    node_host    | nodeis_primary | nodeis_preferred |   node_id   
-------+--------------+-----------+-----------+-----------------+----------------+------------------+-------------
 16425 | coordinate_1 | C         |      1921 | 192.168.122.173 | f              | f                |  -922782310
 16426 | coordinate_2 | C         |      1921 | 192.168.122.174 | f              | f                |  1027955327
 16427 | coordinate_3 | C         |      1921 | 192.168.122.175 | f              | f                |   183504851
 16428 | coordinate_4 | C         |      1921 | 192.168.122.176 | f              | f                | -1338651536
 11129 | coordinate_5 | C         |      1921 | 127.0.0.1       | f              | f                |  2058409530
 16429 | coordinate_6 | C         |      1921 | 192.168.122.178 | f              | f                |    15814306
 16417 | datanode_1   | D         |      1923 | 192.168.122.173 | t              | f                |  -675012441
 16418 | datanode_2   | D         |      1923 | 192.168.122.174 | f              | f                | -1047623914
 16419 | datanode_3   | D         |      1923 | 192.168.122.175 | f              | f                |  1787525382
 16420 | datanode_4   | D         |      1923 | 192.168.122.176 | f              | f                |   -83063638
 16421 | datanode_5   | D         |      1923 | 192.168.122.177 | f              | t                |   137889650
 16409 | datanode_6   | D         |      1923 | 192.168.122.178 | f              | f                |  -678318491
(12 rows)
postgres=# select * from pgxc_group;
 group_name |            group_members            
------------+-------------------------------------
 gp0        | 16417 16418 16419 16420 16421 16409
(1 row)
select pgxc_pool_reload();



psql -h 192.168.122.178 -p 1921 -U postgres postgres

create node coordinate_1 with (type=coordinator, host='192.168.122.173', port=1921);
create node coordinate_2 with (type=coordinator, host='192.168.122.174', port=1921);
create node coordinate_3 with (type=coordinator, host='192.168.122.175', port=1921);
create node coordinate_4 with (type=coordinator, host='192.168.122.176', port=1921);
create node coordinate_5 with (type=coordinator, host='192.168.122.177', port=1921);
create node group gp0 with datanode_1, datanode_2, datanode_3, datanode_4, datanode_5, datanode_6;
postgres=# select oid,* from pgxc_node order by node_name;
  oid  |  node_name   | node_type | node_port |    node_host    | nodeis_primary | nodeis_preferred |   node_id   
-------+--------------+-----------+-----------+-----------------+----------------+------------------+-------------
 16441 | coordinate_1 | C         |      1921 | 192.168.122.173 | f              | f                |  -922782310
 16442 | coordinate_2 | C         |      1921 | 192.168.122.174 | f              | f                |  1027955327
 16443 | coordinate_3 | C         |      1921 | 192.168.122.175 | f              | f                |   183504851
 16444 | coordinate_4 | C         |      1921 | 192.168.122.176 | f              | f                | -1338651536
 16445 | coordinate_5 | C         |      1921 | 192.168.122.177 | f              | f                |  2058409530
 11129 | coordinate_6 | C         |      1921 | 127.0.0.1       | f              | f                |    15814306
 16437 | datanode_1   | D         |      1923 | 192.168.122.173 | t              | f                |  -675012441
 16432 | datanode_2   | D         |      1923 | 192.168.122.174 | f              | f                | -1047623914
 16433 | datanode_3   | D         |      1923 | 192.168.122.175 | f              | f                |  1787525382
 16434 | datanode_4   | D         |      1923 | 192.168.122.176 | f              | f                |   -83063638
 16435 | datanode_5   | D         |      1923 | 192.168.122.177 | f              | f                |   137889650
 16436 | datanode_6   | D         |      1923 | 192.168.122.178 | f              | t                |  -678318491
(12 rows)
postgres=# select * from pgxc_group;
 group_name |            group_members            
------------+-------------------------------------
 gp0        | 16437 16432 16433 16434 16435 16436
(1 row)
select pgxc_pool_reload();



# 在任意coordinator节点创建表

psql -h 192.168.122.176 -p 1921 -U postgres postgres
postgres=# create table t1 (id int primary key, info text) distribute by hash(id) to group gp0;
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "t1_pkey" for table "t1"
CREATE TABLE


# 192.168.122.176这台coordinator节点上定义的pgxc_node中的coordinator节点将自动创建该表的元数据.
# 192.168.122.176定义的group gp0中的datanode节点将创建该表.

[pgxc@db-192-168-122-173 ~]$ psql -h 192.168.122.173 -p 1921 -U postgres postgres -c "select * from pgxc_class";
 pcrelid | pclocatortype | pcattnum | pchashalgorithm | pchashbuckets |              nodeoids               
---------+---------------+----------+-----------------+---------------+-------------------------------------
   16467 | H             |        1 |               1 |          4096 | 16389 16390 16391 16392 16393 16394
(1 row)
[pgxc@db-192-168-122-173 ~]$ psql -h 192.168.122.174 -p 1921 -U postgres postgres -c "select * from pgxc_class";
 pcrelid | pclocatortype | pcattnum | pchashalgorithm | pchashbuckets |              nodeoids               
---------+---------------+----------+-----------------+---------------+-------------------------------------
   24592 | H             |        1 |               1 |          4096 | 24581 24582 24578 24579 24580 16409
(1 row)
[pgxc@db-192-168-122-173 ~]$ psql -h 192.168.122.175 -p 1921 -U postgres postgres -c "select * from pgxc_class";
 pcrelid | pclocatortype | pcattnum | pchashalgorithm | pchashbuckets |              nodeoids               
---------+---------------+----------+-----------------+---------------+-------------------------------------
   16432 | H             |        1 |               1 |          4096 | 16417 16418 16419 16420 16421 16422
(1 row)
[pgxc@db-192-168-122-173 ~]$ psql -h 192.168.122.176 -p 1921 -U postgres postgres -c "select * from pgxc_class";
 pcrelid | pclocatortype | pcattnum | pchashalgorithm | pchashbuckets |              nodeoids               
---------+---------------+----------+-----------------+---------------+-------------------------------------
   16431 | H             |        1 |               1 |          4096 | 16417 16418 16419 16420 16421 16409
(1 row)
[pgxc@db-192-168-122-173 ~]$ psql -h 192.168.122.177 -p 1921 -U postgres postgres -c "select * from pgxc_class";
 pcrelid | pclocatortype | pcattnum | pchashalgorithm | pchashbuckets |              nodeoids               
---------+---------------+----------+-----------------+---------------+-------------------------------------
   16431 | H             |        1 |               1 |          4096 | 16417 16418 16419 16420 16421 16409
(1 row)
[pgxc@db-192-168-122-173 ~]$ psql -h 192.168.122.178 -p 1921 -U postgres postgres -c "select * from pgxc_class";
 pcrelid | pclocatortype | pcattnum | pchashalgorithm | pchashbuckets |              nodeoids               
---------+---------------+----------+-----------------+---------------+-------------------------------------
   16447 | H             |        1 |               1 |          4096 | 16437 16432 16433 16434 16435 16436
(1 row)
[pgxc@db-192-168-122-173 ~]$ psql -h 192.168.122.173 -p 1923 -U postgres postgres -c "\\d t1";
[pgxc@db-192-168-122-173 ~]$ psql -h 192.168.122.174 -p 1923 -U postgres postgres -c "\\d t1";
[pgxc@db-192-168-122-173 ~]$ psql -h 192.168.122.175 -p 1923 -U postgres postgres -c "\\d t1";
[pgxc@db-192-168-122-173 ~]$ psql -h 192.168.122.176 -p 1923 -U postgres postgres -c "\\d t1";
[pgxc@db-192-168-122-173 ~]$ psql -h 192.168.122.177 -p 1923 -U postgres postgres -c "\\d t1";
[pgxc@db-192-168-122-173 ~]$ psql -h 192.168.122.178 -p 1923 -U postgres postgres -c "\\d t1";
      Table "public.t1"
 Column |  Type   | Modifiers 
--------+---------+-----------
 id     | integer | not null
 info   | text    | 
Indexes:
    "t1_pkey" PRIMARY KEY, btree (id)



五, pgxc配置IP地址转换成主机名.
  如果配置中使用的是IP地址, 那么在地址变更后需要修改配置. 为了减少这种麻烦, 最好在配置中统一使用主机名.
  如果没有DNS的话, 配置主机的/etc/hosts.
  /etc/hosts配置如下 : (pgxc集群中的所有主机的/etc/hosts都需要配置, 192.168.122.171 - 192.168.122.178)

127.0.0.1               localhost.localdomain localhost
192.168.122.171 db-192-168-122-171.sky-mobi.com db-192-168-122-171
192.168.122.172 db-192-168-122-172.sky-mobi.com db-192-168-122-172
192.168.122.173 db-192-168-122-173.sky-mobi.com db-192-168-122-173
192.168.122.174 db-192-168-122-174.sky-mobi.com db-192-168-122-174
192.168.122.175 db-192-168-122-175.sky-mobi.com db-192-168-122-175
192.168.122.176 db-192-168-122-176.sky-mobi.com db-192-168-122-176
192.168.122.177 db-192-168-122-177.sky-mobi.com db-192-168-122-177
192.168.122.178 db-192-168-122-178.sky-mobi.com db-192-168-122-178


数据库配置 : 
gtm_standby : (192.168.122.172)

vi /data02/pgxc_gtm/gtm.conf
active_host = 'db-192-168-122-171'


gtm_proxy : (192.168.122.173 - 192.168.122.178)

vi /data02/pgxc_gtm_proxy/gtm_proxy.conf
gtm_host = 'db-192-168-122-171'


datanode : (192.168.122.173 - 192.168.122.178)

vi /data02/pgxc_datanode/postgresql.conf
gtm_host = '127.0.0.1'
gtm_port = 1924


vi /data02/pgxc_datanode/pg_hba.conf


host all all 127.0.0.1/32 trust
host all all 192.168.122.173/32 trust
host all all 192.168.122.174/32 trust
host all all 192.168.122.175/32 trust
host all all 192.168.122.176/32 trust
host all all 192.168.122.177/32 trust
host all all 192.168.122.178/32 trust
host all all 0.0.0.0/0 md5


coordinator : (192.168.122.173 - 192.168.122.178)

vi /data02/pgxc_coordinate/postgresql.conf
gtm_host = '127.0.0.1'
gtm_port = 1924


vi /data02/pgxc_coordinate/pg_hba.conf


host all all 127.0.0.1/32 trust
host all all 192.168.122.173/32 trust
host all all 192.168.122.174/32 trust
host all all 192.168.122.175/32 trust
host all all 192.168.122.176/32 trust
host all all 192.168.122.177/32 trust
host all all 192.168.122.178/32 trust
host all all 0.0.0.0/0 md5


psql -h [192.168.122.173 - 192.168.122.178] -p 1921 -U postgres postgres

alter node datanode_1 with (host='db-192-168-122-173', PRIMARY=false);
alter node datanode_2 with (host='db-192-168-122-174', PRIMARY=false);
alter node datanode_3 with (host='db-192-168-122-175', PRIMARY=false);
alter node datanode_4 with (host='db-192-168-122-176', PRIMARY=false);
alter node datanode_5 with (host='db-192-168-122-177', PRIMARY=false);
alter node datanode_6 with (host='db-192-168-122-178', PRIMARY=false);
alter node coordinate_1 with (host='db-192-168-122-173');
alter node coordinate_2 with (host='db-192-168-122-174');
alter node coordinate_3 with (host='db-192-168-122-175');
alter node coordinate_4 with (host='db-192-168-122-176');
alter node coordinate_5 with (host='db-192-168-122-177');
alter node coordinate_6 with (host='db-192-168-122-178');
select pgxc_pool_reload();
alter node datanode_1 with (PRIMARY=true);
select pgxc_pool_reload();


# 如果确认没有其他的primary=ture, 但是修改时还是报以下错, 执行select pgxc_pool_reload();无效, 那么退出coordinator后重新连进去再试一试,
# ERROR:  PGXC node datanode_1: two nodes cannot be primary
# 检查所有coordinate节点是否修改正确 : 

select oid,* from pgxc_node order by node_name;



修改完成后, 重启所有组件 : 
[stop顺序]

1. coordinator (如果配置了流复制, 那么先停1.primary, 再停2.standby)
(192.168.122.173 - 192.168.122.178)


pg_ctl -Z coordinator stop -m fast -D /data02/pgxc_coordinate


# 确认所有coordinator节点已关闭

2. datanode (如果配置了流复制, 那么先停1.primary, 再停2.standby)
(192.168.122.173 - 192.168.122.178)
pg_ctl -Z datanode stop -m fast -D /data02/pgxc_datanode
# 确认所有datanode节点已关闭

3. gtm_proxy
(192.168.122.173 - 192.168.122.178)
gtm_ctl -Z gtm_proxy stop -m fast -D /data02/pgxc_gtm_proxy
# 确认所有gtm_proxy节点已关闭

4. gtm
(192.168.122.171)
gtm_ctl -Z gtm stop -m fast -D /data02/pgxc_gtm
# 确认gtm节点已关闭

5. gtm_standby
(192.168.122.172)
gtm_ctl -Z gtm stop -m fast -D /data02/pgxc_gtm
# 确认gtm_standby节点已关闭


[startup顺序]

1. gtm
(192.168.122.171)
gtm_ctl -Z gtm start -D /data02/pgxc_gtm
# 确认gtm节点已开启

2. gtm_standby
(192.168.122.172)
gtm_ctl -Z gtm start -D /data02/pgxc_gtm
# 确认gtm_standby节点已开启

3. gtm_proxy
(192.168.122.173 - 192.168.122.178)
gtm_ctl -Z gtm_proxy start -D /data02/pgxc_gtm_proxy
# 确认所有gtm_proxy节点已开启

4. datanode (如果配置了流复制, 那么先启动1.primary, 再启动2.standby)
(192.168.122.173 - 192.168.122.178)
pg_ctl -Z datanode start -D /data02/pgxc_datanode
# 确认所有datanode节点已开启

5. coordinator (如果配置了流复制, 那么先启动1.primary, 再启动2.standby)
(192.168.122.173 - 192.168.122.178)
pg_ctl -Z coordinator start -D /data02/pgxc_coordinate
# 确认所有coordinator节点已开启



六, 新增coordinator节点.
1. 新增coordinator节点时, pgxc_node, pgxc_group, pgxc_class中的元数据是没有的. 需要处理.

七, 为什么各个coordinator的元数据信息会不一致?
例如: 192.168.122.173:1921 上有t1表, 但是192.168.122.174:1921上没有, 此时drop t1时会报错.
这个错误是怎么产生的呢?
例如在192.168.122.173:1921 创建t1表时, 192.168.122.174:1921还不在pgxc_node的coordinator列表中. 
所以192.168.122.174:1921不会自动创建这个元数据.
当发生不一致时可以使用pgxc_ddl来修复.
下一篇将讲一讲如何修复元数据.
