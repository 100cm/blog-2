PostgreSQL research

why you cann't create reference by objects(like mview,foreign table) other than TABLE

2015-04-22 9:28:17   查看原文>>

一位网友问我的一个问题，使用plproxy将数据库拆分后，如果有两个表一个在A库一个在B库，能不能创建他们之间的外键关联关系。
显然，目前是不行的，为什么呢？创建外键关系后，如果被关联表的值删除或变更，是可能影响关联表的关联关系的，所以这两者必须在同一个数据库，或者它们之间务必要能方便的维护这种关系，例如数据库可以自动的实行for update, for delete这样的操作。
假设我关联的表在另一个数据库，那么另一个数据库必须要能方便的自动实行for update,for delete这样的关系，这在目前的PostgreSQL是无法实现的。除非你自己去添加这部分代码。
我们举个例子，例如我创建一个跨库的外部表，然后在本地创建基于这个外部表的关联表，看看是否可行？
根据前面的知识了解，如果要建立这样的关联关系，那么外部表所在的数据库必须要能方便的操作本地的数据库对应的这个关联表，显然这个目前PostgreSQL没有实现这一的功能。

postgres@db-172-16-3-150-> psql
psql (9.4.1)
Type "help" for help.


外部表

postgres=# \det
 List of foreign tables
 Schema | Table | Server 
--------+-------+--------
 rmt    | ft1   | rmt
(1 row)
postgres=# \d rmt.ft1
          Foreign table "rmt.ft1"
 Column |  Type   | Modifiers | FDW Options 
--------+---------+-----------+-------------
 id     | integer |           | 
 info   | text    |           | 
Server: rmt
FDW Options: (schema_name 'public', table_name 'test')


对应的远程表

postgres=# truncate test;
TRUNCATE TABLE
postgres=# insert into test select generate_series(1,100);
INSERT 0 100
postgres=# alter table test add constraint pk_test primary key (id);
ALTER TABLE


创建基于外部表的关联关系，注意报错代码

postgres=# \set VERBOSITY verbose
postgres=# create table tttt (id int references rmt.ft1(id),info text,crt_time timestamp);
ERROR:  42809: referenced relation "ft1" is not a table
LOCATION:  ATAddForeignKeyConstraint, tablecmds.c:5937
postgres=# \q


这个错误来自如下代码，即需要检查关联表是否为TABLE，否则报错。
这不是简单的修改一下if (pkrel->rd_rel->relkind != RELKIND_RELATION)就可以的，因为还有我前面说的，需要处理那些关系。
src/backend/commands/tablecmds.c

        /*
         * Validity checks (permission checks wait till we have the column
         * numbers)
         */
        if (pkrel->rd_rel->relkind != RELKIND_RELATION)
                ereport(ERROR,
                                (errcode(ERRCODE_WRONG_OBJECT_TYPE),
                                 errmsg("referenced relation \"%s\" is not a table",
                                                RelationGetRelationName(pkrel))));


数据库所有的relkind如下：
src/include/catalog/pg_class.h

#define           RELKIND_RELATION                'r'           /* ordinary table */
#define           RELKIND_INDEX                   'i'           /* secondary index */
#define           RELKIND_SEQUENCE                'S'           /* sequence object */
#define           RELKIND_TOASTVALUE      't'           /* for out-of-line values */
#define           RELKIND_VIEW                    'v'           /* view */
#define           RELKIND_COMPOSITE_TYPE  'c'           /* composite type */
#define           RELKIND_FOREIGN_TABLE   'f'           /* foreign table */
#define           RELKIND_MATVIEW                 'm'           /* materialized view */



Flag Counter
