PostgreSQL research

Linux I/O Scheduler

2011-10-24 8:35:37   查看原文>>

RHEL 支持的I/O调度算法:
deadline - Deadline I/O scheduler
as - Anticipatory I/O scheduler
cfq - Complete Fair Queuing scheduler
noop - Noop I/O scheduler
查看当前的设备使用的调度算法:
[root@db-digoal ~]# cat /sys/block/sdb/queue/scheduler 
noop anticipatory [deadline] cfq 
表示当前使用的deadline.
红帽RHEL5默认使用cfq算法，但是这个算法可能会引发一些BUG。如
INFO: task pdflush:502 blocked for more than 120 seconds.
"echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
pdflush       D ffff81000100baa0     0   502    235           504   501 (L-TLB)
 ffff81033f69f740 0000000000000046 000000105f5d63c0 0000000000011200
 ffff81063ab7ff40 000000000000000a ffff81063fb867e0 ffff81010b7d2100
 000583692242e050 000000000000abd2 ffff81063fb869c8 0000000300000001
Call Trace:
 [<ffffffff8848e782>] :jbd2:do_get_write_access+0x204/0x404
 [<ffffffff800a28e2>] wake_bit_function+0x0/0x23
 [<ffffffff8848e9a4>] :jbd2:jbd2_journal_get_write_access+0x22/0x33
 [<ffffffff884c20d0>] :ext4:__ext4_journal_get_write_access+0x45/0x55
 [<ffffffff884c943e>] :ext4:ext4_mb_mark_diskspace_used+0xb8/0x3ed
 [<ffffffff884c4e64>] :ext4:ext4_mb_use_preallocated+0x1a6/0x1c7
 [<ffffffff884c99a5>] :ext4:ext4_mb_new_blocks+0x232/0x485
 [<ffffffff884c1c19>] :ext4:ext4_ext_get_blocks+0x12d4/0x161f
 [<ffffffff8824d15b>] :dm_mod:__split_bio+0x398/0x3b0
 [<ffffffff80017b93>] cache_grow+0x35a/0x3c1
 [<ffffffff80022214>] __up_read+0x19/0x7f
 [<ffffffff800232bb>] mempool_alloc+0x31/0xe7
 [<ffffffff884ace97>] :ext4:ext4_get_blocks+0x11b/0x1cf
 [<ffffffff884ad057>] :ext4:mpage_da_map_blocks+0xaf/0x667
 [<ffffffff80048015>] pagevec_lookup_tag+0x1a/0x21
 [<ffffffff800f6130>] write_cache_pages+0x164/0x332
 [<ffffffff884af066>] :ext4:__mpage_da_writepage+0x0/0x162
 [<ffffffff80047ff2>] __pagevec_release+0x19/0x22
 [<ffffffff800ddd4e>] __cache_alloc_node+0x9d/0xd2
 [<ffffffff884b08ba>] :ext4:ext4_da_writepages+0x334/0x4fc
 [<ffffffff8005ac1d>] do_writepages+0x20/0x2f
 [<ffffffff8002fc9d>] __writeback_single_inode+0x19e/0x318
 [<ffffffff80020fd6>] sync_sb_inodes+0x1b5/0x26f
 [<ffffffff800a269c>] keventd_create_kthread+0x0/0xc4
 [<ffffffff80051147>] writeback_inodes+0x82/0xd8
 [<ffffffff800cbb98>] wb_kupdate+0xd4/0x14e
 [<ffffffff80056632>] pdflush+0x0/0x1fb
 [<ffffffff80056783>] pdflush+0x151/0x1fb
 [<ffffffff800cbac4>] wb_kupdate+0x0/0x14e
 [<ffffffff80032974>] kthread+0xfe/0x132
 [<ffffffff8005dfb1>] child_rip+0xa/0x11
 [<ffffffff800a269c>] keventd_create_kthread+0x0/0xc4
 [<ffffffff80032876>] kthread+0x0/0x132
 [<ffffffff8005dfa7>] child_rip+0x0/0x11

红帽也没有给出很好的解决办法，如果不幸遇到这个BUG的话，可以考虑修改一下I/O调度算法。
修改如下 : 
[root@db-digoal ~]# vi /boot/grub/grub.conf
kernel /boot/vmlinuz-2.6.18-238.el5 ro root=LABEL=/ rhgb quiet elevator=deadline
重启系统。
重启后查看是否修改正确 : 
[root@db-digoal ~]# dmesg|grep scheduler
io scheduler deadline registered (default)

【参考】
https://bugzilla.redhat.com/show_bug.cgi?id=605444
http://bugs.centos.org/view.php?id=4515


