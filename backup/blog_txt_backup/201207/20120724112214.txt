PostgreSQL research

PostgreSQL DO SQL cann't return result is regretful

2012-07-24 11:22:14   查看原文>>

熟悉Oracle的朋友一定对它的HINT不陌生, 在SQL里面可以强制指定走索引还是全表扫描或者其他执行计划.
例如 select /*+ index_scan(?) */ a,b,c from table where ...;
详情可参考Oracle performance tuning手册.
在PostgreSQL 中, 虽然没有直接的指定走什么执行计划如, seqscan, hashjoin, mergejoin, nestloop, index only scan或者等等其他的node.
但是可以通过设置本地的一些参数来让PLANNER不选择某些执行计划.
如 : 

begin;
set local enable_seqscan=off;
set local enable_mergejoin=off;
set local enable_nestloop=off;
select ....
end;



这一连串SQL中的SELECT语句将不会优先选择全表扫描, merge join 和 nest loop join. 会优先使用index scan, index only scan, hash join等.
但是注意这有一个弊端, 写法过于复杂, 而且都需要启动和关闭事务操作, 增加了overhead.
那么使用session 级别的设置又不符合全局的配置标准, 也行其他SQL不需要关闭这些参数.
有没有好的办法来解决这个问题呢?

使用函数是一个解决办法, 可以把

set local enable_seqscan=off;


set local enable_mergejoin=off;
set local enable_nestloop=off;


这些封装在函数里面, 后面的SQL则遵循这些配置, 但是使用函数还是很繁琐, 很多SQL需要调整默认的话将需要创建很多个函数.

那么有没有更简便的使用方法呢, 例如DO语法行不行, 我们来测试一下就知道了 : 

digoal=> \set VERBOSITY verbose
digoal=> do language plpgsql $$
declare
begin
set local enable_seqscan=off;
set local enable_mergejoin=off;
set local enable_nestloop=off;
select generate_series(1,10),'DIGOAL','TEST';
end $$;
ERROR:  42601: query has no destination for result data
HINT:  If you want to discard the results of a SELECT, use PERFORM instead.
CONTEXT:  PL/pgSQL function inline_code_block line 7 at SQL statement
LOCATION:  exec_stmt_execsql, pl_exec.c:3200



显然不可以, 原因是DO语句不支持返回结果, 它是一个简单的执行器, 返回void.

DO executes an anonymous code block, or in other words a transient anonymous function in a procedural language.
The code block is treated as though it were the body of a function with no parameters, returning void. It is parsed and executed a single time.
The optional LANGUAGE clause can be written either before or after the code block.



这确实是一个遗憾, 不够还好, EnterpriseDB企业版提供了HINT的功能, 不知道何时能够移植到开源版本.
让我们一起来期待吧.
