PostgreSQL research

ipmitool power reset command shutdown server has a little delay

2012-07-17 10:46:16   查看原文>>

昨天在调试sky_postgresql_cluster(一个shell写的PostgreSQL集群管理工具)时, 发现了failover函数的一个BUG. 已经修正, 现将原因和修正方法记录如下.
sky_postgresql_cluster当发生failover时, 需要fence 异常的primary 主机, 然后使用ifup 启动VIP. 
在此之前VIP是启在primary 主机上的, 使用ifup启动接口, 有一个判断这个IP是否已经在网络的其他主机上. 如下 : 

/etc/sysconfig/network-scripts/ifup-eth
         if ! arping -q -c 2 -w 3 -D -I ${REALDEVICE} ${IPADDR} ; then
            echo $"Error, some other host already uses address ${IPADDR}."
            exit 1
         fi



注意到, ifup这个操作在pg_failover() 函数中是在fence成功之后执行的. 正常情况下, 关机后这个IP应该就不在存在了, arping这个IP应该返回正常. 但是却报异常了, 原因后面会详细指出.
sky_postgresql_cluster修正前, 所有操作都执行一次, 没有重试操作, 修正后函数如下, 重试60次 : 

pg_failover() {
FENCE_STATUS=1
PROMOTE_STATUS=1
IFUP_STATUS=1
echo -e "`date +%F%T` pg_failover fired."
# 1. fence primary host
echo -e "`date +%F%T` fence primary host fired."
for ((k=0;k<60;k++))
do
  # fence命令, 设备不同的话, fence命令可能不一样.
  ipmitool -L OPERATOR -H $FENCE_IP -U $FENCE_USER -P $FENCE_PWD power reset
  if [ $? -eq 0 ]; then
    echo -e "`date +%F%T` fence primary db host success."
    FENCE_STATUS=0
    break
  fi
  sleep 1
done
if [ $FENCE_STATUS -ne 0 ]; then
  echo -e "`date +%F%T` fence failed. Standby will not promote, please fix it manual."
  return $FENCE_STATUS
fi
# 2. 激活standby
echo -e "`date +%F%T` promote standby fired."
for ((l=0;l<60;l++))
do
  pg_ctl promote -D $PGDATA
  if [ $? -eq 0 ]; then
    echo -e "`date +%F%T` promote standby success."
    PROMOTE_STATUS=0
    break
  fi
  sleep 1
done
if [ $PROMOTE_STATUS -ne 0 ]; then
  echo -e "`date +%F%T` promote standby failed."
  return $PROMOTE_STATUS
fi
# 3. 起vip接口, 需要配置/etc/sudoers, 注释Defaults    requiretty
echo -e "`date +%F%T` ifup vip fired."
for ((m=0;m<60;m++))
do
  sudo /sbin/ifup $VIP_IF
  if [ $? -eq 0 ]; then
    echo -e "`date +%F%T` vip upped success."
    IFUP_STATUS=0
    break
  fi
  sleep 1
done
if [ $IFUP_STATUS -ne 0 ]; then
  echo -e "`date +%F%T` standby host ifup vip failed."
  return $IFUP_STATUS
fi
echo -e "`date +%F%T` pg_failover() function call success."
return 0
}



调试过程 : 
1. 在主库和备库上启动tcpdump监测arp包 : 

tcpdump -n -e |grep arp


2. tail 备库sky_postgresql_cluster日志.

tail -f -n 1 /tmp/sky_pg_clusterd.log


3. 关闭主库,

su - postgres
pg_ctl stop -m fast


4. 
/tmp/sky_pg_clusterd.log 切换日志如下, 注意时间点 : 

2012-07-1710:10:40 STD_TO_MASTER_STATUS is 2 , master is not health count 9 .

2012-07-1710:10:40 VOTE_TO_MASTER_STATUS is 2 , master is not health count 9 .

2012-07-1710:10:40 VOTEHOST_STATUS is 0 , master is not health count 9 .
2012-07-1710:10:40 pg_failover fired.
2012-07-1710:10:40 fence primary host fired.
Chassis Power Control: Reset
2012-07-1710:10:41 fence primary db host success.
2012-07-1710:10:41 promote standby fired.
server promoting
2012-07-1710:10:41 promote standby success.
2012-07-1710:10:41 ifup vip fired.
Error, some other host already uses address 192.168.169.116.
2012-07-1710:10:46 vip upped success.
2012-07-1710:10:46 pg_failover() function call success.


看到2012-07-1710:10:41的时候  Error, some other host already uses address 192.168.169.116.

5. 
同时观察到主库在被关机(ipmitool power reset)前 10:10:40 接收到的来自d4:be:d9:ad:9a:b6的arp请求包 : 

10:10:40.837809 d4:be:d9:ad:9a:b6 > Broadcast, ethertype ARP (0x0806), length 60: arp who-has 192.168.169.116 (Broadcast) tell 0.0.0.0
Last login: Tue Jul 17 10:10:17 2012 from 10.96.0.139



6. 同时观察到备库10:10:41 发送的ARP广播请求, 以及接收到的来自主库的arp响应包(从MAC地址可以看出) : 

10:10:41.138675 d4:be:d9:ad:9a:b6 > Broadcast, ethertype ARP (0x0806), length 42: arp who-has 192.168.169.116 (Broadcast) tell 0.0.0.0
10:10:41.138848 d4:be:d9:ad:97:7a > d4:be:d9:ad:9a:b6, ethertype ARP (0x0806), length 60: arp reply 192.168.169.116 is-at d4:be:d9:ad:97:7a


时间对不上是两主机存在一定的时间差.

那么报错的原因就很明朗了, ipmitool power reset （This command will perform a hard reset ）这个操作返回成功后网卡还可以在很短的时间内响应ARP请求. 或者说这个时候系统还没有真正SHUTDOWN. 

在使用时需注意.

【参考】
/etc/sysconfig/network-scripts/ifup-eth
https://github.com/digoal/sky_postgresql_cluster 


评论

francs - 2012-07-18 17:27:25

good !

