PostgreSQL research

PostgreSQL pending patch: window funciton lag & lead support SQL standard { RESPECT | IGNORE } NULLS

2013-08-23 8:05:53   查看原文>>

在SQL标准中, lag和lead窗口函数是支持保留或忽略空值的. 例如 : 在Oracle 11g中, 语法如下.

LAG
  { ( value_expr [, offset [, default]]) [ { RESPECT | IGNORE } NULLS ]
  | ( value_expr [ { RESPECT | IGNORE } NULLS ] [, offset [, default]] )
  }
  OVER ([ query_partition_clause ] order_by_clause)

{RESPECT | IGNORE} NULLS determines whether null values of value_expr are included in or eliminated from the calculation. The default is RESPECT NULLS.

目前PostgreSQL不支持IGNORE nulls, 参见.
http://www.postgresql.org/docs/devel/static/functions-window.html
Note: The SQL standard defines a RESPECT NULLS or IGNORE NULLS option for lead, lag,first_value, last_value, and nth_value. This is not implemented in PostgreSQL: the behavior is always the same as the standard's default, namely RESPECT NULLS. Likewise, the standard's FROM FIRST or FROM LAST option for nth_value is
not implemented: only the defaultFROM FIRST behavior is supported. (You can achieve the result of FROM LAST by reversing theORDER BY ordering.)

PostgreSQL的补丁下载 : 

wget http://www.postgresql.org/message-id/attachment/29641/lead-lag-ignore-nulls.patch


打补丁简单步骤如下 : 
下载补丁前1天的postgresql 源码 snapshot.

http://git.postgresql.org/gitweb/?p=postgresql.git;a=snapshot;h=e5592c61adb0766eaee53ec07d2f05783d1c6548;sf=tgz
tar -zxvf postgresql-e5592c6.tar.gz


下载补丁

[root@db-172-16-3-40 soft_bak]# cd postgresql-e5592c6
wget http://www.postgresql.org/message-id/attachment/29641/lead-lag-ignore-nulls.patch


应用补丁

[root@db-172-16-3-40 postgresql-e5592c6]# patch -p1 < ./lead-lag-ignore-nulls.patch 
patching file doc/src/sgml/func.sgml
Hunk #1 succeeded at 12279 (offset 4 lines).
Hunk #3 succeeded at 12309 (offset 4 lines).
Hunk #5 succeeded at 12420 (offset 4 lines).
patching file src/backend/executor/nodeWindowAgg.c
patching file src/backend/nodes/bitmapset.c
patching file src/backend/parser/gram.y
Hunk #4 succeeded at 11526 (offset -257 lines).
Hunk #6 succeeded at 12612 (offset -257 lines).
patching file src/backend/parser/parse_agg.c
patching file src/backend/parser/parse_func.c
patching file src/backend/utils/adt/ruleutils.c
patching file src/backend/utils/adt/windowfuncs.c
patching file src/include/nodes/bitmapset.h
patching file src/include/nodes/parsenodes.h
Hunk #1 succeeded at 403 (offset 5 lines).
patching file src/include/parser/kwlist.h
patching file src/include/windowapi.h
patching file src/test/regress/expected/window.out
patching file src/test/regress/sql/window.sql


打完补丁后, 如果是新安装库, 需要执行configure, 如果是已安装的, 只需要gmake和gmake install即可.

[root@db-172-16-3-40 postgresql-e5592c6]# ./configure --prefix=/home/pg94/pgsql9.4devel --with-pgport=2999 --with-perl --with-tcl --with-python --with-openssl --with-pam --without-ldap --with-libxml --with-libxslt --enable-thread-safety --with-wal-blocksize=16 --enable-dtrace && gmake && gmake install


初始化数据库等操作略, 下面要演示一下打完补丁后这个语法在pg中是否有效了 : 
在src/test/regress/expected/window.out中也包含了该部分语法的演示.

pg94@db-172-16-3-40-> psql
psql (9.4devel)
Type "help" for help.
digoal=# 
digoal=# create table test(id int primary key, num int, crt_time timestamp);
CREATE TABLE
digoal=# insert into test values (1, 101, now());
digoal=# insert into test values (2, 102, now());
digoal=# insert into test values (3, null, now());
digoal=# insert into test values (4, null, now());
digoal=# insert into test values (5, 103, now());
digoal=# insert into test values (6, 104, now());
digoal=# insert into test values (7, 106, now());
digoal=# insert into test values (8, null, now());
digoal=# insert into test values (9, 105, now());


digoal=# \pset null 空
Null display is "空".
当使用ignore nulls时, num为空值的行不计数. 所以id=3,4,5的前一行的num都取102.

digoal=# select *,lag(num,1) ignore nulls over (order by id) from test;
 id | num |          crt_time          | lag 
----+-----+----------------------------+-----
  1 | 101 | 2013-08-23 07:59:27.772587 |  空
  2 | 102 | 2013-08-23 07:59:31.188448 | 101
  3 |  空 | 2013-08-23 07:59:36.001469 | 102
  4 |  空 | 2013-08-23 07:59:39.826797 | 102
  5 | 103 | 2013-08-23 07:59:49.70349  | 102
  6 | 104 | 2013-08-23 07:59:58.774687 | 103
  7 | 106 | 2013-08-23 08:00:04.444463 | 104
  8 |  空 | 2013-08-23 08:00:09.669465 | 106
  9 | 105 | 2013-08-23 08:00:17.067823 | 106
(9 rows)


默认和oracle一样, 采用respect nulls.

digoal=# select *,lag(num,1) respect nulls over (order by id) from test;
 id | num |          crt_time          | lag 
----+-----+----------------------------+-----
  1 | 101 | 2013-08-23 07:59:27.772587 |  空
  2 | 102 | 2013-08-23 07:59:31.188448 | 101
  3 |  空 | 2013-08-23 07:59:36.001469 | 102
  4 |  空 | 2013-08-23 07:59:39.826797 |  空
  5 | 103 | 2013-08-23 07:59:49.70349  |  空
  6 | 104 | 2013-08-23 07:59:58.774687 | 103
  7 | 106 | 2013-08-23 08:00:04.444463 | 104
  8 |  空 | 2013-08-23 08:00:09.669465 | 106
  9 | 105 | 2013-08-23 08:00:17.067823 |  空
(9 rows)
digoal=# select *,lag(num,1) over (order by id) from test;
 id | num |          crt_time          | lag 
----+-----+----------------------------+-----
  1 | 101 | 2013-08-23 07:59:27.772587 |  空
  2 | 102 | 2013-08-23 07:59:31.188448 | 101
  3 |  空 | 2013-08-23 07:59:36.001469 | 102
  4 |  空 | 2013-08-23 07:59:39.826797 |  空
  5 | 103 | 2013-08-23 07:59:49.70349  |  空
  6 | 104 | 2013-08-23 07:59:58.774687 | 103
  7 | 106 | 2013-08-23 08:00:04.444463 | 104
  8 |  空 | 2013-08-23 08:00:09.669465 | 106
  9 | 105 | 2013-08-23 08:00:17.067823 |  空
(9 rows)



[参考]
1. http://www.postgresql.org/message-id/flat/CA+=vxNa5_N1q5q5OkxC0aQnNdbo2Ru6GVw+86wk+oNsUNJDLig@mail.gmail.com#CA+=vxNa5_N1q5q5OkxC0aQnNdbo2Ru6GVw+86wk+oNsUNJDLig@mail.gmail.com
Flag Counter
