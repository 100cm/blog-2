PostgreSQL research

PostgreSQL avoid rewrite table because extend column length - case

2013-01-07 16:01:35   查看原文>>

我们知道PostgreSQL 中给表的字段修改字段类型, 扩字段长度等操作可能会rewrite table(也就是重建表). 不同的版本是否需要rewrite表的触发条件不一样, 总的来说PostgreSQL 版本越高, 触发rewrite table的可能性越小. 具体参考版本的Release Notes.
下面将针对字段长度这个场景来规避一下rewrite table的可能性.
例如某个表的字段在使用一段时间后发现长度不够用了, 需要扩长度. 
一般的做法是

ALTER [ COLUMN ] column_name [ SET DATA ] TYPE data_type


这个版本较低的PostgreSQL 是会rewrite 表的.
要避免这个问题, 以字符串类型为例. 
1. 设计表的时候选择较大的范围如当前可能只需要10的长度, 但是表结构中可以使用1000的长度, 或者使用text类型.
10的长度限制可以放在程序端控制. 或则使用check约束.
那么如果使用check约束的话, 会带来多少的性能影响呢?
下面举例说明一下 : 

1. 数据库端不含约束的表 : 

digoal=> create table t1(info text);
CREATE TABLE



编辑pgbench测试脚本 : 

ocz@db-172-16-3-150-> cat t.sql
insert into t1 values ('1234567890');


测试结果 : 

ocz@db-172-16-3-150-> pgbench -M prepared -n -r -c 16 -j 4 -f ./t.sql -T 60 -h 127.0.0.1 -U digoal digoal
transaction type: Custom query
scaling factor: 1
query mode: prepared
number of clients: 16
number of threads: 4
duration: 60 s
number of transactions actually processed: 3816351
tps = 63601.341725 (including connections establishing)
tps = 63620.557482 (excluding connections establishing)
statement latencies in milliseconds:
        0.249796        insert into t1 values ('1234567890');




2. 创建数据库端含约束的表 : 

digoal=> create table t2(info text check (length(info)<=10));
CREATE TABLE


注意length(text)返回的是字符长度. 

PostgreSQL中varchar(10)指的也是10个字符.
postgres=# select length('你好');
 length 
--------
      2
(1 row)


编辑pgbench测试脚本 : 

ocz@db-172-16-3-150-> cat t.sql
insert into t2 values ('1234567890');


测试结果 : 

ocz@db-172-16-3-150-> pgbench -M prepared -n -r -c 16 -j 4 -f ./t.sql -T 60 -h 127.0.0.1 -U digoal digoal
transaction type: Custom query
scaling factor: 1
query mode: prepared
number of clients: 16
number of threads: 4
duration: 60 s
number of transactions actually processed: 3293606
tps = 54889.130026 (including connections establishing)
tps = 54905.454196 (excluding connections establishing)
statement latencies in milliseconds:
        0.289670        insert into t2 values ('1234567890');



使用length约束后, 插入性能下降13.7%.

【参考】
1. http://blog.163.com/digoal@126/blog/static/163877040201242485627235/

