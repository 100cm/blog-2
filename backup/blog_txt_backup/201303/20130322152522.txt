PostgreSQL research

CitusDB, PostgreSQLs Use Hadoop Distribute Query - 4 : Query Trace 1

2013-03-22 15:25:22   查看原文>>

上一篇blog介绍了CitusDB如何查询HDFS中的结构化数据, 有兴趣的朋友可以参考如下
http://blog.163.com/digoal@126/blog/static/1638770402013221475935/
本文主要针对CitusDB Query Data IN HDFS进一步的看一看CitusDB的Distributed Query.
环境还是上一篇BLOG的环境.
首先要修改一下postgresql.conf, 打印所有的SQL语句. 方便我们观察各个节点的动作.
# 所有节点修改postgresql.conf, 并使之生效.

[root@db-172-16-3-150 ~]# su - citusdb
citusdb@db-172-16-3-150-> cd $PGDATA
citusdb@db-172-16-3-150-> vi postgresql.conf
log_statement = 'all'
citusdb@db-172-16-3-150-> pg_ctl reload
server signaled
# 其他节点操作同上.


# 打开所有节点的csv LOG跟踪.

citusdb@db-172-16-3-150-> tail -f -n 0 /opt/citusdb/2.0/data/pg_log/postgresql-2013-03-22_111448.csv
[root@db-172-16-3-33 ~]# tail -f -n 0 /opt/citusdb/2.0/data/pg_log/postgresql-2013-03-22_082535.csv
[root@db-172-16-3-39 ~]# tail -f -n 0 /opt/citusdb/2.0/data/pg_log/postgresql-2013-03-22_082556.csv
[root@db-172-16-3-40 ~]# tail -f -n 0 /opt/citusdb/2.0/data/pg_log/postgresql-2013-03-22_082604.csv


# 当前的master节点postgresql.conf distribute相关配置如下 : 

#------------------------------------------------------------------------------
# DISTRIBUTED DATABASE
#------------------------------------------------------------------------------

#max_worker_nodes_tracked = 2048        # maximum worker nodes that are tracked
                                        # (change requires restart)

#shard_replication_factor = 2           # number of replicas to maintain
#shard_max_size = 2GB                   # maximum size a shard will grow
                                        # (stored permanently in system catalogs)

#remote_task_check_interval = 100ms     # 10-100000 milliseconds between checks
#task_tracker_active = off              # starts up the task tracker process
                                        # (change requires restart)
#task_tracker_delay = 200ms             # 10-100000 milliseconds between rounds
#max_tracked_tasks_per_node = 256       # maximum tasks that are tracked per node
                                        # (change requires restart)
#max_running_tasks_per_node = 8         # maximum tasks to run concurrently

#partition_buffer_size = 8MB            # per process repartitioning buffer size
#large_table_shard_count = 4            # table considered large after this size
#limit_clause_row_fetch_count = -1      # number of rows to fetch from each task
#task_assignment_policy = 'greedy'      # task assignment policy to use



1. # 单表查询

[root@db-172-16-3-150 ~]# su - citusdb
citusdb@db-172-16-3-150-> psql -h 127.0.0.1 -p 9900 -U digoal postgres
psql (9.2.1)
Type "help" for help.
postgres=# select * from customer_reviews limit 1;
  customer_id  | review_date | review_rating | review_votes | review_helpful_votes | product_id |      product_title      | p
roduct_sales_rank | product_group | product_category | product_subcategory |                   similar_product_ids           
         
---------------+-------------+---------------+--------------+----------------------+------------+-------------------------+--
------------------+---------------+------------------+---------------------+-------------------------------------------------
---------
 AQV87I9Y4CIQF | 1998-09-06  |             5 |           56 |                   55 | 1561580368 | Building for a Lifetime |  
           215662 | Book          | Home & Garden    | Home Design         | {1589230612,1881955656,0140258094,1931498113,007
0171513}
(1 row)


# 主节点临时表信息

postgres=# \dt
               List of relations
  Schema   |       Name        | Type  | Owner  
-----------+-------------------+-------+--------
 pg_temp_3 | pg_merge_job_0038 | table | digoal
postgres=# select * from pg_merge_job_0038;
 intermediate_column_0 | intermediate_column_1 | intermediate_column_2 | intermediate_column_3 | intermediate_column_4 | intermediat
e_column_5 |               intermediate_column_6                | intermediate_column_7 | intermediate_column_8 |   intermediate_col
umn_9   | intermediate_column_10 |                  intermediate_column_11                  
-----------------------+-----------------------+-----------------------+-----------------------+-----------------------+------------
-----------+----------------------------------------------------+-----------------------+-----------------------+-------------------
--------+------------------------+----------------------------------------------------------
 AQV87I9Y4CIQF         | 1998-09-06            |                     5 |                    56 |                    55 | 1561580368 
           | Building for a Lifetime                            |                215662 | Book                  | Home & Garden     
        | Home Design            | {1589230612,1881955656,0140258094,1931498113,0070171513}
 ATVPDKIKX0DER         | 1999-05-13            |                     5 |                     0 |                     0 | 0553573403 
           | A Game of Thrones (A Song of Ice and Fire, Book 1) |                   969 | Book                  | Science Fiction & 
Fantasy | Fantasy                | {0553579908,055357342X,0553801503,055357339X,1932796061}
 AE22YDHSBFYIP         | 1970-12-30            |                     5 |                     9 |                     0 | 1551802538 
           | Start and Run a Profitable Coffee Bar              |                689262 | Book                  | Business & Investi
ng      | General                | {0471136174,0910627312,047112138X,0786883561,0201570483}
 A1HBES881WYNYV        | 1999-09-11            |                     5 |                     1 |                     0 | 0767835093 
           | Go                                                 |                  7208 | DVD                   | Comedy            
        | General                | {B00006ADFY,B00004YMCF,B00004Z4WS,0792840127,B00005Q4CS}
 ATVPDKIKX0DER         | 1999-01-01            |                     1 |                     0 |                     0 | 0385484518 
           | Tuesdays with Morrie                               |                   757 | Book                  | Biographies & Memo
irs     | General                | {0786868716,0385318790,0385504209,0671027360,B00008L3SE}
(5 rows)

# 主节点日志

2013-03-22 13:46:24.373 CST,"digoal","postgres",17152,"127.0.0.1:20456",514be890.4300,10,"idle",2013-03-22 13:13:52 CST,2/80,0,LOG,00000,"statement: select * from customer_reviews limit 1;",,,,,,,,"exec_simple_query, postgres.c:969","psql"


# 33节点日志

2013-03-22 13:46:24.410 CST,,,17717,"",514bf030.4535,1,"",2013-03-22 13:46:24 CST,,0,LOG,00000,"connection received: host=172.16.3.150 port=20024",,,,,,,,"BackendInitialize, postmaster.c:3545",""
2013-03-22 13:46:24.411 CST,,,17718,"",514bf030.4536,1,"",2013-03-22 13:46:24 CST,,0,LOG,00000,"connection received: host=172.16.3.150 port=20026",,,,,,,,"BackendInitialize, postmaster.c:3545",""
2013-03-22 13:46:24.411 CST,,,17719,"",514bf030.4537,1,"",2013-03-22 13:46:24 CST,,0,LOG,00000,"connection received: host=172.16.3.150 port=20028",,,,,,,,"BackendInitialize, postmaster.c:3545",""
2013-03-22 13:46:24.510 CST,"postgres","postgres",17717,"172.16.3.150:20024",514bf030.4535,2,"authentication",2013-03-22 13:46:24 CST,2/519,0,LOG,00000,"connection authorized: user=postgres database=postgres",,,,,,,,"PerformAuthentication, postinit.c:230",""
2013-03-22 13:46:24.511 CST,"postgres","postgres",17718,"172.16.3.150:20026",514bf030.4536,2,"authentication",2013-03-22 13:46:24 CST,3/97,0,LOG,00000,"connection authorized: user=postgres database=postgres",,,,,,,,"PerformAuthentication, postinit.c:230",""
2013-03-22 13:46:24.511 CST,"postgres","postgres",17719,"172.16.3.150:20028",514bf030.4537,2,"authentication",2013-03-22 13:46:24 CST,4/41,0,LOG,00000,"connection authorized: user=postgres database=postgres",,,,,,,,"PerformAuthentication, postinit.c:230",""
2013-03-22 13:46:24.810 CST,"postgres","postgres",17717,"172.16.3.150:20024",514bf030.4535,3,"idle",2013-03-22 13:46:24 CST,2/520,0,LOG,00000,"statement: COPY (SELECT customer_id, review_date, review_rating, review_votes, review_helpful_votes, product_id, product_title, product_sales_rank, product_group, product_category, product_subcategory, similar_product_ids FROM customer_reviews_631600631725577683 customer_reviews WHERE true LIMIT 1::bigint) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""
2013-03-22 13:46:24.810 CST,"postgres","postgres",17718,"172.16.3.150:20026",514bf030.4536,3,"idle",2013-03-22 13:46:24 CST,3/98,0,LOG,00000,"statement: COPY (SELECT customer_id, review_date, review_rating, review_votes, review_helpful_votes, product_id, product_title, product_sales_rank, product_group, product_category, product_subcategory, similar_product_ids FROM customer_reviews_3598423008504059948 customer_reviews WHERE true LIMIT 1::bigint) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""
2013-03-22 13:46:24.810 CST,"postgres","postgres",17719,"172.16.3.150:20028",514bf030.4537,3,"idle",2013-03-22 13:46:24 CST,4/42,0,LOG,00000,"statement: COPY (SELECT customer_id, review_date, review_rating, review_votes, review_helpful_votes, product_id, product_title, product_sales_rank, product_group, product_category, product_subcategory, similar_product_ids FROM customer_reviews_17225231375097368086 customer_reviews WHERE true LIMIT 1::bigint) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""
2013-03-22 13:46:25.009 CST,"postgres","postgres",17717,"172.16.3.150:20024",514bf030.4535,4,"idle",2013-03-22 13:46:24 CST,,0,LOG,00000,"disconnection: session time: 0:00:00.599 user=postgres database=postgres host=172.16.3.150 port=20024",,,,,,,,"log_disconnections, postgres.c:4477",""
2013-03-22 13:46:25.010 CST,"postgres","postgres",17718,"172.16.3.150:20026",514bf030.4536,4,"idle",2013-03-22 13:46:24 CST,,0,LOG,00000,"disconnection: session time: 0:00:00.599 user=postgres database=postgres host=172.16.3.150 port=20026",,,,,,,,"log_disconnections, postgres.c:4477",""
2013-03-22 13:46:25.010 CST,"postgres","postgres",17719,"172.16.3.150:20028",514bf030.4537,4,"idle",2013-03-22 13:46:24 CST,,0,LOG,00000,"disconnection: session time: 0:00:00.599 user=postgres database=postgres host=172.16.3.150 port=20028",,,,,,,,"log_disconnections, postgres.c:4477",""


# 39节点日志

2013-03-22 13:46:24.418 CST,,,9244,"",514bf030.241c,1,"",2013-03-22 13:46:24 CST,,0,LOG,00000,"connection received: host=172.16.3.150 port=12944",,,,,,,,"BackendInitialize, postmaster.c:3545",""
2013-03-22 13:46:24.419 CST,,,9245,"",514bf030.241d,1,"",2013-03-22 13:46:24 CST,,0,LOG,00000,"connection received: host=172.16.3.150 port=12946",,,,,,,,"BackendInitialize, postmaster.c:3545",""
2013-03-22 13:46:24.518 CST,"postgres","postgres",9245,"172.16.3.150:12946",514bf030.241d,2,"authentication",2013-03-22 13:46:24 CST,3/61,0,LOG,00000,"connection authorized: user=postgres database=postgres",,,,,,,,"PerformAuthentication, postinit.c:230",""
2013-03-22 13:46:24.518 CST,"postgres","postgres",9244,"172.16.3.150:12944",514bf030.241c,2,"authentication",2013-03-22 13:46:24 CST,2/540,0,LOG,00000,"connection authorized: user=postgres database=postgres",,,,,,,,"PerformAuthentication, postinit.c:230",""
2013-03-22 13:46:24.818 CST,"postgres","postgres",9244,"172.16.3.150:12944",514bf030.241c,3,"idle",2013-03-22 13:46:24 CST,2/541,0,LOG,00000,"statement: COPY (SELECT customer_id, review_date, review_rating, review_votes, review_helpful_votes, product_id, product_title, product_sales_rank, product_group, product_category, product_subcategory, similar_product_ids FROM customer_reviews_2698407172708592541 customer_reviews WHERE true LIMIT 1::bigint) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""
2013-03-22 13:46:24.818 CST,"postgres","postgres",9245,"172.16.3.150:12946",514bf030.241d,3,"idle",2013-03-22 13:46:24 CST,3/62,0,LOG,00000,"statement: COPY (SELECT customer_id, review_date, review_rating, review_votes, review_helpful_votes, product_id, product_title, product_sales_rank, product_group, product_category, product_subcategory, similar_product_ids FROM customer_reviews_16398646636484320133 customer_reviews WHERE true LIMIT 1::bigint) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""
2013-03-22 13:46:25.017 CST,"postgres","postgres",9244,"172.16.3.150:12944",514bf030.241c,4,"idle",2013-03-22 13:46:24 CST,,0,LOG,00000,"disconnection: session time: 0:00:00.599 user=postgres database=postgres host=172.16.3.150 port=12944",,,,,,,,"log_disconnections, postgres.c:4477",""
2013-03-22 13:46:25.017 CST,"postgres","postgres",9245,"172.16.3.150:12946",514bf030.241d,4,"idle",2013-03-22 13:46:24 CST,,0,LOG,00000,"disconnection: session time: 0:00:00.598 user=postgres database=postgres host=172.16.3.150 port=12946",,,,,,,,"log_disconnections, postgres.c:4477",""


# 40节点日志

无


# 日志分析
此表一共有5个shard, 如下 : 

postgres=# select * from pg_dist_shard;
 logicalrelid |       shardid        | shardstorage | shardalias | shardminvalue | shardmaxvalue 
--------------+----------------------+--------------+------------+---------------+---------------
        16403 | -1221512698612183530 | f            |            | 1999-01-01    | 1999-05-13
        16403 |  2698407172708592541 | f            |            | 1999-05-13    | 1999-09-11
        16403 |   631600631725577683 | f            |            | 1998-09-06    | 1998-12-31
        16403 | -2048097437225231483 | f            |            | 1999-09-11    | 1999-12-31
        16403 |  3598423008504059948 | f            |            | 1970-12-30    | 1998-09-06
(5 rows)
postgres=# select * from pg_dist_shard_placement;
       shardid        | shardstate | shardlength |          nodename           | nodeport 
----------------------+------------+-------------+-----------------------------+----------
 -2048097437225231483 |          1 |    64029428 | db-172-16-3-33.sky-mobi.com |     9900
 -2048097437225231483 |          1 |    64029428 | db-172-16-3-39.sky-mobi.com |     9900
 -2048097437225231483 |          1 |    64029428 | db-172-16-3-40.sky-mobi.com |     9900
 -1221512698612183530 |          1 |    67108864 | db-172-16-3-33.sky-mobi.com |     9900
 -1221512698612183530 |          1 |    67108864 | db-172-16-3-39.sky-mobi.com |     9900
 -1221512698612183530 |          1 |    67108864 | db-172-16-3-40.sky-mobi.com |     9900
   631600631725577683 |          1 |    34190254 | db-172-16-3-33.sky-mobi.com |     9900
   631600631725577683 |          1 |    34190254 | db-172-16-3-39.sky-mobi.com |     9900
   631600631725577683 |          1 |    34190254 | db-172-16-3-40.sky-mobi.com |     9900
  2698407172708592541 |          1 |    67108864 | db-172-16-3-33.sky-mobi.com |     9900
  2698407172708592541 |          1 |    67108864 | db-172-16-3-39.sky-mobi.com |     9900
  2698407172708592541 |          1 |    67108864 | db-172-16-3-40.sky-mobi.com |     9900
  3598423008504059948 |          1 |    67108864 | db-172-16-3-33.sky-mobi.com |     9900
  3598423008504059948 |          1 |    67108864 | db-172-16-3-39.sky-mobi.com |     9900
  3598423008504059948 |          1 |    67108864 | db-172-16-3-40.sky-mobi.com |     9900
(15 rows)


5个shard , 对应HDFS中的BLOCK, 也对应5个外部表.
所以在查询limit 1时, 临时表中有5条记录. 在33,39的日志中能看到33,39上分别执行了以下SQL : 

COPY (SELECT customer_id, review_date, review_rating, review_votes, review_helpful_votes, product_id, product_title, product_sales_rank, product_group, product_category, product_subcategory, similar_product_ids FROM customer_reviews_631600631725577683 customer_reviews WHERE true LIMIT 1::bigint) TO STDOUT
COPY (SELECT customer_id, review_date, review_rating, review_votes, review_helpful_votes, product_id, product_title, product_sales_rank, product_group, product_category, product_subcategory, similar_product_ids FROM customer_reviews_17225231375097368086 customer_reviews WHERE true LIMIT 1::bigint) TO STDOUT
COPY (SELECT customer_id, review_date, review_rating, review_votes, review_helpful_votes, product_id, product_title, product_sales_rank, product_group, product_category, product_subcategory, similar_product_ids FROM customer_reviews_3598423008504059948 customer_reviews WHERE true LIMIT 1::bigint) TO STDOUT
COPY (SELECT customer_id, review_date, review_rating, review_votes, review_helpful_votes, product_id, product_title, product_sales_rank, product_group, product_category, product_subcategory, similar_product_ids FROM customer_reviews_2698407172708592541 customer_reviews WHERE true LIMIT 1::bigint) TO STDOUT
COPY (SELECT customer_id, review_date, review_rating, review_votes, review_helpful_votes, product_id, product_title, product_sales_rank, product_group, product_category, product_subcategory, similar_product_ids FROM customer_reviews_16398646636484320133 customer_reviews WHERE true LIMIT 1::bigint) TO STDOUT


# 另外从日志中还能看到, 连接worker节点用的是postgres用户, 不管foreign table的owner是不是postgres都如此 : 

postgres=# select rolname from pg_roles where oid=(select relowner from pg_class where relname='customer_reviews');
 rolname  
----------
 postgres
(1 row)
postgres=# alter foreign table customer_reviews owner to digoal;
ALTER FOREIGN TABLE
postgres=# \c postgres digoal
You are now connected to database "postgres" as user "digoal".
postgres=# select * from customer_reviews limit 1;
  customer_id  | review_date | review_rating | review_votes | review_helpful_votes | product_id |      product_title      | product_
sales_rank | product_group | product_category | product_subcategory |                   similar_product_ids                    
---------------+-------------+---------------+--------------+----------------------+------------+-------------------------+---------
-----------+---------------+------------------+---------------------+----------------------------------------------------------
 AQV87I9Y4CIQF | 1998-09-06  |             5 |           56 |                   55 | 1561580368 | Building for a Lifetime |         
    215662 | Book          | Home & Garden    | Home Design         | {1589230612,1881955656,0140258094,1931498113,0070171513}
(1 row)


# 修改owner后还是以postgres用户去连接worker节点.


2013-03-22 13:31:38.259 CST,"postgres","postgres",17659,"172.16.3.150:52344",514becb9.44fb,3,"idle",2013-03-22 13:31:37 CST,2/484,0,LOG,00000,"statement: COPY (SELECT customer_id, review_date, review_rating, review_votes, review_helpful_votes, product_id, product_title, product_sales_rank, product_group, product_category, product_subcategory, similar_product_ids FROM customer_reviews_631600631725577683 customer_reviews WHERE true LIMIT 1::bigint) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""
2013-03-22 13:31:38.259 CST,"postgres","postgres",17660,"172.16.3.150:52346",514becb9.44fc,3,"idle",2013-03-22 13:31:37 CST,3/92,0,LOG,00000,"statement: COPY (SELECT customer_id, review_date, review_rating, review_votes, review_helpful_votes, product_id, product_title, product_sales_rank, product_group, product_category, product_subcategory, similar_product_ids FROM customer_reviews_3598423008504059948 customer_reviews WHERE true LIMIT 1::bigint) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""
2013-03-22 13:31:38.261 CST,"postgres","postgres",17661,"172.16.3.150:52348",514becb9.44fd,3,"idle",2013-03-22 13:31:37 CST,4/36,0,LOG,00000,"statement: COPY (SELECT customer_id, review_date, review_rating, review_votes, review_helpful_votes, product_id, product_title, product_sales_rank, product_group, product_category, product_subcategory, similar_product_ids FROM customer_reviews_17225231375097368086 customer_reviews WHERE true LIMIT 1::bigint) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""


# 所以数据库中必须要有名为postgres的用户. 
# 40节点完全没有被用上, 这个和task_assignment_policy配置有关, 现在是greedy.
# 改成round-robin后重新执行SQL, 1个SQL的查询会全部跑到1个节点上去执行, 再次执行又会全部跑到另一个节点. 轮循.

postgres=#   set task_assignment_policy='round-robin';
SET
postgres=# select * from customer_reviews limit 1;


# 40节点日志 : 


2013-03-22 13:57:17.577 CST,"postgres","postgres",5582,"172.16.3.150:47897",514bf2bd.15ce,3,"idle",2013-03-22 13:57:17 CST,2/523,0,LOG,00000,"statement: COPY (SELECT customer_id, review_date, review_rating, review_votes, review_helpful_votes, product_id, product_title, product_sales_rank, product_group, product_category, product_subcategory, similar_product_ids FROM customer_reviews_631600631725577683 customer_reviews WHERE true LIMIT 1::bigint) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""
2013-03-22 13:57:17.577 CST,"postgres","postgres",5583,"172.16.3.150:47898",514bf2bd.15cf,3,"idle",2013-03-22 13:57:17 CST,3/20,0,LOG,00000,"statement: COPY (SELECT customer_id, review_date, review_rating, review_votes, review_helpful_votes, product_id, product_title, product_sales_rank, product_group, product_category, product_subcategory, similar_product_ids FROM customer_reviews_2698407172708592541 customer_reviews WHERE true LIMIT 1::bigint) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""
2013-03-22 13:57:17.577 CST,"postgres","postgres",5584,"172.16.3.150:47899",514bf2bd.15d0,3,"idle",2013-03-22 13:57:17 CST,4/2,0,LOG,00000,"statement: COPY (SELECT customer_id, review_date, review_rating, review_votes, review_helpful_votes, product_id, product_title, product_sales_rank, product_group, product_category, product_subcategory, similar_product_ids FROM customer_reviews_3598423008504059948 customer_reviews WHERE true LIMIT 1::bigint) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""
2013-03-22 13:57:17.577 CST,"postgres","postgres",5585,"172.16.3.150:47900",514bf2bd.15d1,3,"idle",2013-03-22 13:57:17 CST,5/2,0,LOG,00000,"statement: COPY (SELECT customer_id, review_date, review_rating, review_votes, review_helpful_votes, product_id, product_title, product_sales_rank, product_group, product_category, product_subcategory, similar_product_ids FROM customer_reviews_16398646636484320133 customer_reviews WHERE true LIMIT 1::bigint) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""
2013-03-22 13:57:17.578 CST,"postgres","postgres",5586,"172.16.3.150:47901",514bf2bd.15d2,3,"idle",2013-03-22 13:57:17 CST,6/2,0,LOG,00000,"statement: COPY (SELECT customer_id, review_date, review_rating, review_votes, review_helpful_votes, product_id, product_title, product_sales_rank, product_group, product_category, product_subcategory, similar_product_ids FROM customer_reviews_17225231375097368086 customer_reviews WHERE true LIMIT 1::bigint) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""



2. # 可能需要1次map reduce 过程的聚合查询
先把上面修改过的参数改回去 : 

postgres=# set task_assignment_policy = 'greedy';
SET


postgres=# select count(*) from customer_reviews;
  count  
---------
 1762499
(1 row)


# 主节点日志

2013-03-22 14:05:50.243 CST,"digoal","postgres",17793,"127.0.0.1:39421",514bf4ac.4581,4,"idle",2013-03-22 14:05:32 CST,2/179,0,LOG,00000,"statement: select count(*) from customer_reviews;",,,,,,,,"exec_simple_query, postgres.c:969","psql"


# 33节点日志


2013-03-22 14:05:50.802 CST,"postgres","postgres",17787,"172.16.3.150:63037",514bf4be.457b,3,"idle",2013-03-22 14:05:50 CST,2/562,0,LOG,00000,"statement: COPY (SELECT count(*) AS count FROM customer_reviews_631600631725577683 customer_reviews WHERE true) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""
2013-03-22 14:05:50.802 CST,"postgres","postgres",17788,"172.16.3.150:63039",514bf4be.457c,3,"idle",2013-03-22 14:05:50 CST,3/102,0,LOG,00000,"statement: COPY (SELECT count(*) AS count FROM customer_reviews_3598423008504059948 customer_reviews WHERE true) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""
2013-03-22 14:05:50.804 CST,"postgres","postgres",17789,"172.16.3.150:63041",514bf4be.457d,3,"idle",2013-03-22 14:05:50 CST,4/46,0,LOG,00000,"statement: COPY (SELECT count(*) AS count FROM customer_reviews_17225231375097368086 customer_reviews WHERE true) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""


# 39节点日志


2013-03-22 14:05:50.762 CST,"postgres","postgres",9310,"172.16.3.150:11159",514bf4be.245e,3,"idle",2013-03-22 14:05:50 CST,2/581,0,LOG,00000,"statement: COPY (SELECT count(*) AS count FROM customer_reviews_2698407172708592541 customer_reviews WHERE true) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""
2013-03-22 14:05:50.762 CST,"postgres","postgres",9311,"172.16.3.150:11161",514bf4be.245f,3,"idle",2013-03-22 14:05:50 CST,3/64,0,LOG,00000,"statement: COPY (SELECT count(*) AS count FROM customer_reviews_16398646636484320133 customer_reviews WHERE true) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""


# 40节点日志

无


# 临时表信息, 就是在worker节点上执行的结果. 1个临时表可以认为是一次map 和1次reduce.

postgres=# \dt
               List of relations
  Schema   |       Name        | Type  | Owner  
-----------+-------------------+-------+--------
 pg_temp_2 | pg_merge_job_0043 | table | digoal
(1 row)
postgres=# select * from pg_merge_job_0043 ;
 intermediate_column_0 
-----------------------
                201418
                397862
                388439
                377161
                397619
(5 rows)



3. # 可能需要多次map reduce 过程的聚合查询, 不支持.
# count(distinct)

postgres=# select count(distinct product_title) from customer_reviews ;
ERROR:  cannot compute aggregate (distinct)
DETAIL:  table partitioning is unsuitable for aggregate (distinct)


# 子查询

postgres=# select count(*) from (select 1 from customer_reviews group by product_title) t;
ERROR:  cannot perform distributed planning on this query
DETAIL:  Complex table expressions are currently unsupported


# with语法

postgres=# with t as (select 1 from customer_reviews group by product_title) select count(*) from t;
ERROR:  cannot perform distributed planning on this query
DETAIL:  Complex table expressions are currently unsupported


# group by 后数据插入临时表

postgres=# create temp table tmp_cnt (c1 int2);
CREATE TABLE
postgres=# \d tmp_cnt 
   Table "pg_temp_2.tmp_cnt"
 Column |   Type   | Modifiers 
--------+----------+-----------
 c1     | smallint | 
postgres=# \set VERBOSITY verbose
postgres=# insert into tmp_cnt select 1 from customer_reviews group by product_title;
ERROR:  0A000: cannot execute COPY on a distributed table on master node
LOCATION:  PreventCommandIfMasterTable, utility.c:360


# distributed 表数据直接插入临时表

postgres=#  insert into tmp_cnt select 1 from customer_reviews;
ERROR:  0A000: cannot execute COPY on a distributed table on master node
LOCATION:  PreventCommandIfMasterTable, utility.c:360


# 函数中prepared statement

postgres=# do language plpgsql $$
declare
  i int8; 
  x record;
begin
  i := 0;
  for x in select 1 from customer_reviews group by product_title loop
    i := i+1;
  end loop;
  raise notice '%', i;
end;
$$;
ERROR:  0A000: cannot execute PREPARE for a distributed query plan
CONTEXT:  PL/pgSQL function inline_code_block line 6 at FOR over EXECUTE statement
LOCATION:  PreventCommandIfMultiPlan, utility.c:376


# 函数中动态SQL

postgres=# do language plpgsql $$
declare
  i int8; 
  x record; 
  v_sql text;
begin 
  v_sql := 'select 1 from customer_reviews group by product_title';
  i := 0;
  for x in execute v_sql loop                                                  
    i := i+1;
  end loop;
  raise notice '%', i;
end;
$$;
ERROR:  0A000: cannot execute PREPARE for a distributed query plan
CONTEXT:  PL/pgSQL function inline_code_block line 6 at FOR over EXECUTE statement
LOCATION:  PreventCommandIfMultiPlan, utility.c:376


# 窗口函数 : 

postgres=# select row_number() over(partition by review_date order by review_rating desc) AS rn,* from customer_reviews ; 
ERROR:  0A000: cannot perform distributed planning on this query
DETAIL:  Window functions are currently unsupported
LOCATION:  ErrorIfQueryNotSupported, multi_logical_planner.c:240


# 一般的group by

postgres=# select product_group,count(*) from customer_reviews group by product_group order by product_group;
 product_group |  count  
---------------+---------
 Book          | 1198214
 CE            |       1
 DVD           |  121418
 Music         |  300628
 Software      |       1
 Toy           |       3
 Video         |  142234
(7 rows)

# 主节点日志

2013-03-22 14:22:46.342 CST,"digoal","postgres",17793,"127.0.0.1:39421",514bf4ac.4581,45,"idle",2013-03-22 14:05:32 CST,2/208,0,LOG,00000,"statement: select product_group,count(*) from customer_reviews group by product_group order by product_group;",,,,,,,,"exec_simple_query, postgres.c:969","psql"


# 33节点日志


2013-03-22 14:22:46.701 CST,"postgres","postgres",17994,"172.16.3.150:30645",514bf8b6.464a,3,"idle",2013-03-22 14:22:46 CST,2/600,0,LOG,00000,"statement: COPY (SELECT product_group, count(*) AS count FROM customer_reviews_631600631725577683 customer_reviews WHERE true GROUP BY product_group) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""
2013-03-22 14:22:46.703 CST,"postgres","postgres",17996,"172.16.3.150:30649",514bf8b6.464c,3,"idle",2013-03-22 14:22:46 CST,4/52,0,LOG,00000,"statement: COPY (SELECT product_group, count(*) AS count FROM customer_reviews_17225231375097368086 customer_reviews WHERE true GROUP BY product_group) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""
2013-03-22 14:22:46.703 CST,"postgres","postgres",17995,"172.16.3.150:30647",514bf8b6.464b,3,"idle",2013-03-22 14:22:46 CST,3/108,0,LOG,00000,"statement: COPY (SELECT product_group, count(*) AS count FROM customer_reviews_3598423008504059948 customer_reviews WHERE true GROUP BY product_group) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""


# 39节点日志


2013-03-22 14:22:46.735 CST,"postgres","postgres",9383,"172.16.3.150:53185",514bf8b6.24a7,3,"idle",2013-03-22 14:22:46 CST,2/621,0,LOG,00000,"statement: COPY (SELECT product_group, count(*) AS count FROM customer_reviews_16398646636484320133 customer_reviews WHERE true GROUP BY product_group) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""
2013-03-22 14:22:46.735 CST,"postgres","postgres",9382,"172.16.3.150:53183",514bf8b6.24a6,3,"idle",2013-03-22 14:22:46 CST,3/70,0,LOG,00000,"statement: COPY (SELECT product_group, count(*) AS count FROM customer_reviews_2698407172708592541 customer_reviews WHERE true GROUP BY product_group) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""


# 40节点日志

无


# 临时表

postgres=# select * from pg_merge_job_0051;
 intermediate_column_0 | intermediate_column_1 
-----------------------+-----------------------
 Music                 |                 37531
 DVD                   |                 10777
 Video                 |                 12859
 Book                  |                140251
 Music                 |                 80643
 Video                 |                 41531
 DVD                   |                 35566
 Book                  |                240121
 Toy                   |                     1
 Music                 |                 32153
 Video                 |                  2768
 DVD                   |                  2020
 Book                  |                351497
 Toy                   |                     1
 Music                 |                 77927
 CE                    |                     1
 DVD                   |                 34153
 Video                 |                 37810
 Book                  |                227268
 Toy                   |                     1
 Software              |                     1
 Music                 |                 72374
 DVD                   |                 38902
 Video                 |                 47266
 Book                  |                239077
(25 rows)


# 求平均值

postgres=# select avg(review_rating),product_group from customer_reviews group by product_group;
        avg         | product_group 
--------------------+---------------
 4.2773476749740566 | DVD
 4.2944774472673496 | Book
 4.4846521282116104 | Music
 2.0000000000000000 | CE
 4.3278330075790599 | Video
 5.0000000000000000 | Toy
 4.0000000000000000 | Software
(7 rows)


# 主节点日志

2013-03-22 14:32:32.451 CST,"digoal","postgres",17793,"127.0.0.1:39421",514bf4ac.4581,71,"idle",2013-03-22 14:05:32 CST,2/232,0,LOG,00000,"statement: select avg(review_rating),product_group from customer_reviews group by product_group;",,,,,,,,"exec_simple_query, postgres.c:969","psql"


# 33节点日志

2013-03-22 14:32:32.838 CST,"postgres","postgres",18034,"172.16.3.150:17816",514bfb00.4672,3,"idle",2013-03-22 14:32:32 CST,3/124,0,LOG,00000,"statement: COPY (SELECT sum(review_rating) AS avg, count(*) AS avg, product_group FROM customer_reviews_631600631725577683 customer_reviews WHERE true GROUP BY product_group) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""
2013-03-22 14:32:32.841 CST,"postgres","postgres",18036,"172.16.3.150:17820",514bfb00.4674,3,"idle",2013-03-22 14:32:32 CST,5/14,0,LOG,00000,"statement: COPY (SELECT sum(review_rating) AS avg, count(*) AS avg, product_group FROM customer_reviews_17225231375097368086 customer_reviews WHERE true GROUP BY product_group) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""
2013-03-22 14:32:32.841 CST,"postgres","postgres",18035,"172.16.3.150:17818",514bfb00.4673,3,"idle",2013-03-22 14:32:32 CST,4/58,0,LOG,00000,"statement: COPY (SELECT sum(review_rating) AS avg, count(*) AS avg, product_group FROM customer_reviews_3598423008504059948 customer_reviews WHERE true GROUP BY product_group) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""


# 39节点日志

2013-03-22 14:32:32.847 CST,"postgres","postgres",9419,"172.16.3.150:10550",514bfb00.24cb,3,"idle",2013-03-22 14:32:32 CST,3/76,0,LOG,00000,"statement: COPY (SELECT sum(review_rating) AS avg, count(*) AS avg, product_group FROM customer_reviews_2698407172708592541 customer_reviews WHERE true GROUP BY product_group) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""
2013-03-22 14:32:32.847 CST,"postgres","postgres",9420,"172.16.3.150:10552",514bfb00.24cc,3,"idle",2013-03-22 14:32:32 CST,2/647,0,LOG,00000,"statement: COPY (SELECT sum(review_rating) AS avg, count(*) AS avg, product_group FROM customer_reviews_16398646636484320133 customer_reviews WHERE true GROUP BY product_group) TO STDOUT",,,,,,,,"exec_simple_query, postgres.c:969",""


# 40节点日志

无



续 : 
http://blog.163.com/digoal@126/blog/static/163877040201322232541166/
