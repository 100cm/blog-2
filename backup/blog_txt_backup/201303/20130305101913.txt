PostgreSQL research

PostgreSQL 1st materialized view bond in 9.3

2013-03-05 10:19:13   查看原文>>

使用过Oracle的朋友可能对物化视图并不陌生, 说白了就是有数据的视图.
普通视图可以带来一些好处如下 : 
1. 经常用到的复杂查询写成视图, 可以简化查询语句.
2. 另外就是权限控制, 如果仅允许用户查询表的部分数据, 直接赋予表权限显然不恰当, 创建视图后赋予视图的查询权限则控制得更细致一些.
物化视图除了有以上好处之外, 还带来了其他好处 : 
1. 由于物化视图有数据, 所以基于物化视图的查询比普通视图的查询扫描的数据更少. 并且物化视图上也可以建立索引, 所以查询效率比在普通视图上更高.
2. 物化视图用于远程数据表的话, 规避了因为网络波动导致的查询堵塞问题.

2013-03-04 PostgreSQL 增加了物化视图的功能. 目前功能非常简陋, 仅仅支持全刷新, 不支持增量刷新. 
目前PostgreSQL 中 create materialized view as query相当于是create table as query. 但是materialized view 记录了query. 方便日后刷新mview.
在此之前, PostgreSQL有个插件叫snapshot, 支持从PostgreSQL 或 Oracle增量刷新的物化视图, 但是需要perl的支持. 可参考本文末尾的链接.
创建物化视图的语法 : 

Command:     CREATE MATERIALIZED VIEW
Description: define a new materialized view
Syntax:
CREATE [ UNLOGGED ] MATERIALIZED VIEW table_name
    [ (column_name [, ...] ) ]
    [ WITH ( storage_parameter [= value] [, ... ] ) ]
    [ TABLESPACE tablespace_name ]
    AS query
    [ WITH [ NO ] DATA ]


-- with no data表示创建物化视图时不加载数据, 日后使用REFRESH MATERIALIZED VIEW刷新.
刷新语法 : 

Command:     REFRESH MATERIALIZED VIEW
Description: replace the contents of a materialized view
Syntax:
REFRESH MATERIALIZED VIEW name
    [ WITH [ NO ] DATA ]


-- with no data表示把物化视图的数据清除

测试 : 

digoal=# create table test (id int, info text, crt_time timestamp);
CREATE TABLE
digoal=# insert into test select generate_series(1,1000),'test',clock_timestamp();
INSERT 0 1000
-- 创建物化视图
digoal=# create unlogged materialized view mv_test as select * from test where id<100 with no data;
SELECT 0
digoal=# select * from mv_test;
ERROR:  materialized view "mv_test" has not been populated
HINT:  Use the REFRESH MATERIALIZED VIEW command.
-- 刷新数据
digoal=# refresh MATERIALIZED VIEW mv_test with data;
REFRESH MATERIALIZED VIEW
digoal=# select count(*) from mv_test;
 count 
-------
    99
(1 row)
-- 清除数据
digoal=# refresh MATERIALIZED VIEW mv_test with no data;
REFRESH MATERIALIZED VIEW
digoal=# select count(*) from mv_test;
ERROR:  materialized view "mv_test" has not been populated
HINT:  Use the REFRESH MATERIALIZED VIEW command.



【参考】
1. http://blog.163.com/digoal@126/blog/static/1638770402010830111515931/
2. http://blog.163.com/digoal@126/blog/static/1638770402010830112443459/
3. http://blog.163.com/digoal@126/blog/static/16387704020108271063956/
4. http://blog.163.com/digoal@126/blog/static/1638770402010830112341992/
5. http://git.postgresql.org/gitweb/?p=postgresql.git;a=commitdiff;h=3bf3ab8c563699138be02f9dc305b7b77a724307
6. http://www.postgresql.org/docs/devel/static/sql-creatematerializedview.html

