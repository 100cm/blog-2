PostgreSQL research

Ubuntu KVM virtualize use libvirt

2013-03-24 21:19:16   查看原文>>

安装必要的包 : 

digoal@digoal-desktop:~$ sudo apt-get install kvm libvirt-bin virt-manager virt-viewer virtinst
digoal@digoal-desktop:~$ sudo apt-get install bridge-utils



将需要运行libvirt的用户添加到libvirtd组.

digoal@digoal-desktop:~$ sudo adduser digoal libvirtd
Adding user `digoal' to group `libvirtd' ...
Adding user digoal to group libvirtd
Done.
root@digoal-desktop:~# id digoal
uid=1000(digoal) gid=1000(digoal) groups=1000(digoal),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),109(lpadmin),124(sambashare),125(libvirtd)



检查硬件是否支持KVM硬件加速.

digoal@digoal-desktop:~/script$ sudo kvm-ok
[sudo] password for digoal: 
INFO: /dev/kvm exists
KVM acceleration can be used


如果硬件支持, 但是以上命令返回的结果不支持, 那么可能你需要调整主板的BIOS.

配置网桥 : 

digoal@digoal-desktop:~$ sudo vi /etc/network/interfaces
auto lo
iface lo inet loopback

auto br0
iface br0 inet static
        address 192.168.2.8
        network 192.168.2.0
        netmask 255.255.255.0
        broadcast 192.168.2.255
        gateway 192.168.2.1
        dns-nameservers 202.101.172.35 192.168.2.1
        bridge_ports eth0
        bridge_fd 9
        bridge_hello 2
        bridge_maxage 12
        bridge_stp off



重启网络

digoal@digoal-desktop:~$ sudo /etc/init.d/networking restart
 * Running /etc/init.d/networking restart is deprecated because it may not enable again some interfaces
 * Reconfiguring network interfaces...

Waiting for br0 to get ready (MAXWAIT is 20 seconds).
ssh stop/waiting
ssh start/running, process 16717
   ...done.



检查网络接口

digoal@digoal-desktop:~$ sudo ifconfig
br0       Link encap:Ethernet  HWaddr 00:19:66:4c:58:74  
          inet addr:192.168.2.8  Bcast:192.168.2.255  Mask:255.255.255.0
          inet6 addr: fe80::219:66ff:fe4c:5874/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:66 errors:0 dropped:0 overruns:0 frame:0
          TX packets:101 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:5452 (5.4 KB)  TX bytes:16547 (16.5 KB)

eth0      Link encap:Ethernet  HWaddr 00:19:66:4c:58:74  
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:84818 errors:0 dropped:0 overruns:0 frame:0
          TX packets:102800 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:5843700 (5.8 MB)  TX bytes:78089818 (78.0 MB)

lo        Link encap:Local Loopback  
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:16436  Metric:1
          RX packets:203 errors:0 dropped:0 overruns:0 frame:0
          TX packets:203 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:16772 (16.7 KB)  TX bytes:16772 (16.7 KB)

virbr0    Link encap:Ethernet  HWaddr ee:ae:d8:32:a0:cf  
          inet addr:192.168.122.1  Bcast:192.168.122.255  Mask:255.255.255.0
          UP BROADCAST MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)



创建虚拟机目录, 修改权限.

root@digoal-desktop:~# df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/sdb1        41G  3.2G   36G   9% /
udev            1.8G  4.0K  1.8G   1% /dev
tmpfs           741M  748K  740M   1% /run
none            5.0M     0  5.0M   0% /run/lock
none            1.9G     0  1.9G   0% /run/shm
cgroup          1.9G     0  1.9G   0% /sys/fs/cgroup
/dev/sdb3       367G  195M  348G   1% /data01
/dev/sdb4        49G  9.2G   37G  20% /data02
root@digoal-desktop:~# mkdir /data01/vm
root@digoal-desktop:~# chown digoal:digoal /data01/vm



创建虚拟机磁盘镜像文件 : 

root@digoal-desktop:~# su - digoal
digoal@digoal-desktop:~$ qemu-img create -f qcow2 -o encryption=off,cluster_size=2M,preallocation=off /data01/vm/centos5.9_64_01.img 16G
Formatting '/data01/vm/centos5.9_64_01.img', fmt=qcow2 size=17179869184 encryption=off cluster_size=2097152 preallocation='off' 
digoal@digoal-desktop:~$ qemu-img info /data01/vm/centos5.9_64_01.img 
image: /data01/vm/centos5.9_64_01.img
file format: qcow2
virtual size: 16G (17179869184 bytes)
disk size: 4.0M
cluster_size: 2097152



使用digoal用户创建虚拟机, (注意前面将digoal用户加入libvirtd组就是这个目的)
1. 使用vnc连接到服务器(参考http://blog.163.com/digoal@126/blog/static/16387704020132245276398/), 使用virt-manager管理虚拟机.
2. 启动virt-manager
3. 选择kvm虚拟化.
4. 选择CentOS5.9镜像文件.
5. 磁盘选择前面创建好的虚拟机磁盘镜像文件.
6. 网络选择共享的网桥, 名称为前面建好的br0.
7. 最后一个配置页面勾上启动时配置(custom config), 配置网卡和磁盘使用virtIO, 性能会好很多.
8. 开始安装操作系统, 安装过程中网络选择DHCP.
开始安装后, 由virt-manager生成的kvm命令如下 : 

/usr/bin/kvm 
-S 
-M pc-1.0 
-enable-kvm 
-m 512 
-smp 1,sockets=1,cores=1,threads=1 
-name centos5.9_64 
-uuid 4501a3c3-a267-4889-891f-186136cc9654 
-nodefconfig 
-nodefaults 
-chardev socket,id=charmonitor,path=/var/lib/libvirt/qemu/centos5.9_64.monitor,server,nowait 
-mon chardev=charmonitor,id=monitor,mode=control 
-rtc base=utc 
-no-reboot 
-no-shutdown 
-drive file=/data01/vm/centos5.9_64_01.img,if=none,id=drive-virtio-disk0,format=qcow2 
-device virtio-blk-pci,bus=pci.0,addr=0x5,drive=drive-virtio-disk0,id=virtio-disk0,bootindex=2 
-drive file=/data02/iso/CentOS-5.7-x86_64.iso,if=none,media=cdrom,id=drive-ide0-1-0,readonly=on,format=raw 
-device ide-drive,bus=ide.1,unit=0,drive=drive-ide0-1-0,id=ide0-1-0,bootindex=1 
-netdev tap,fd=18,id=hostnet0,vhost=on,vhostfd=19 
-device virtio-net-pci,netdev=hostnet0,id=net0,mac=52:54:00:a2:65:1e,bus=pci.0,addr=0x3 
-chardev pty,id=charserial0 
-device isa-serial,chardev=charserial0,id=serial0 
-usb 
-vnc 127.0.0.1:0 
-vga cirrus 
-device intel-hda,id=sound0,bus=pci.0,addr=0x4 -device hda-duplex,id=sound0-codec0,bus=sound0.0,cad=0 
-device virtio-balloon-pci,id=balloon0,bus=pci.0,addr=0x6


安装完后最好把IP地址配成静态的, 省得地址变动.

[root@localhost /]# vi /etc/sysconfig/network
NETWORKING=yes
NETWORKING_IPV6=no
HOSTNAME=digoal.192.168.2.5.home
[root@localhost /]# vi /etc/sysconfig/network-scripts/ifcfg-eth0
# Virtio Network Device
DEVICE=eth0
BOOTPROTO=static
HWADDR=52:54:00:A2:65:1E
IPADDR=192.168.2.5
NETMASK=255.255.255.0
ONBOOT=yes
[root@localhost /]# vi /etc/hosts
127.0.0.1               localhost.localdomain localhost
192.168.2.5 digoal.192.168.2.5.home
[root@localhost ~]# hostname digoal.192.168.2.5.home



启动虚拟机

digoal@digoal-desktop:/data02/iso$ virsh list --all
 Id Name                 State
----------------------------------
  - centos5.9_64         shut off
digoal@digoal-desktop:/data02/iso$ virsh start centos5.9_64
Domain centos5.9_64 started



连接虚拟机
可以使用virt-manager 或者 virt-viewer, 也可以使用vnc.

停止虚拟机
直接在虚拟机中shutdown,
或者直接使用virsh关闭.

digoal@digoal-desktop:/data02/iso$ virsh
virsh # shutdown 3
Domain 3 is being shutdown
virsh # list
 Id Name                 State
----------------------------------



克隆虚拟机

digoal@digoal-desktop:/data02/iso$ virsh list --all
 Id Name                 State
----------------------------------
  - centos5.9_64         shut off
digoal@digoal-desktop:/data02/iso$ sudo virt-clone -o centos5.9_64 -n centos5.9_64_02 -f /data01/vm/centos5.9_64_02.img --connect=qemu:///system
[sudo] password for digoal: 

digoal@digoal-desktop:/data01/vm$ virsh list --all
 Id Name                 State
----------------------------------
  - centos5.9_64         shut off
  - centos5.9_64_02      shut off


使用virt-clone克隆的好处是可以缩减原始虚拟机膨胀的空间.
但是克隆的虚拟机磁盘镜像和原始的不一样, 如下 : 

digoal@digoal-desktop:/data01/vm$ qemu-img info /data01/vm/centos5.9_64_02.img 
image: /data01/vm/centos5.9_64_02.img
file format: qcow2
virtual size: 16G (17179869184 bytes)
disk size: 2.6G
cluster_size: 65536
digoal@digoal-desktop:/data01/vm$ qemu-img info /data01/vm/centos5.9_64_01.img 
image: /data01/vm/centos5.9_64_01.img
file format: qcow2
virtual size: 16G (17179869184 bytes)
disk size: 3.4G
cluster_size: 2097152


如果要镜像格式一致, 其实直接拷贝镜像文件就好了.
1. 关闭要拷贝的虚拟机
2. 拷贝镜像文件

su - digoal
cp /data01/vm/centos5.9_64_01.img /data01/vm/centos5.9_64_02.img


3. 新建配置文件, 注意修改.

su - root
cd /etc/libvirt/qemu/
cp centos-5.9-x64-01.xml centos-5.9-x64-02.xml


4. 修改配置文件

生成uuid : 
uuidgen 
a459d82d-59d6-4493-ad13-f6406ef1817c
修改配置(需修改name, uuid, diskfile, macaddr, 确保这些值在所有虚拟机全局唯一) : 
vi centos-5.9-x64-02.xml
<domain type='kvm'>
  <name>centos-5.9-x64-02</name>
  <uuid>ea81f77a-d179-4488-a0b3-a8346dad443b</uuid>
............
    <disk type='file' device='disk'>
      <driver name='qemu' type='qcow2'/>
      <source file='/data02/vm/centos-5.9-x64_02.img'/>
.............
    <interface type='network'>
      <mac address='52:54:00:fa:be:c4'/>


5. 将虚拟机文件定义到管理软件中.

sudo virsh
virsh # define /etc/libvirt/qemu/centos-5.9-x64-02.xml



# 克隆的虚拟机在启动后需要修改一下IP地址, 主机名.

digoal@digoal-desktop:/data01/vm$ virsh start centos5.9_64_02
Domain centos5.9_64_02 started


修改主机名, IP, (MAC新生成的与原始的不同,  不需要修改).

[root@localhost /]# vi /etc/sysconfig/network
NETWORKING=yes
NETWORKING_IPV6=no
HOSTNAME=digoal.192.168.2.6.home
GATEWAY=192.168.2.1

[root@localhost /]# vi /etc/sysconfig/network-scripts/ifcfg-eth0
# Virtio Network Device
DEVICE=eth0
BOOTPROTO=static
HWADDR=52:54:00:b0:8b:bc
IPADDR=192.168.2.6
NETMASK=255.255.255.0
ONBOOT=yes

[root@localhost /]# vi /etc/hosts
127.0.0.1               localhost.localdomain localhost
192.168.2.6 digoal.192.168.2.6.home
[root@localhost ~]# hostname digoal.192.168.2.6.home
[root@digoal data02]# vi /etc/resolv.conf
nameserver 202.101.172.35
nameserver 192.168.2.1



# 删除虚拟机
1. 关闭虚拟机

virsh destroy centos5.9_64


2. 删除域

virsh undefine centos5.9_64


3. 如果配置文件还在等话, 删除之.

cd /etc/libvirt/qemu/




# 虚拟机服务端配置
在virt-manager中点击连接的hypervisor, 右键点击details.
在弹出的窗口中可以配置虚拟网络, 存储, 等.
配置存储的目的是让远程管理更方便, 例如把iso以及img的目录加进去, 那么通过远程的virt-manger管理时也可以安装虚拟机.
否则无法选择Iso是比较痛苦的.

【其他】
1. 如果遇到kvm kernel module 访问权限的报错, 可以把用户添加到kvm组

sudo adduser digoal kvm


如果还是报错, 试试把kvm以及kvm_intel模块重载一下.

sudo rmmod kvm_intel
sudo rmmod kvm
sudo modprobe kvm
sudo modprobe kvm_intel


2. 远程连接qemu的格式

virt-manager -c qemu+ssh://digoal@192.168.2.8/system
virt-viewer -c qemu+ssh://digoal@192.168.2.8/system centos-5.9-x64-01



【参考】
1. man brctl
2. man resolvconf
3. man qemu-img
4. man kvm
5. man virsh
6. man virt-clone
7. http://blog.163.com/digoal@126/blog/static/16387704020132245276398/
8. 相关配置文件
/etc/libvirt
配置文件修改后重启libvirtd服务.

sudo /etc/init.d/libvirt-bin restart


9. 虚拟机配置的修改, 例如修改VCPU, 内存大小等. 可以通过virt-manager进行修改.
修改后重启虚拟机可生效, 无需重启libvirtd.
