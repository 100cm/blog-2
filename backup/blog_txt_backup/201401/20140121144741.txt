PostgreSQL research

Use taskset isolate PostgreSQL CPU resource in Linux

2014-01-21 14:47:41   查看原文>>

无意中了解到某测试系统数据库服务器负载到100多, 导致所有这台机器上的其他应用都无法正常使用了.
虽然PostgreSQL是进程模式, 一个连接的服务端进程同一时间最多只会占用一个CPU核的计算资源, 但是如果连接数达到CPU核数的话, 如果都在处理客户端请求的话, 在Linux的调度下可能会占满所有的CPU资源.
或者在一个操作系统中运行多个业务程序(例如数据库, java进程, 等)的话, 相互之间抢资源的情况就需要考虑如何避免了.
使用Linux的taskset命令可以很好的解决这个问题.
我们来做个测试, 测试机是8核的.

postgres@db-172-16-3-39-> cat /proc/cpuinfo 
processor       : 0
vendor_id       : GenuineIntel
cpu family      : 6
model           : 26
model name      : Intel(R) Xeon(R) CPU           E5504  @ 2.00GHz
stepping        : 5
cpu MHz         : 1596.000
cache size      : 4096 KB
physical id     : 1
siblings        : 4
core id         : 0
cpu cores       : 4
apicid          : 16
fpu             : yes
fpu_exception   : yes
cpuid level     : 11
wp              : yes
flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm syscall nx rdtscp lm constant_tsc nonstop_tsc pni monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr sse4_1 sse4_2 popcnt lahf_lm
bogomips        : 3990.09
clflush size    : 64
cache_alignment : 64
address sizes   : 40 bits physical, 48 bits virtual
power management: [8]

processor       : 1
vendor_id       : GenuineIntel
cpu family      : 6
model           : 26
model name      : Intel(R) Xeon(R) CPU           E5504  @ 2.00GHz
stepping        : 5
cpu MHz         : 1596.000
cache size      : 4096 KB
physical id     : 0
siblings        : 4
core id         : 0
cpu cores       : 4
apicid          : 0
fpu             : yes
fpu_exception   : yes
cpuid level     : 11
wp              : yes
flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm syscall nx rdtscp lm constant_tsc nonstop_tsc pni monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr sse4_1 sse4_2 popcnt lahf_lm
bogomips        : 3990.15
clflush size    : 64
cache_alignment : 64
address sizes   : 40 bits physical, 48 bits virtual
power management: [8]

processor       : 2
vendor_id       : GenuineIntel
cpu family      : 6
model           : 26
model name      : Intel(R) Xeon(R) CPU           E5504  @ 2.00GHz
stepping        : 5
cpu MHz         : 1596.000
cache size      : 4096 KB
physical id     : 1
siblings        : 4
core id         : 1
cpu cores       : 4
apicid          : 18
fpu             : yes
fpu_exception   : yes
cpuid level     : 11
wp              : yes
flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm syscall nx rdtscp lm constant_tsc nonstop_tsc pni monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr sse4_1 sse4_2 popcnt lahf_lm
bogomips        : 3990.04
clflush size    : 64
cache_alignment : 64
address sizes   : 40 bits physical, 48 bits virtual
power management: [8]

processor       : 3
vendor_id       : GenuineIntel
cpu family      : 6
model           : 26
model name      : Intel(R) Xeon(R) CPU           E5504  @ 2.00GHz
stepping        : 5
cpu MHz         : 1596.000
cache size      : 4096 KB
physical id     : 0
siblings        : 4
core id         : 1
cpu cores       : 4
apicid          : 2
fpu             : yes
fpu_exception   : yes
cpuid level     : 11
wp              : yes
flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm syscall nx rdtscp lm constant_tsc nonstop_tsc pni monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr sse4_1 sse4_2 popcnt lahf_lm
bogomips        : 3990.05
clflush size    : 64
cache_alignment : 64
address sizes   : 40 bits physical, 48 bits virtual
power management: [8]

processor       : 4
vendor_id       : GenuineIntel
cpu family      : 6
model           : 26
model name      : Intel(R) Xeon(R) CPU           E5504  @ 2.00GHz
stepping        : 5
cpu MHz         : 1596.000
cache size      : 4096 KB
physical id     : 1
siblings        : 4
core id         : 2
cpu cores       : 4
apicid          : 20
fpu             : yes
fpu_exception   : yes
cpuid level     : 11
wp              : yes
flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm syscall nx rdtscp lm constant_tsc nonstop_tsc pni monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr sse4_1 sse4_2 popcnt lahf_lm
bogomips        : 3990.06
clflush size    : 64
cache_alignment : 64
address sizes   : 40 bits physical, 48 bits virtual
power management: [8]

processor       : 5
vendor_id       : GenuineIntel
cpu family      : 6
model           : 26
model name      : Intel(R) Xeon(R) CPU           E5504  @ 2.00GHz
stepping        : 5
cpu MHz         : 1596.000
cache size      : 4096 KB
physical id     : 0
siblings        : 4
core id         : 2
cpu cores       : 4
apicid          : 4
fpu             : yes
fpu_exception   : yes
cpuid level     : 11
wp              : yes
flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm syscall nx rdtscp lm constant_tsc nonstop_tsc pni monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr sse4_1 sse4_2 popcnt lahf_lm
bogomips        : 3990.08
clflush size    : 64
cache_alignment : 64
address sizes   : 40 bits physical, 48 bits virtual
power management: [8]

processor       : 6
vendor_id       : GenuineIntel
cpu family      : 6
model           : 26
model name      : Intel(R) Xeon(R) CPU           E5504  @ 2.00GHz
stepping        : 5
cpu MHz         : 1596.000
cache size      : 4096 KB
physical id     : 1
siblings        : 4
core id         : 3
cpu cores       : 4
apicid          : 22
fpu             : yes
fpu_exception   : yes
cpuid level     : 11
wp              : yes
flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm syscall nx rdtscp lm constant_tsc nonstop_tsc pni monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr sse4_1 sse4_2 popcnt lahf_lm
bogomips        : 3990.05
clflush size    : 64
cache_alignment : 64
address sizes   : 40 bits physical, 48 bits virtual
power management: [8]

processor       : 7
vendor_id       : GenuineIntel
cpu family      : 6
model           : 26
model name      : Intel(R) Xeon(R) CPU           E5504  @ 2.00GHz
stepping        : 5
cpu MHz         : 1596.000
cache size      : 4096 KB
physical id     : 0
siblings        : 4
core id         : 3
cpu cores       : 4
apicid          : 6
fpu             : yes
fpu_exception   : yes
cpuid level     : 11
wp              : yes
flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm syscall nx rdtscp lm constant_tsc nonstop_tsc pni monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr sse4_1 sse4_2 popcnt lahf_lm
bogomips        : 3990.07
clflush size    : 64
cache_alignment : 64
address sizes   : 40 bits physical, 48 bits virtual
power management: [8]



使用taskset的mask限定postgresql只使用第二个核.

postgres@db-172-16-3-39-> taskset 0x00000002 pg_ctl start


启动数据库后, 
使用top命令(f, j)可以看到现在所有的服务端进程都只使用1号核.

Tasks: 249 total,  11 running, 236 sleeping,   0 stopped,   2 zombie
Cpu(s): 13.7%us,  4.3%sy,  0.0%ni, 82.1%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st
Mem:   8167400k total,  5726764k used,  2440636k free,   461632k buffers
Swap:  8385920k total,      100k used,  8385820k free,  4890008k cached

  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  P COMMAND                                                              
16245 postgres  15   0 1178m 3744 3184 S  0.0  0.0   0:00.00 1 postgres: writer process                                             
16246 postgres  16   0 1178m  17m  16m S  6.8  0.2   0:00.45 1 postgres: wal writer process                                         
16249 postgres  16   0  109m 1688  588 R  0.0  0.0   0:00.00 1 postgres: stats collector process                                    
16278 postgres  17   0 1179m 3252 1844 S  0.0  0.0   0:00.00 1 postgres: postgres postgres [local] idle                             
16279 postgres  18   0 1179m 3236 1832 S  0.0  0.0   0:00.00 1 postgres: postgres postgres [local] idle                             
16281 postgres  16   0 1182m  82m  80m R  0.0  1.0   0:01.59 1 postgres: postgres postgres [local] idle                             
16282 postgres  18   0 1179m 3236 1832 S  0.0  0.0   0:00.00 1 postgres: postgres postgres [local] idle                             
16283 postgres  18   0 1179m 3248 1844 S  0.0  0.0   0:00.00 1 postgres: postgres postgres [local] idle                             
16284 postgres  16   0 1182m  49m  47m R  0.0  0.6   0:00.37 1 postgres: postgres postgres [local] idle                             
16286 postgres  18   0 1179m 3240 1836 S  0.0  0.0   0:00.00 1 postgres: postgres postgres [local] idle                             
16288 postgres  16   0 1182m  81m  79m R  0.0  1.0   0:01.49 1 postgres: postgres postgres [local] idle                             
16295 postgres  16   0 1182m  65m  64m R  0.0  0.8   0:00.86 1 postgres: postgres postgres [local] idle                             
16297 postgres  25   0 1179m 3236 1832 S  0.0  0.0   0:00.00 1 postgres: postgres postgres [local] idle


现在因为只使用1个CPU核, 所以性能如下 : 

postgres@db-172-16-3-39-> pgbench -M prepared -n -r -f ./login.sql -T 10 -c 16 -j 4
transaction type: Custom query
scaling factor: 1
query mode: prepared
number of clients: 16
number of threads: 4
duration: 10 s
number of transactions actually processed: 47554
tps = 4719.704404 (including connections establishing)
tps = 14665.044858 (excluding connections establishing)
statement latencies in milliseconds:
        0.001787        \setrandom userid 1 200000
        1.072017        select * from f_user_login(:userid);



把mask改掉, 使用1号和2号核心.

postgres@db-172-16-3-39-> pg_ctl stop -m fast
waiting for server to shut down.... done
server stopped
postgres@db-172-16-3-39-> taskset 0x00000006 pg_ctl start


性能翻倍 : 

postgres@db-172-16-3-39-> pgbench -M prepared -n -r -f ./login.sql -T 10 -c 16 -j 4
transaction type: Custom query
scaling factor: 1
query mode: prepared
number of clients: 16
number of threads: 4
duration: 10 s
number of transactions actually processed: 97042
tps = 9675.651024 (including connections establishing)
tps = 13064.618447 (excluding connections establishing)
statement latencies in milliseconds:
        0.001614        \setrandom userid 1 200000
        1.211980        select * from f_user_login(:userid);


使用taskset限定进程的CPU调度很好的解决了这个问题.

[参考]
1. man taskset

       0x00000001
              is processor #0

       0x00000003
              is processors #0 and #1

       0xFFFFFFFF
              is all processors (#0 through #31)


