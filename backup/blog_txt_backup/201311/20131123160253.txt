PostgreSQL research

bitcoin

2013-11-23 16:02:53   查看原文>>

[转贴]
http://www.oschina.net/question/1174645_117493


最近bitcion火的得不得了，一些玩家开始研究各种矿机，这里跟大家介绍用pcduino做的矿机。

首先到https://mining.bitcoin.cz/accounts/profile/上去注册一个账号。

QQ截图20130708101934

 

这个有个比特币地址也就是你的矿池，你要到BTCGuild或者deepbit上面去注册一个矿池，

好像BTCGuild不能在国内交易，玩家请考虑自身的情况。

注册好了，那就开始搞矿机吧。

首先到http://ck.kolivas.org/apps/cgminer/去下载一个源码包，建议下载2.4的，之后3以上的版本都不支持cpu挖矿了，现在一般职业玩家都是用速度很高的GPU。

下载完后,解压

tar xvf cgminer-2.4.1.tar.bz2

安装依赖包

sudo apt-get install build-essential libncurses5-dev libcurl4-openssl-dev  libcurl3 libcurl3-gnutls

配置矿机，由于板子上没有显卡，只能用CPU了

./configure –enable-cpumining –disable-opencl

编译安装cgminer

sudo make && make install

安装成功后，恭喜你可以开始挖矿了

挖矿的命令是

./cgminer —cpu-threads 1 -o http://api.bitcoin.cz:8332 -u Pillar -p *******

QQ截图20130708103716

 

挖到矿了之后就可以在https://mining.bitcoin.cz/accounts/profile/的账户上看到哦




[其他]
1. https://bitcointalk.org/index.php
2. https://en.bitcoin.it/wiki/Pooled_mining
3. 创建bitcoin账号
http://bitcoin.org/en/
http://bitcoin.org/zh_CN/choose-your-wallet
安装钱包软件例如MultiBit, 开启后可以创建钱包.
4. 注册一个池用户, 
https://mining.bitcoin.cz
5. 配置池

6. 在CentOS 6.4 x64上安装cgminer
首先下载2.x的cgminer
http://ck.kolivas.org/apps/cgminer
wget http://ck.kolivas.org/apps/cgminer/2.9/cgminer-2.9.7.tar.bz2
tar -jxvf cgminer-2.9.7.tar.bz2 
cd cgminer-2.9.7
./configure --prefix=/opt/cgminer2.9.7 --enable-cpumining --disable-opencl 
gmake
gmake install
执行挖矿机
/opt/cgminer2.9.7/bin/cgminer -t 1 -o http://api.bitcoin.cz:8332 -u 池子用户 -p pwd

7. 将CentOS 6.4 x64上安装的cgminer移植到CentOS 5.x 64
依赖包
[root@db-172-16-3-150 ~]# ldd /opt/cgminer2.9.7/bin/cgminer 
        linux-vdso.so.1 =>  (0x00007ffffddb5000)
        libpthread.so.0 => /lib64/libpthread.so.0 (0x00007fb16eaaf000)
        libcurl.so.4 => /usr/lib64/libcurl.so.4 (0x00000033e4e00000)
        libm.so.6 => /lib64/libm.so.6 (0x00007fb16e82a000)
        libncurses.so.5 => /lib64/libncurses.so.5 (0x00000039c7000000)
        libc.so.6 => /lib64/libc.so.6 (0x00007fb16e496000)
        libtinfo.so.5 => /lib64/libtinfo.so.5 (0x00000039d0400000)
        /lib64/ld-linux-x86-64.so.2 (0x00007fb16ece3000)
        libidn.so.11 => /lib64/libidn.so.11 (0x00000039c6400000)
        libldap-2.4.so.2 => /lib64/libldap-2.4.so.2 (0x00000033e4a00000)
        librt.so.1 => /lib64/librt.so.1 (0x00007fb16e28d000)
        libgssapi_krb5.so.2 => /lib64/libgssapi_krb5.so.2 (0x000000386fe00000)
        libkrb5.so.3 => /lib64/libkrb5.so.3 (0x000000386f600000)
        libk5crypto.so.3 => /lib64/libk5crypto.so.3 (0x000000386fa00000)
        libcom_err.so.2 => /lib64/libcom_err.so.2 (0x00000039cb000000)
        libz.so.1 => /lib64/libz.so.1 (0x00000039c0000000)
        libssl3.so => /usr/lib64/libssl3.so (0x00000039cf400000)
        libsmime3.so => /usr/lib64/libsmime3.so (0x00000039d0000000)
        libnss3.so => /usr/lib64/libnss3.so (0x00000039ce400000)
        libnssutil3.so => /usr/lib64/libnssutil3.so (0x00000039ce000000)
        libplds4.so => /lib64/libplds4.so (0x00000039cd800000)
        libplc4.so => /lib64/libplc4.so (0x00000039cf000000)
        libnspr4.so => /lib64/libnspr4.so (0x00000039cec00000)
        libdl.so.2 => /lib64/libdl.so.2 (0x00007fb16e085000)
        libssh2.so.1 => /usr/lib64/libssh2.so.1 (0x0000003870a00000)
        liblber-2.4.so.2 => /lib64/liblber-2.4.so.2 (0x00000033e4600000)
        libresolv.so.2 => /lib64/libresolv.so.2 (0x00007fb16de69000)
        libsasl2.so.2 => /usr/lib64/libsasl2.so.2 (0x00000039d0800000)
        libkrb5support.so.0 => /lib64/libkrb5support.so.0 (0x000000386f200000)
        libkeyutils.so.1 => /lib64/libkeyutils.so.1 (0x00000039cb800000)
        libssl.so.10 => /usr/lib64/libssl.so.10 (0x0000003870200000)
        libcrypto.so.10 => /usr/lib64/libcrypto.so.10 (0x00000039cc000000)
        libcrypt.so.1 => /lib64/libcrypt.so.1 (0x00007fb16dc30000)
        libselinux.so.1 => /lib64/libselinux.so.1 (0x00000039c1000000)
        libfreebl3.so => /lib64/libfreebl3.so (0x00000039c5000000)
将安装好的cgminer打包.
cd /opt
tar -jcvf cgminer2.9.7.tar.bz2 cgminer2.9.7
拷贝到CentOS 5.x的机器上
scp 172.16.3.150:/opt/cgminer2.9.7.tar.bz2 /opt
cd /opt
tar -jxvf cgminer2.9.7.tar.bz2
安装curl, 下载
http://curl.haxx.se/snapshots/
wget http://curl.haxx.se/snapshots/curl-7.34.0-20131123.tar.bz2
[root@db-172-16-3-40 curl-7.34.0-20131123]# ./configure --enable-libcurl-option && gmake && gmake install
安装一些必要的包
yum -y install lrzsz sysstat e4fsprogs ntp readline-devel zlib zlib-devel openssl openssl-devel pam-devel libxml2-devel libxslt-devel python-devel tcl-devel openldap-devel
拷贝CentOS 6.4上的/lib64/libtinfo.so.5.7到CentOS 5, 并链接为/lib64/libtinfo.so.5
[root@db-172-16-3-40 opt]# cd /lib64
[root@db-172-16-3-40 lib64]# scp 172.16.3.150:/lib64/libtinfo.so.5.7 ./
[root@db-172-16-3-40 lib64]# ln -s /lib64/libtinfo.so.5.7 /lib64/libtinfo.so.5
接下来运行挖矿机, 如果缺少lib文件的话安装就可以了. (前面ldd已经分析好了依赖哪些动态库文件)
/opt/cgminer2.9.7/bin/cgminer -t 1 -o http://api.bitcoin.cz:8332 -u 池子用户 -p pwd
为了加快联网速度, 还有改一个东西
vi /etc/ssh/ssh_config
GSSAPIAuthentication no

移植步骤简介 : 

yum -y install lrzsz sysstat e4fsprogs ntp readline-devel zlib zlib-devel openssl openssl-devel pam-devel libxml2-devel libxslt-devel python-devel tcl-devel openldap-devel

service cpuspeed stop

cd /opt/soft_bak
rz  (libtinfo.so.5.7, curl-7.34.0-20131123.tar.bz2)

cd /opt
rz  (cgminer2.9.7.tar.bz2)

ll /lib64/libtinfo.so.5
mv /opt/soft_bak/libtinfo.so.5.7 /lib64
ln -s /lib64/libtinfo.so.5.7 /lib64/libtinfo.so.5

cd /opt/soft_bak
tar -jxvf curl-7.34.0-20131123.tar.bz2
cd curl-7.34.0-20131123
./configure --enable-libcurl-option && gmake && gmake install

cd /opt
tar -jxvf cgminer2.9.7.tar.bz2

echo "可能要执行:"
cp /usr/local/lib/libcurl.so.4.3.0 /usr/lib64/
ln -s /usr/lib64/libcurl.so.4.3.0  /usr/lib64/libcurl.so.4

vi /etc/rc.local
# add by digoal
# /usr/bin/nohup /opt/cgminer2.9.7/bin/cgminer -t 8 -o http://api.bitcoin.cz:8332 -u xxxx -p xxxx >/dev/null 2>&1 &
/usr/bin/nohup /opt/cgminer2.9.7/bin/cgminer -t 8 -o 192.198.107.178:3333 -u xxxx -p xxxx >/dev/null 2>&1 &


检查运行是否正常.



8. 其他挖矿工具. cpuminer.
http://bitcoin.stackexchange.com/questions/9637/fastest-cpu-miner
https://github.com/pooler/cpuminer
https://sourceforge.net/projects/cpuminer/files/
wget http://ncu.dl.sourceforge.net/project/cpuminer/pooler-cpuminer-2.3.2-linux-x86_64.tar.gz
./minerd -t 8 -o stratum+tcp://192.198.107.178:3333 -u xxx -p xxx -a sha256d
在IBM P570 powerpc上编译通过可以使用. libcurl要先编译一下. 编译和使用cpuminer前需要修改ld.so.conf把编译好的libcurl加进去.

9. 关于成本, cpu完全不适合挖矿, 电费都不够.
http://www.coinish.com/calc/
http://bitcoin.stackexchange.com/questions/59/is-cpu-mining-even-worth-it?rq=1
http://bitcoin.stackexchange.com/questions/9637/fastest-cpu-miner

10. 池子介绍
https://en.bitcoin.it/wiki/Comparison_of_mining_pools
另一个池子
https://www.btcguild.com

             Stratum Servers
Host (USA)  stratum.btcguild.com:3333
Host (EU)   eu-stratum.btcguild.com:3333
Username    digoal_1
Password    (anything)

IP1  198.245.63.145
IP2   54.246.170.18

11. win7中使用cgminer
cgminer.exe -o stratum+tcp://192.198.107.178:3333 -u xxx -p xxx --gpu-platform 0 -d 0 -w 1024
帮助
D:\download\cgminer-3.4.3-windows\cgminer-3.4.3-windows>cgminer.exe --help
cgminer 3.4.3
Built with avalon bflsc bitforce GPU icarus modminer scrypt ztex mining support.
Usage: cgminer.exe [-DdGEgIKklpPQqUsTouvwOchnV]
Options for both config file and command line:
--api-allow <arg>   Allow API access only to the given list of [G:]IP[/Prefix] addresses[/subnets]
--api-description <arg> Description placed in the API status header, default: cgminer version
--api-groups <arg>  API one letter groups G:cmd:cmd[,P:cmd:*...] defining the cmds a groups can use
--api-listen        Enable API, default: disabled
--api-mcast         Enable API Multicast listener, default: disabled
--api-mcast-addr <arg> API Multicast listen address
--api-mcast-code <arg> Code expected in the API Multicast message, don't use '-'
--api-mcast-des <arg> Description appended to the API Multicast reply, default: ''
--api-mcast-port <arg> API Multicast listen port (default: 4028)
--api-network       Allow API (if enabled) to listen on/for any address, default: only 127.0.0.1
--api-port <arg>    Port number of miner API (default: 4028)
--auto-fan          Automatically adjust all GPU fan speeds to maintain a target temperature
--auto-gpu          Automatically adjust all GPU engine clock speeds to maintain a target temperature
--balance           Change multipool strategy from failover to even share balance
--benchmark         Run cgminer in benchmark mode - produces no shares
--bfl-range         Use nonce range on bitforce devices if supported
--bflsc-overheat <arg> Set overheat temperature where BFLSC devices throttle, 0 to disable (default: 90)
--compact           Use compact display without per device statistics
--debug|-D          Enable debug output
--device|-d <arg>   Select device to use, one value, range and/or comma separated (e.g. 0-2,4) default: all
--disable-gpu|-G    Disable GPU mining even if suitable devices exist
--disable-rejecting Automatically disable pools that continually reject shares
--expiry|-E <arg>   Upper bound on how many seconds after getting work we consider a share from it stale (default: 120)
--failover-only     Don't leak work to backup pools when primary pool is lagging
--fix-protocol      Do not redirect to a different getwork protocol (eg. stratum)
--gpu-dyninterval <arg> Set the refresh interval in ms for GPUs using dynamic intensity (default: 7)
--gpu-platform <arg> Select OpenCL platform ID to use for GPU mining (default: -1)
--gpu-threads|-g <arg> Number of threads per GPU (1 - 10) (default: -1)
--gpu-engine <arg>  GPU engine (over)clock range in Mhz - one value, range and/or comma separated list (e.g. 850-900,900
,750-850)
--gpu-fan <arg>     GPU fan percentage range - one value, range and/or comma separated list (e.g. 0-85,85,65)
--gpu-map <arg>     Map OpenCL to ADL device order manually, paired CSV (e.g. 1:0,2:1 maps OpenCL 1 to ADL 0, 2 to 1)
--gpu-memclock <arg> Set the GPU memory (over)clock in Mhz - one value for all or separate by commas for per card
--gpu-memdiff <arg> Set a fixed difference in clock speed between the GPU and memory in auto-gpu mode
--gpu-powertune <arg> Set the GPU powertune percentage - one value for all or separate by commas for per card
--gpu-reorder       Attempt to reorder GPU devices according to PCI Bus ID
--gpu-vddc <arg>    Set the GPU voltage in Volts - one value for all or separate by commas for per card
--lookup-gap <arg>  Set GPU lookup gap for scrypt mining, comma separated
--intensity|-I <arg> Intensity of GPU scanning (d or -10 -> 20,default: d to maintain desktop interactivity)
--hotplug <arg>     Seconds between hotplug checks (0 means never check)
--kernel-path|-K <arg> Specify a path to where bitstream and kernel files are (default: "/usr/local/bin")
--kernel|-k <arg>   Override sha256 kernel to use (diablo, poclbm, phatk or diakgcn) - one value or comma separated
--avalon-auto       Adjust avalon overclock frequency dynamically for best hashrate
--avalon-cutoff <arg> Set avalon overheat cut off temperature (default: 60)
--avalon-fan <arg>  Set fanspeed percentage for avalon, single value or range (default: 20-100)
--avalon-freq <arg> Set frequency range for avalon-auto, single value or range
--avalon-options <arg> Set avalon options baud:miners:asic:timeout:freq
--avalon-temp <arg> Set avalon target temperature (default: 50)
--bitburner-voltage <arg> Set BitBurner core voltage, in millivolts
--load-balance      Change multipool strategy from failover to quota based balance
--log|-l <arg>      Interval in seconds between log output (default: 5)
--lowmem            Minimise caching of shares for low memory applications
--net-delay         Impose small delays in networking to not overload slow routers
--no-adl            Disable the ATI display library used for monitoring and setting GPU parameters
--no-restart        Do not attempt to restart GPUs that hang
--no-submit-stale   Don't submit shares if they are detected as stale
--pass|-p <arg>     Password for bitcoin JSON-RPC server
--per-device-stats  Force verbose mode and output per-device statistics
--protocol-dump|-P  Verbose dump of protocol-level activities
--queue|-Q <arg>    Minimum number of work items to have queued (0+) (default: 1)
--quiet|-q          Disable logging output, display status and errors
--quota|-U <arg>    quota;URL combination for server with load-balance strategy quotas
--real-quiet        Disable all output
--remove-disabled   Remove disabled devices entirely, as if they didn't exist
--rotate <arg>      Change multipool strategy from failover to regularly rotate at N minutes (default: 0)
--round-robin       Change multipool strategy from failover to round robin on failure
--scan-time|-s <arg> Upper bound on time spent scanning current work, in seconds (default: -1)
--sched-start <arg> Set a time of day in HH:MM to start mining (a once off without a stop time)
--sched-stop <arg>  Set a time of day in HH:MM to stop mining (will quit without a start time)
--scrypt            Use the scrypt algorithm for mining (litecoin only)
--shaders <arg>     GPU shaders per card for tuning scrypt, comma separated
--sharelog <arg>    Append share log to file
--shares <arg>      Quit after mining N shares (default: unlimited)
--socks-proxy <arg> Set socks4 proxy (host:port)
--temp-cutoff <arg> Temperature where a device will be automatically disabled, one value or comma separated list (defaul
t: 95)
--temp-hysteresis <arg> Set how much the temperature can fluctuate outside limits when automanaging speeds (default: 3)
--temp-overheat <arg> Overheat temperature when automatically managing fan and GPU speeds, one value or comma separated
list (default: 85)
--temp-target <arg> Target temperature when automatically managing fan and GPU speeds, one value or comma separated list
 (default: 75)
--text-only|-T      Disable ncurses formatted screen output
--thread-concurrency <arg> Set GPU thread concurrency for scrypt mining, comma separated
--url|-o <arg>      URL for bitcoin JSON-RPC server
--user|-u <arg>     Username for bitcoin JSON-RPC server
--usb <arg>         USB device selection
--vectors|-v <arg>  Override detected optimal vector (1, 2 or 4) - one value or comma separated list
--verbose           Log verbose output to stderr as well as status output
--worksize|-w <arg> Override detected optimal worksize - one value or comma separated list
--userpass|-O <arg> Username:Password pair for bitcoin JSON-RPC server
--worktime          Display extra work time debug information
Options for command line only:
--config|-c <arg>   Load a JSON-format configuration file
See example.conf for an example configuration.
--default-config <arg> Specify the filename of the default config file
Loaded at start and used when saving without a name.
--help|-h           Print this message
--ndevs|-n          Display number of detected GPUs, OpenCL platform information, all USB devices, and exit
--version|-V        Display version and exit

