PostgreSQL research

Postgres-XL single host cluster example

2014-07-24 21:55:33   查看原文>>

安装postgres-xl参考
http://blog.163.com/digoal@126/blog/static/163877040201462413626429/
本文在一台主机上创建多个datanode, coordinator node, gtm, gtm proxy, 搭建一个最简化的测试环境.
虽然我们这里使用了一台postgres-xl, 但是为了后期方便, 如果是多台主机的话, 环境必须一致, 例如安装的扩展插件, 依赖的库版本等.

简单步骤如下.
1. 规划目录

coordinator节点 [root@db-172-16-3-150 pgxl]# mkdir -p /ssd4/pgxl/c11921
datanode节点 [root@db-172-16-3-150 pgxl]# mkdir -p /ssd4/pgxl/d11922
datanode节点 [root@db-172-16-3-150 pgxl]# mkdir -p /ssd4/pgxl/d11923
datanode节点 [root@db-172-16-3-150 pgxl]# mkdir -p /ssd4/pgxl/d11924
datanode节点 [root@db-172-16-3-150 pgxl]# mkdir -p /ssd4/pgxl/d11925
gtm 节点 [root@db-172-16-3-150 pgxl]# mkdir -p /ssd4/pgxl/g11926
gtm proxy 节点 [root@db-172-16-3-150 pgxl]# mkdir -p /ssd4/pgxl/gp11927
修改目录权限
# chown -R pgxl:pgxl /ssd4/pgxl



2. 初始化coordinator和datanode数据库节点

# su - pgxl
$ vi .bash_profile
export PS1="$USER@`/bin/hostname -s`-> "
export PGDATA=/ssd4/pgxl/c11921/pg_root
export LANG=en_US.utf8
export PGHOME=/home/pgxl/pgxl9.2
export LD_LIBRARY_PATH=$PGHOME/lib:/lib64:/usr/lib64:/usr/local/lib64:/lib:/usr/lib:/usr/local/lib:$LD_LIBRARY_PATH
export DATE=`date +"%Y%m%d%H%M"`
export PATH=$PGHOME/bin:$PATH:.
export MANPATH=$PGHOME/share/man:$MANPATH
export PGHOST=$PGDATA
export PGPORT=11921
export PGUSER=postgres
export PGDATABASE=digoal
alias rm='rm -i'
alias ll='ls -lh'

$ . .bash_profile

initdb -D /ssd4/pgxl/c11921/pg_root --nodename=c11921 -E UTF8 --locale=C -U postgres -W
initdb -D /ssd4/pgxl/d11922/pg_root --nodename=d11922 -E UTF8 --locale=C -U postgres -W
initdb -D /ssd4/pgxl/d11923/pg_root --nodename=d11923 -E UTF8 --locale=C -U postgres -W
initdb -D /ssd4/pgxl/d11924/pg_root --nodename=d11924 -E UTF8 --locale=C -U postgres -W
initdb -D /ssd4/pgxl/d11925/pg_root --nodename=d11925 -E UTF8 --locale=C -U postgres -W



3. 配置datanode

vi /ssd4/pgxl/d11922/pg_root/pg_hba.conf 
vi /ssd4/pgxl/d11923/pg_root/pg_hba.conf 
vi /ssd4/pgxl/d11924/pg_root/pg_hba.conf 
vi /ssd4/pgxl/d11925/pg_root/pg_hba.conf 

# "local" is for Unix domain socket connections only
local   all             all                                     trust
# IPv4 local connections:
host    all             all             127.0.0.1/32            trust
# IPv6 local connections:
host    all             all             ::1/128                 trust



参考
http://files.postgres-xl.org/documentation/pg-xc-specifics.html


vi /ssd4/pgxl/d11922/pg_root/postgresql.conf
listen_addresses = '0.0.0.0'          # what IP address(es) to listen on;
port = 11922                            # (change requires restart)
max_connections = 500                   # (change requires restart)
superuser_reserved_connections = 13     # (change requires restart)
unix_socket_directory = '.'             # (change requires restart)
unix_socket_permissions = 0700          # begin with 0 to use octal notation
tcp_keepalives_idle = 60                # TCP_KEEPIDLE, in seconds;
tcp_keepalives_interval = 10            # TCP_KEEPINTVL, in seconds;
tcp_keepalives_count = 10               # TCP_KEEPCNT;
shared_buffers = 2048MB                 # min 128kB
max_prepared_transactions = 500         # zero disables the feature
shared_preload_libraries = 'pg_stat_statements'         # (change requires restart)
vacuum_cost_delay = 10ms                # 0-100 milliseconds
vacuum_cost_limit = 10000               # 1-10000 credits
bgwriter_delay = 10ms                   # 10-10000ms between rounds
shared_queues = 64                      # min 16   
shared_queue_size = 262144               # min 16KB
wal_level = hot_standby                 # minimal, archive, or hot_standby
synchronous_commit = off                # synchronization level;
wal_sync_method = fdatasync             # the default is the first option
wal_buffers = 16384kB                   # min 32kB, -1 sets based on shared_buffers
wal_writer_delay = 10ms         # 1-10000 milliseconds
checkpoint_segments = 128               # in logfile segments, min 1, 16MB each
archive_mode = on               # allows archiving to be done
archive_command = '/bin/date'           # command to use to archive a logfile segment
max_wal_senders = 32            # max number of walsender processes
hot_standby = on                        # "on" allows queries during recovery
max_standby_archive_delay = 300s        # max delay before canceling queries
max_standby_streaming_delay = 300s      # max delay before canceling queries
wal_receiver_status_interval = 1s       # send replies at least this often
hot_standby_feedback = on               # send info from standby to prevent
remote_query_cost = 100.0               # same scale as above
effective_cache_size = 96000MB
log_destination = 'csvlog'              # Valid values are combinations of
logging_collector = on          # Enable capturing of stderr and csvlog
log_directory = 'pg_log'                # directory where log files are written,
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log' # log file name pattern,
log_file_mode = 0600                    # creation mode for log files,
log_truncate_on_rotation = on           # If on, an existing log file with the
log_min_duration_statement = 1s # -1 is disabled, 0 logs all statements
log_checkpoints = on
log_connections = on
log_disconnections = on
log_error_verbosity = verbose           # terse, default, or verbose messages
log_lock_waits = on                     # log lock waits >= deadlock_timeout
log_statement = 'ddl'                   # none, ddl, mod, all
log_timezone = 'PRC'
autovacuum = on                 # Enable autovacuum subprocess?  'on'
log_autovacuum_min_duration = 0 # -1 disables, 0 logs all actions and
autovacuum_vacuum_cost_delay = 10ms     # default vacuum cost delay for
datestyle = 'iso, mdy'
timezone = 'PRC'
lc_messages = 'C'                       # locale for system error message
lc_monetary = 'C'                       # locale for monetary formatting
lc_numeric = 'C'                        # locale for number formatting
lc_time = 'C'                           # locale for time formatting
default_text_search_config = 'pg_catalog.english'
pooler_port = 21922                     # Pool Manager TCP port
max_pool_size = 100                     # Maximum pool size
pool_conn_keepalive = 60                # Close connections if they are idle
pool_maintenance_timeout = 30           # Launch maintenance routine if pooler
max_coordinators = 16                   # Maximum number of Coordinators
max_datanodes = 16                      # Maximum number of Datanodes
gtm_host = '127.0.0.1'                  # Host name or address of GTM
gtm_port = 11927                        # Port of GTM
pgxc_node_name = 'd11922'                       # Coordinator or Datanode name

vi /ssd4/pgxl/d11923/pg_root/postgresql.conf
其他同上
port = 11923                            # (change requires restart)
pooler_port = 21923                     # Pool Manager TCP port
pgxc_node_name = 'd11923'                       # Coordinator or Datanode name

vi /ssd4/pgxl/d11924/pg_root/postgresql.conf
其他同上
port = 11924                            # (change requires restart)
pooler_port = 21924                     # Pool Manager TCP port
pgxc_node_name = 'd11924'                       # Coordinator or Datanode name

vi /ssd4/pgxl/d11925/pg_root/postgresql.conf
其他同上
port = 11925                            # (change requires restart)
pooler_port = 21925                     # Pool Manager TCP port
pgxc_node_name = 'd11925'                       # Coordinator or Datanode name



4. 配置coordinator

vi /ssd4/pgxl/c11921/pg_root/pg_hba.conf
host all all 0.0.0.0/0 md5

vi /ssd4/pgxl/c11921/pg_root/postgresql.conf
其他同datanode节点配置
listen_addresses = 'localhost'
port = 11921                            # (change requires restart)
pooler_port = 21921                     # Pool Manager TCP port
pgxc_node_name = 'c11921'                       # Coordinator or Datanode name
sequence_range = 10000



5. 配置gtm
参考 man gtm

vi /ssd4/pgxl/g11926/gtm.conf
listen_addresses = '0.0.0.0'
log_file = 'gtm.log'
log_min_messages = WARNING
nodename = 'g11926'
port = 11926
startup = act



6. 配置gtm proxy
参考 man gtm_proxy

vi /ssd4/pgxl/gp11927/gtm_proxy.conf
gtm_connect_retry_interval = 10
gtm_host = '127.0.0.1'
gtm_port = 11926
keepalives_count = 10
keepalives_idle = 60
keepalives_interval = 10
log_file = 'gtm_proxy.log'
log_min_messages = WARNING
listen_addresses = '0.0.0.0'
nodename = 'gp11927'
port = 11927
worker_threads = 1



7. 启动集群
7.1 gtm

pgxl@db-172-16-3-150-> gtm_ctl -Z gtm start -D /ssd4/pgxl/g11926
server starting
pgxl@db-172-16-3-150-> netstat -anp|grep 11926
(Not all processes could be identified, non-owned process info
 will not be shown, you would have to be root to see it all.)
tcp        0      0 0.0.0.0:11926               0.0.0.0:*                   LISTEN      31690/gtm 



7.2 gtm_proxy

pgxl@db-172-16-3-150-> gtm_ctl start -Z gtm_proxy -D /ssd4/pgxl/gp11927
server starting
pgxl@db-172-16-3-150-> netstat -anp|grep 11927
(Not all processes could be identified, non-owned process info
 will not be shown, you would have to be root to see it all.)
tcp        0      0 0.0.0.0:11927               0.0.0.0:*                   LISTEN      31790/gtm_proxy 



7.3 datanode

pg_ctl start -Z datanode -D /ssd4/pgxl/d11922/pg_root
pg_ctl start -Z datanode -D /ssd4/pgxl/d11923/pg_root
pg_ctl start -Z datanode -D /ssd4/pgxl/d11924/pg_root
pg_ctl start -Z datanode -D /ssd4/pgxl/d11925/pg_root



7.4 coordinator

pg_ctl start -Z coordinator -D /ssd4/pgxl/c11921/pg_root



8. 配置所有节点的metadata, (coordinator, datanode都需要配置)
最终配置如下 : 

pgxl@db-172-16-3-150-> psql -h 127.0.0.1 -p 11921 postgres postgres -c "select * from pgxc_node order by 1"
 node_name | node_type | node_port | node_host | nodeis_primary | nodeis_preferred |  node_id   
-----------+-----------+-----------+-----------+----------------+------------------+------------
 c11921    | C         |     11921 | 127.0.0.1 | f              | f                | 1123528383
 d11922    | D         |     11922 | 127.0.0.1 | t              | t                |   -2834542
 d11923    | D         |     11923 | 127.0.0.1 | f              | f                |  958073426
 d11924    | D         |     11924 | 127.0.0.1 | f              | f                | -837906471
 d11925    | D         |     11925 | 127.0.0.1 | f              | f                | 2143637084
(5 rows)

pgxl@db-172-16-3-150-> psql -h 127.0.0.1 -p 11922 postgres postgres -c "select * from pgxc_node order by 1"
 node_name | node_type | node_port | node_host | nodeis_primary | nodeis_preferred |  node_id   
-----------+-----------+-----------+-----------+----------------+------------------+------------
 c11921    | C         |     11921 | 127.0.0.1 | f              | f                | 1123528383
 d11922    | D         |     11922 | 127.0.0.1 | t              | t                |   -2834542
 d11923    | D         |     11923 | 127.0.0.1 | f              | f                |  958073426
 d11924    | D         |     11924 | 127.0.0.1 | f              | f                | -837906471
 d11925    | D         |     11925 | 127.0.0.1 | f              | f                | 2143637084
(5 rows)

pgxl@db-172-16-3-150-> psql -h 127.0.0.1 -p 11923 postgres postgres -c "select * from pgxc_node order by 1"
 node_name | node_type | node_port | node_host | nodeis_primary | nodeis_preferred |  node_id   
-----------+-----------+-----------+-----------+----------------+------------------+------------
 c11921    | C         |     11921 | 127.0.0.1 | f              | f                | 1123528383
 d11922    | D         |     11922 | 127.0.0.1 | t              | t                |   -2834542
 d11923    | D         |     11923 | 127.0.0.1 | f              | f                |  958073426
 d11924    | D         |     11924 | 127.0.0.1 | f              | f                | -837906471
 d11925    | D         |     11925 | 127.0.0.1 | f              | f                | 2143637084
(5 rows)

pgxl@db-172-16-3-150-> psql -h 127.0.0.1 -p 11924 postgres postgres -c "select * from pgxc_node order by 1"
 node_name | node_type | node_port | node_host | nodeis_primary | nodeis_preferred |  node_id   
-----------+-----------+-----------+-----------+----------------+------------------+------------
 c11921    | C         |     11921 | 127.0.0.1 | f              | f                | 1123528383
 d11922    | D         |     11922 | 127.0.0.1 | t              | t                |   -2834542
 d11923    | D         |     11923 | 127.0.0.1 | f              | f                |  958073426
 d11924    | D         |     11924 | 127.0.0.1 | f              | f                | -837906471
 d11925    | D         |     11925 | 127.0.0.1 | f              | f                | 2143637084
(5 rows)

pgxl@db-172-16-3-150-> psql -h 127.0.0.1 -p 11925 postgres postgres -c "select * from pgxc_node order by 1"
 node_name | node_type | node_port | node_host | nodeis_primary | nodeis_preferred |  node_id   
-----------+-----------+-----------+-----------+----------------+------------------+------------
 c11921    | C         |     11921 | 127.0.0.1 | f              | f                | 1123528383
 d11922    | D         |     11922 | 127.0.0.1 | t              | t                |   -2834542
 d11923    | D         |     11923 | 127.0.0.1 | f              | f                |  958073426
 d11924    | D         |     11924 | 127.0.0.1 | f              | f                | -837906471
 d11925    | D         |     11925 | 127.0.0.1 | f              | f                | 2143637084
(5 rows)

psql -h 127.0.0.1 -p 11921 postgres postgres -c "create node group gp1 with(d11922,d11923,d11924,d11925)"
psql -h 127.0.0.1 -p 11922 postgres postgres -c "create node group gp1 with(d11922,d11923,d11924,d11925)"
psql -h 127.0.0.1 -p 11923 postgres postgres -c "create node group gp1 with(d11922,d11923,d11924,d11925)"
psql -h 127.0.0.1 -p 11924 postgres postgres -c "create node group gp1 with(d11922,d11923,d11924,d11925)"
psql -h 127.0.0.1 -p 11925 postgres postgres -c "create node group gp1 with(d11922,d11923,d11924,d11925)"

psql -h 127.0.0.1 -p 11921 postgres postgres -c "select pgxc_pool_reload()"
psql -h 127.0.0.1 -p 11922 postgres postgres -c "select pgxc_pool_reload()"
psql -h 127.0.0.1 -p 11923 postgres postgres -c "select pgxc_pool_reload()"
psql -h 127.0.0.1 -p 11924 postgres postgres -c "select pgxc_pool_reload()"
psql -h 127.0.0.1 -p 11925 postgres postgres -c "select pgxc_pool_reload()"



9. 测试数据

psql -h 127.0.0.1 -p 11921 postgres postgres
postgres=# create table t1(id serial8 primary key, info text, crt_time timestamp) distribute by hash(id) to group gp1;
NOTICE:  CREATE TABLE will create implicit sequence "t1_id_seq" for serial column "t1.id"
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "t1_pkey" for table "t1"
CREATE TABLE
postgres=# \dt
        List of relations
 Schema | Name | Type  |  Owner   
--------+------+-------+----------
 public | t1   | table | postgres
(1 row)
postgres=# \ds
            List of relations
 Schema |   Name    |   Type   |  Owner   
--------+-----------+----------+----------
 public | t1_id_seq | sequence | postgres
(1 row)
postgres=# insert into t1 (info, crt_time) select md5(random()::text), clock_timestamp() from generate_series(1,1000000);
INSERT 0 1000000
postgres=# \timing
Timing is on.
postgres=# select count(*) from t1;
  count  
---------
 1000000
(1 row)
Time: 69.302 ms

postgres=# create table t2(id int, info text, crt_time timestamp) distribute by roundrobin to group gp1;
CREATE TABLE
Time: 35.572 ms
postgres=# insert into t2 select generate_series(1,1000000),md5(random()::text), clock_timestamp();
INSERT 0 1000000
Time: 11240.192 ms
postgres=# select count(*) from t2;
  count  
---------
 1000000
(1 row)
Time: 5079.048 ms
postgres=# select count(*) from t2;
  count  
---------
 1000000
(1 row)
Time: 51.978 ms
postgres=# \dt+
                   List of relations
 Schema | Name | Type  |  Owner   | Size  | Description 
--------+------+-------+----------+-------+-------------
 public | t1   | table | postgres | 81 MB | 
 public | t2   | table | postgres | 73 MB | 
(2 rows)
postgres=# \q

pgxl@db-172-16-3-150-> psql -h 127.0.0.1 -p 11922 postgres postgres
psql (PGXL 9.2.0, based on PG 9.2.4 (Postgres-XL 9.2.0))
Type "help" for help.
postgres=# \dt+
                   List of relations
 Schema | Name | Type  |  Owner   | Size  | Description 
--------+------+-------+----------+-------+-------------
 public | t1   | table | postgres | 20 MB | 
 public | t2   | table | postgres | 18 MB | 
(2 rows)



10. 关闭集群
关闭coordinator

pg_ctl stop -m fast -Z coordinator -D /ssd4/pgxl/c11921/pg_root


关闭datanode

pg_ctl stop -m fast -Z datanode -D /ssd4/pgxl/d11922/pg_root
pg_ctl stop -m fast -Z datanode -D /ssd4/pgxl/d11923/pg_root
pg_ctl stop -m fast -Z datanode -D /ssd4/pgxl/d11924/pg_root
pg_ctl stop -m fast -Z datanode -D /ssd4/pgxl/d11925/pg_root



关闭gtm_proxy

gtm_ctl stop -m fast -Z gtm_proxy -D /ssd4/pgxl/gp11927


关闭gtm

gtm_ctl stop -m fast -Z gtm -D /ssd4/pgxl/g11926



[参考]
1. http://blog.163.com/digoal@126/blog/static/163877040201462413626429/
2. http://blog.163.com/digoal@126/blog/static/16387704020145302935957/


Flag Counter

评论

小猪.Sol - 2015-07-31 15:50:49

我把gtm单独安装在一台服务器上，在另一台服务器上初始化了cnode和dnode，配置的时候只改了port和ip相关信息，起了gtm_proxy后再起dnode（-p 5432），再起cnode（-p 3456），用"psql -h 127.0.0.1 -p 3456 postgres postgres -c "select * from pgxc_node order by 1" "查看节点信息的时候发现只能看到cnode，-p 3456改成5432后发现只能看到
dnode，而且node_type 都是C，请问这会是什么原因造成的呢？

小猪.Sol 回复小猪.Sol - 2015-07-31 15:50:49

用了你的配置，只修改了Port和IP相关的数据，起了服务后还是相同的问题。

德哥@Digoal 回复小猪.Sol - 2015-07-31 15:50:49

你可能连错节点了.

小猪.Sol 回复德哥@Digoal - 2015-07-31 15:50:49

你是指我用psql命令的时候连错节点了吗？我查看过postgres侦听的两个端口分别是3456和5432，连接5432的时候创建数据库提示read-only，连接3456的时候创建数据库提示没有datanode.

Cutis_Dow - 2015-01-12 14:58:46

我在两台虚拟机上做了部署，但是部署后我在datanode1上建表，datanode2上能查询的到，datanode2上建表，datande1上也能看到，可是就是插入数据的时候只能在其中一台上看到，也就是说数据无法分布式的存储。配置上我和你上问说的差不多，出现这样的问题，您有什么建议吗？

德哥@Digoal 回复 Cutis_Dow - 2015-01-12 14:58:46

创建表时需要指定如何分布, 分布到哪些节点或组.

Cutis_Dow 回复德哥@Digoal - 2015-01-12 14:58:46

我试过建表时制定分布节点和组，在其中一个协调上建表在所有的协调节点和数据节点都能看得到表，可是当我在协调节点上插入数据是insert into 根本无法插入数据。后来我用 pgadmin 3 登录链接协调节点的时候后台一直有一个警告"repository configuration was invalid and could not be read",我仔细对过pgxl的配置目前和您设置不一样的是：数据
节点和协调节点的端口是一样的（考虑到我在两台机子上安装的，所以就把端口弄一样了）。然后我在；两台机子上安装的postgresql数据库配置文件里端口是和其他的节点端口都不一样。

德哥@Digoal 回复 Cutis_Dow - 2015-01-12 14:58:46

不能插入, 那是因为你没有在所有的节点创建组和节点信息(cnode and dnode).
pgadmin3的警告是读metacatalog失败造成的, 可以不用管. 就用命令行吧, 图形化光油外表, 不好用的.

Cutis_Dow 回复德哥@Digoal - 2015-01-12 14:58:46

我后来仔细查找了注册节点，参考了社区里的QA，其实也就是一个小问题，datanode节点注册的时候默认类型是C，只要把它改成D 就ok了，谢谢您。

德哥@Digoal 回复 Cutis_Dow - 2015-01-12 14:58:46

恩

Cutis_Dow 回复德哥@Digoal - 2015-01-12 14:58:46

麻烦再问一个问题配置节点的时候nodeis_primary如果不设置为ture是不是集群正常运行有什么影响，如果不必须设置一个请问是随机设置的吗？

德哥@Digoal 回复 Cutis_Dow - 2015-01-12 14:58:46

On the other hand, in the case of writing replicated tables, all the Coordinators choose the same Datanode to begin with to avoid update conflicts. This is called primary Datanode.
对于复制分布的表, 必须在datanode中设置一个primary, 避免更新冲突.
如果不设置, 肯定也是有一个作为primary的, 你看看代码吧.

德哥@Digoal 回复 Cutis_Dow - 2015-01-12 14:58:46

另一个相对的是prefered node
In the case of reading replicated tables, Coordinator can choose any Datanode to read. The most efficient way is to select one running in the same hardware or virtual machine. This is called preferred Datanode and can be specified by a GUC local to each Coordinator.

Cutis_Dow 回复德哥@Digoal - 2015-01-12 14:58:46

了解了，非常感谢

renny - 2015-01-08 20:35:05

sequence_range = 10000
这个参数是什么用？我在初始化协调器后得到的postgresql.conf里没有看到这个参数。。

德哥@Digoal 回复 renny - 2015-01-08 20:35:05

sequence_range (integer)

This parameter is used to get several sequence values at once from GTM. This greatly speeds up COPY and INSERT SELECT operations where the target table uses sequences. Postgres-XL will not use this entire amount at once, but will increase the request size over time if many requests are done in a short time frame in
the same session. After a short time without any sequence requests, decreases back down to 1. Note that any settings here are overriden if the CACHE clause was used in CREATE SEQUENCE or ALTER SEQUENCE.

