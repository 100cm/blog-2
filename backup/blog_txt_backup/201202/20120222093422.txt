PostgreSQL research

PostgreSQL and Oracle's async commit

2012-02-22 9:34:22   查看原文>>

PostgreSQL 异步提交参数 : 
synchronous_commit
1. 可以设置事务, session, database级别的synchronous_commit = on|off|local
2. 结合wal_writer_delay参数可用于控制最长的WAL写入延时. ( 3*wal_writer_delay )

Oracle 异步提交参数 : 
COMMIT_WRITE
1. 可以设置session, system级别的COMMIT_WRITE = '{IMMEDIATE | BATCH},{WAIT |NOWAIT}'
2. 无法控制REDOLOG的写入延时

何时使用?
1. 一般来说不开启异步的情况下, DELETE, INSERT, UPDATE很频繁的数据库REDOLOG或PG_XLOG所在的存储会很繁忙, 当达到存储瓶颈的时候会严重影响数据库的qps. 当应用程序要求很快的响应时可以考虑使用.

弊端 : 
Oracle : 
1. 使用NOWAIT后, 客户端无法知晓事务是否真正成功. 举个例子, 当表空间满了, INSERT 的SQL实际上是失败的, 但是客户端commit时还是成功的. PostgreSQL不存在这种情况. 在Oracle中要慎用NOWAIT. 

【参考】
PostgreSQL : 

synchronous_commit (enum)
Specifies whether transaction commit will wait for WAL records to be written to disk before the command returns a "success" indication to the client. Valid values are on, local, and off. The default, and safe, value is on. When off, there can be a delay between when success is reported to the client and when the transaction is really guaranteed to be safe against a server crash. (The maximum delay is three times wal_writer_delay.) Unlike fsync, setting this parameter to off does not create any risk of database inconsistency: an operating system or database crash might result in some recent allegedly-committed transactions being lost, but the database state will be just the same as if those transactions had been aborted cleanly. So, turning synchronous_commit off can be a useful alternative when performance is more important than exact certainty about the durability of a transaction. For more discussion see Section 29.3.

If synchronous_standby_names is set, this parameter also controls whether or not transaction commit will wait for the transaction's WAL records to be flushed to disk and replicated to the standby server. The commit wait will last until a reply from the current synchronous standby indicates it has written the commit record of the transaction to durable storage. If synchronous replication is in use, it will normally be sensible either to wait both for WAL records to reach both the local and remote disks, or to allow the transaction to commit asynchronously. However, the special value local is available for transactions that wish to wait for local flush to disk, but not synchronous replication.

This parameter can be changed at any time; the behavior for any one transaction is determined by the setting in effect when it commits. It is therefore possible, and useful, to have some transactions commit synchronously and others asynchronously. For example, to make a single multistatement transaction commit asynchronously when the default is the opposite, issue SET LOCAL synchronous_commit TO OFF within the transaction.



Oracle : 

COMMIT_WRITE

Property Description
Parameter type String
Syntax COMMIT_WRITE = '{IMMEDIATE | BATCH},{WAIT |NOWAIT}'
Default value If this parameter is not explicitly specified, then database commit behavior defaults to writing commit records to disk before control is returned to the client.
If only IMMEDIATE or BATCH is specified, but not WAIT or NOWAIT, then WAIT mode is assumed.
If only WAIT or NOWAIT is specified, but not IMMEDIATE or BATCH, then IMMEDIATE mode is assumed

Modifiable Yes (at both session-level and system-level). Values supplied for COMMIT_WRITE in an ALTER SYSTEM or ALTER SESSION statement must be separated by a comma.
Range of values Single-quoted, comma-separated list of either IMMEDIATE or BATCH, and either WAIT or NOWAIT.
Basic No
Real Application Clusters Each instance may have its own setting
COMMIT_WRITE is an advanced parameter used to control how redo for transaction commits is written to the redo logs. The IMMEDIATE and BATCH options control how redo is batched by Log Writer. The WAIT and NOWAIT options control when the redo for a commit is flushed to the redo logs.


