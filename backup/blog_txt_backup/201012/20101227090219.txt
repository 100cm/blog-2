PostgreSQL research

When MongoDB's Collection name equal javaScript's property

2010-12-27 9:02:19   查看原文>>

通常，在mongo shell中查看一个collection的内容可以使用db.collection_name.find()这样的方法。但是如果碰上collection name 和javaScript 匹配的属性相同会怎么样?
来看一个例子:
1. 在当前数据库中新建一个叫version的collection,并插入值{"name" : "digoal}
通常我们的做法是db.version.insert({"name" : "digoal}); ，遗憾的是，这是不行的。
> db.version.insert({"name" : "digoal"});
Mon Dec 27 08:56:06 TypeError: db.version.insert is not a function (shell):0
很明显,mongo shell把version当成一个函数了,为什么会这样的，因为在mongodb中version是一个系统函数,如下:
> db.version
function () {
    return this.serverBuildInfo().version;
}
> db.version()
1.6.5
如果要使用version作为collection可以通过如下方法:
> db.getCollection("version").insert({"name" : "digoal"});
> db.getCollection("version").findOne();
{ "_id" : ObjectId("4d17e4b5122c71d5521cd21b"), "name" : "digoal" }
>
db.getCollection这个实际上返回的是一个namespace,全路径.
如:
在mongo shell中定义一个变量my_version等于 db.getCollection("version")
> my_version = db.getCollection("version")
admin.version
> my_version   #（my_version变量值）
admin.version
> db     #(当前db)
admin

得出的结论是 :
db’s collection-returning behavior is only a fallback for when JavaScript cannot find a matching property. When there is a property with the same name as the desired collection, we can use the getCollection function:
> db.getCollection("version");
admin.version
