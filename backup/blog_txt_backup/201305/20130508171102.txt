PostgreSQL research

PostgreSQL 9.3 Add the last checkpoint's redo location to pg_controldata's output

2013-05-08 17:11:02   查看原文>>

Add the last checkpoint's redo location to pg_controldata's output (Fujii Masao)
This information is useful for determining the WAL files needed for restore.
PostgreSQL 9.3 在控制文件中添加了最后一次checkpoint的wal文件名. 如果数据库崩溃要恢复到一个一致性状态, 那么需要从这个文件开始的所有xlog文件.
涉及到源码常见本文末尾部分.
如下 : 
pg93@db-172-16-3-33-> pg_controldata 

pg_control version number:            937
Catalog version number:               201304271
Database system identifier:           5874470726249995168
Database cluster state:               in production
pg_control last modified:             Wed 08 May 2013 05:04:08 PM CST
Latest checkpoint location:           2/560007E0
Prior checkpoint location:            2/56000740
Latest checkpoint's REDO location:    2/560007A8
Latest checkpoint's REDO WAL file:    000000030000000200000056
Latest checkpoint's TimeLineID:       3
Latest checkpoint's PrevTimeLineID:   3
Latest checkpoint's full_page_writes: on
Latest checkpoint's NextXID:          0/12158712
Latest checkpoint's NextOID:          16525
Latest checkpoint's NextMultiXactId:  1
Latest checkpoint's NextMultiOffset:  0
Latest checkpoint's oldestXID:        1674
Latest checkpoint's oldestXID's DB:   1
Latest checkpoint's oldestActiveXID:  12158712
Latest checkpoint's oldestMultiXid:   1
Latest checkpoint's oldestMulti's DB: 1
Time of latest checkpoint:            Wed 08 May 2013 05:04:08 PM CST
Fake LSN counter for unlogged rels:   0/3
Minimum recovery ending location:     0/0
Min recovery ending loc's timeline:   0
Backup start location:                0/0
Backup end location:                  0/0
End-of-backup record required:        no
Current wal_level setting:            hot_standby
Current max_connections setting:      100
Current max_prepared_xacts setting:   0
Current max_locks_per_xact setting:   64
Maximum data alignment:               8
Database block size:                  8192
Blocks per segment of large relation: 131072
WAL block size:                       16384
Bytes per WAL segment:                16777216
Maximum length of identifiers:        64
Maximum columns in an index:          32
Maximum size of a TOAST chunk:        1996
Date/time type storage:               64-bit integers
Float4 argument passing:              by value
Float8 argument passing:              by value
Data page checksum version:           0

相比PostgreSQL 9.2新增了如下记录 : 
Latest checkpoint's REDO WAL file:    000000030000000200000056
Latest checkpoint's PrevTimeLineID:   3
Latest checkpoint's oldestMultiXid:   1
Latest checkpoint's oldestMulti's DB: 1
Fake LSN counter for unlogged rels:   0/3
Min recovery ending loc's timeline:   0
Data page checksum version:           0



其中Latest checkpoint's REDO WAL file:    000000030000000200000056就是文件名.
但是这个文件名实际上在已有的信息中也可以推算出来.

Latest checkpoint's TimeLineID:       3
Latest checkpoint's REDO location:    2/560007A8


具体如何计算可以参考 : 
http://blog.163.com/digoal@126/blog/static/1638770402012914112949546/
得到的文件名也是000000030000000200000056.

[参考]
1. http://blog.163.com/digoal@126/blog/static/1638770402012914112949546/
2. src/bin/pg_controldata/pg_controldata.c

        /*
         * Calculate name of the WAL file containing the latest checkpoint's REDO
         * start point.
         */
        XLByteToSeg(ControlFile.checkPointCopy.redo, segno);
        XLogFileName(xlogfilename, ControlFile.checkPointCopy.ThisTimeLineID, segno);
......
        printf(_("Latest checkpoint's REDO WAL file:    %s\n"),
                   xlogfilename);


