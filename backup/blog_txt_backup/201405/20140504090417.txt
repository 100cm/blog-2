PostgreSQL research

Pgbouncer add client host & port info to application_name which can identify clients

2014-05-04 9:04:17   查看原文>>

使用过pgbouncer的朋友应该知道, 在数据库端看到的client_addr和client_port是pgbouncer服务器的addr和port, 所以使用这个连接池后, 就无法判别真正的客户端和端口是啥了.
现在pgbouncer为了弥补这个缺陷, 将客户端的IP和端口信息写到了application_name这个连接变量中.
具体的代码见
https://github.com/pgexperts/pgbouncer-dev/commit/ac9842870517f8c4e4a915fe6b3ccadbcdbdea03

这部分功能目前没有提交到主master分支, 所以使用以下方法下载的代码中不包含这部分更新.

# yum install -y autoconf automake asciidoc xmlto libtool
# git clone https://github.com/pgexperts/pgbouncer-dev/
# cd pgbouncer-dev
# git clone https://github.com/markokr/libusual
# rm -rf lib
# mv libusual lib
# ./autogen.sh
# ./configure --prefix=/opt/pgbouncer-dev
# make
# make install


请使用以下方法下载和安装 : 

# git clone https://github.com/pgexperts/pgbouncer-dev/archive/appname-hostport.zip
# unzip appname-hostport.zip
# cd pgbouncer-dev-appname-hostport/
# git clone https://github.com/markokr/libusual
# rm -rf lib
# mv libusual lib
# ./autogen.sh
# ./configure --prefix=/opt/pgbouncer-dev
# make
# make install



配置 : 

# mkdir /opt/pgbouncer-dev/etc
# cd /opt/pgbouncer-dev/etc
# vi config.ini

[databases]
aliasdb1 = host=172.16.3.33 port=5432 dbname=digoal pool_size=20
[pgbouncer]
pool_mode = transaction
listen_port = 6543
listen_addr = 0.0.0.0
application_name_add_host = 1
auth_type = md5
auth_file = /opt/pgbouncer-dev/etc/users.txt
logfile = /opt/pgbouncer-dev/etc/pgbouncer.log
pidfile = /opt/pgbouncer-dev/etc/pgbouncer.pid
unix_socket_dir = /opt/pgbouncer-dev/etc
admin_users = pgadmin
stats_users = pgmon
server_reset_query = DISCARD ALL
server_reset_query = 
server_check_query = select 1
server_check_delay = 30
max_client_conn = 50000
default_pool_size = 20
reserve_pool_size = 5
dns_max_ttl = 15


配置用户 : 

172.16.3.33 : 
postgres=# select usename,passwd from pg_shadow where usename='digoal';
 usename |               passwd                
---------+-------------------------------------
 digoal  | md5462f71c79368ccf422f8a773ef40074d
(1 row)

# vi users.txt
"pgadmin" "321admin"
"pgmon" "hello1888"
"digoal" "md5462f71c79368ccf422f8a773ef40074d"


启动 : 

# chmod 400 users.txt
# chown -R pg93:pg93 /opt/pgbouncer-dev

# /opt/pgbouncer-dev/bin/pgbouncer -d -v -u pg93 ./config.ini
[root@db-172-16-3-150 etc]# ps -ewf|grep pgbouncer
pg93     11388     1  0 08:38 ?        00:00:00 /opt/pgbouncer-dev/bin/pgbouncer -d -v -u pg93 ./config.ini


测试, 连接前制定的application_name被保留, 在末尾添加IP和端口信息, 注意这个IP和端口是pgbouncer主机看到的IP和端口, 如果pgbouncer和应用程序放在一台主机的话, 并且连接的是回环地址的话看到的是127.0.0.1. 如下 : 

[root@db-172-16-3-150 etc]# su - pg93
pg93@db-172-16-3-150-> psql -h 127.0.0.1 -p 6543 -U digoal aliasdb1
Password for user digoal: 
psql (9.3.3, server 9.3.2)
Type "help" for help.
aliasdb1=> select * from pg_stat_activity where pid = pg_backend_pid();
-[ RECORD 1 ]----+-------------------------------------------------------------
datid            | 16404
datname          | digoal
pid              | 12291
usesysid         | 16405
usename          | digoal
application_name | psql (127.0.0.1:39356)  -- 这个是pgbouncer看到的applicatoin server的ip和端口
client_addr      | 172.16.3.150  -- 这是数据库服务器看到的pgbouncer的IP
client_hostname  | 
client_port      | 14195
backend_start    | 2014-05-04 09:01:10.27208+08
xact_start       | 2014-05-04 09:01:12.472866+08
query_start      | 2014-05-04 09:01:12.472866+08
state_change     | 2014-05-04 09:01:12.472867+08
waiting          | f
state            | active
query            | select * from pg_stat_activity where pid = pg_backend_pid();


不使用回环地址连接, 看到的是正常的IP : 

pg93@db-172-16-3-150-> psql -h 172.16.3.150 -p 6543 -U digoal aliasdb1
Password for user digoal: 
psql (9.3.3, server 9.3.2)
Type "help" for help.

aliasdb1=> \x
Expanded display is on.
aliasdb1=> select * from pg_stat_activity where pid = pg_backend_pid();
-[ RECORD 1 ]----+-------------------------------------------------------------
datid            | 16404
datname          | digoal
pid              | 12291
usesysid         | 16405
usename          | digoal
application_name | psql (172.16.3.150:33013)
client_addr      | 172.16.3.150
client_hostname  | 
client_port      | 14195
backend_start    | 2014-05-04 09:01:10.27208+08
xact_start       | 2014-05-04 09:06:03.677831+08
query_start      | 2014-05-04 09:06:03.677831+08
state_change     | 2014-05-04 09:06:03.677832+08
waiting          | f
state            | active
query            | select * from pg_stat_activity where pid = pg_backend_pid();



连接后, 会话中设置的application_name将覆盖pgbouncer自定义的application_name : 

aliasdb1=> set application_name='test';
SET
aliasdb1=> select * from pg_stat_activity where pid = pg_backend_pid();
-[ RECORD 1 ]----+-------------------------------------------------------------
datid            | 16404
datname          | digoal
pid              | 12291
usesysid         | 16405
usename          | digoal
application_name | test
client_addr      | 172.16.3.150
client_hostname  | 
client_port      | 14195
backend_start    | 2014-05-04 09:01:10.27208+08
xact_start       | 2014-05-04 09:01:51.068359+08
query_start      | 2014-05-04 09:01:51.068359+08
state_change     | 2014-05-04 09:01:51.06836+08
waiting          | f
state            | active
query            | select * from pg_stat_activity where pid = pg_backend_pid();



[参考]
1. https://github.com/pgexperts/pgbouncer-dev/commit/ac9842870517f8c4e4a915fe6b3ccadbcdbdea03
2. http://wiki.postgresql.org/wiki/PgBouncer



Flag Counter
