PostgreSQL research

use stream replication and pg_receivexlog design postgresql realtime xlog archive

2014-05-20 11:38:22   查看原文>>

我们知道通常情况下数据库的xlog归档是在主库触发archive_command, 在archive_command中执行拷贝命令完成的.
也就是说只有数据库的xlog文件写满后才会触发, 所以归档文件可能丢失最近一个正在写的XLOG的内容.
为了能够将正在写的这部分内容也实时的归档出来, 可以使用流复制协议, 例如pg_receivexlog这个客户端工具, 通过流复制协议, 告知上游数据库的进程需要从什么位置开始接收XLOG的信息.
这样归档可以做到非常的实时.
use stream replication and pg_receivexlog design postgresql realtime xlog archive - 德哥@Digoal - PostgreSQL
但是我们需要注意到, 如果pg_receivexlog失败了的话, 在重新接收数据之前, 可能由于上游节点产生了大量的pg_xlog而导致一些xlog文件被删除了, 这样的话pg_receivexlog将丢失一些未接收的文件.
为了防止这样的事情发生, 我们可以在主节点设置archive_command, 判断文件是否已经被pg_receivexlog接收, 如果没有被接收, 那么返回异常, 这样的话就不会清除对应的xlog文件了.
最后要提一下pg_receivexlog的接收起始点, 如果我们要从一个0000000100000003000000E5这样的文件开始接收, 那么只要在对应的接收目录命名一个0000000100000003000000E5.partial的文件即可.
例如 : 
su - postgres
touch /ssd1/pg93/arch/0000000100000003000000E5.partial
pg_receivexlog -D /ssd1/pg93/arch -U postgres
这样的话, 就从0000000100000003000000E5开始接收了, 0000000100000003000000E5文件会从上游节点重新取数据过来.

[参考]
1. http://www.postgresql.org/docs/9.4/static/app-pgreceivexlog.html
Flag Counter
