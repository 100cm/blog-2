PostgreSQL research

Postgres-XL MPP improved from Postgres-XC , stormDB

2014-05-14 20:13:58   查看原文>>

Postgres-XL是从Postgres-XC衍生而来的一款产品, 经过改良, 对MPP这块做了比较大的改进.
所以它同样包含了4个组件

GTM
GTM stands for Global Transaction Manager. It provides global transaction ID and snapshot to each transaction in Postgres-XL database cluster. It also provide several global value such as sequence and global timestamp.

GTM itself can be configured as a backup of other GTM as GTM-Standby so that GTM can continue to run even if main GTM fails. You may want to install GTM-Standby to separate server.

GTM-Proxy
Because GTM has to take care of each transaction, it has to read and write enormous amount of messages which may restrict Postgres-XL scalability. GTM-Proxy is a proxy of GTM feature which groups requests and response to reduce network read/write by GTM. Distributing one snapshot to multiple transactions also contributes to reduce GTM network workload.

Coordinator
The Coordinator is an entry point to Postgres-XL from applications. You can run more than one Coordinator simultaneously in the cluster. Each Coordinator behaves just as a PostgreSQL database server, while all the Coordinators handles transactions in harmonized way so that any transaction coming into one Coordinator is protected against any other transactions coming into others. Updates by a transaction is visible immediately to others running in other Coordinators. To simplify the load balance of Coordinators and Datanodes, as mentioned below, it is highly advised to install same number of Coordinator and Datanode in a server.

Datanode
Datanode

The Coordinator and Datanode shares the same binary but their behavior is a little different. The Coordinator decomposes incoming statements into those handled by Datanodes. If necessary, the Coordinator materializes response from Datanodes to calculate final response to applications.

The Datanode is very close to PostgreSQL itself because it just handles incoming statements locally.


来看一下pg-xl和postgresql, pg-xc的对比 : 

PostgreSQL                                                                                                  Postgres-XC                                                                                                 Postgres-XL

Open source SQL database for Enterprises                                                                    Open source SQL database for Enterprises                                                                    Open source SQL database for Enterprises

                                                                                                            Large coverage of PostgreSQL support                                                                        Large coverage of PostgreSQL support

                                                   —                                                       Global MVCC Consistency                                                                                     Global MVCC Consistency

                                                   —                                                                                                          —                                                       MPP query support

                                                   —                                                                                                          —                                                       Performance improvements

                                                   —                                                                                                          —                                                       Multi-tenant security

 

In vanilla PostgreSQL and Postgres-XC, users of the database can get cluster information such as other database names. In Postgres-XL, this has been locked down for enhanced security in multi-tenant environments.

Without MPP parallelism, Postgres-XC can struggle with certain types of queries, where it may ship entire tables to a single coordinator for joining. In comparison, the Postgres-XL architecture is massively parallel with fully parallel query plans for analytical Business Intelligence workloads; each data node can
communicate with one another. Postgres-XL can uniquely handle such queries with a write transaction heavy workload at the same time.


安装方法和pg-xc相差无几, 可参考我以前写过的BLOG.
http://blog.163.com/digoal@126/blog/static/16387704020133292915600/
下面以CentOS 6.5 x64为例, 简单的写一下软件安装的过程.

# yum -y install lrzsz sysstat e4fsprogs ntp readline-devel zlib zlib-devel openssl openssl-devel pam-devel libxml2-devel libxslt-devel python-devel tcl-devel gcc make smartmontools flex bison perl perl-devel perl-ExtUtils* OpenIPMI-tools openjade libxslt

# wget http://files.postgres-xl.org/release/9.2rc/postgres-xl-v9.2-src.tar.gz
# tar -zxvf postgres-xl-v9.2-src.tar.gz 
# cd postgres-xl
[root@db-172-16-3-150 postgres-xl]# useradd pgxl
[root@db-172-16-3-150 postgres-xl]# ./configure --prefix=/home/pgxl/pgxl9.2 --with-pgport=11921 --with-perl --with-tcl --with-python --with-openssl --with-pam --without-ldap --with-libxml --with-libxslt --enable-thread-safety --enable-dtrace --enable-debug --enable-cassert
[root@db-172-16-3-150 postgres-xl]# gmake world
[root@db-172-16-3-150 postgres-xl]# gmake install-world
[root@db-172-16-3-150 postgres-xl]# su - pgxl
[pgxl@db-172-16-3-150 ~]$ ll
total 4
drwxr-xr-x 6 root root 4096 May 14 15:30 pgxl9.2
[pgxl@db-172-16-3-150 ~]$ vi .bash_profile 
# add by digoal
export PS1="$USER@`/bin/hostname -s`-> "
export PGDATA=/ssd4/pgxl/coordinator/pg_root
export LANG=en_US.utf8
export PGHOME=/home/pgxl/pgxl9.2
export LD_LIBRARY_PATH=$PGHOME/lib:/lib64:/usr/lib64:/usr/local/lib64:/lib:/usr/lib:/usr/local/lib:$LD_LIBRARY_PATH
export DATE=`date +"%Y%m%d%H%M"`
export PATH=$PGHOME/bin:$PATH:.
export MANPATH=$PGHOME/share/man:$MANPATH
export PGHOST=$PGDATA
export PGPORT=11921
export PGUSER=postgres
export PGDATABASE=digoal
alias rm='rm -i'
alias ll='ls -lh'
[pgxl@db-172-16-3-150 ~]$ . .bash_profile 
pgxl@db-172-16-3-150-> which psql
~/pgxl9.2/bin/psql
pgxl@db-172-16-3-150-> psql -V
psql (Postgres-XL) 9.2.0
(based on PostgreSQL) 9.2.4 (Postgres-XL 9.2.0)
pgxl@db-172-16-3-150-> which gtm
~/pgxl9.2/bin/gtm


数据库集群配置 : 
4个coordinator
4个datanode
4个gtm-proxy
1个gtm
1个gtm-standby
合理的配置对应的服务器 : 
coordinator, datanode, gtm-proxy3个组件放在1台服务器上, 共计耗费4台服务器.
gtm和gtm-standby各耗费1台服务器, 共计耗费2台服务器.
总共需要6台服务器.
本例的话把他们全部放在1台服务器上.

[root@db-172-16-3-150 ssd3]# mkdir -p /ssd3/pgxl/coord11921
[root@db-172-16-3-150 ssd3]# mkdir -p /ssd3/pgxl/coord11922
[root@db-172-16-3-150 ssd3]# mkdir -p /ssd3/pgxl/datan12921
[root@db-172-16-3-150 ssd3]# mkdir -p /ssd3/pgxl/datan12922
[root@db-172-16-3-150 ssd3]# mkdir -p /ssd4/pgxl/coord11923
[root@db-172-16-3-150 ssd3]# mkdir -p /ssd4/pgxl/coord11924
[root@db-172-16-3-150 ssd3]# mkdir -p /ssd4/pgxl/datan12923
[root@db-172-16-3-150 ssd3]# mkdir -p /ssd4/pgxl/datan12924
[root@db-172-16-3-150 ssd3]# chown -R pgxl:pgxl /ssd3/pgxl
[root@db-172-16-3-150 ssd3]# chown -R pgxl:pgxl /ssd4/pgxl


初始化数据库集群 : 

[root@db-172-16-3-150 ssd3]# su - pgxl
pgxl@db-172-16-3-150-> initdb -D /ssd3/pgxl/coord11921 -E UTF8 --locale=C -U postgres -W --nodename coord11921
pgxl@db-172-16-3-150-> initdb -D /ssd3/pgxl/coord11922 -E UTF8 --locale=C -U postgres -W --nodename coord11922
pgxl@db-172-16-3-150-> initdb -D /ssd4/pgxl/coord11923 -E UTF8 --locale=C -U postgres -W --nodename coord11923
pgxl@db-172-16-3-150-> initdb -D /ssd4/pgxl/coord11924 -E UTF8 --locale=C -U postgres -W --nodename coord11924
pgxl@db-172-16-3-150-> initdb -D /ssd3/pgxl/datan12921 -E UTF8 --locale=C -U postgres -W --nodename datan12921
pgxl@db-172-16-3-150-> initdb -D /ssd3/pgxl/datan12922 -E UTF8 --locale=C -U postgres -W --nodename datan12922
pgxl@db-172-16-3-150-> initdb -D /ssd4/pgxl/datan12923 -E UTF8 --locale=C -U postgres -W --nodename datan12923
pgxl@db-172-16-3-150-> initdb -D /ssd4/pgxl/datan12924 -E UTF8 --locale=C -U postgres -W --nodename datan12924



配置和启动GTM以及gtm standby : 

[root@db-172-16-3-150 ~]# mkdir /ssd3/pgxl/gtm13921
[root@db-172-16-3-150 ~]# mkdir /ssd4/pgxl/gtm13922
[root@db-172-16-3-150 ~]# chown -R pgxl:pgxl /ssd3/pgxl
[root@db-172-16-3-150 ~]# chown -R pgxl:pgxl /ssd4/pgxl
[root@db-172-16-3-150 ~]# su - pgxl
pgxl@db-172-16-3-150-> initgtm --help
initgtm initializes GTM for a Postgres-XL database cluster.

Usage:
  initgtm [NODE-TYPE] [OPTION]... [DATADIR]

Options:
 [-D, --pgdata=]DATADIR     location for this GTM node
 [-Z]NODE-TYPE              can be "gtm" or "gtm_proxy"
Less commonly used options:
  -d, --debug               generate lots of debugging output
  -n, --noclean             do not clean up after errors
  -s, --show                show internal settings

Other options:
  -?, --help                show this help, then exit
  -V, --version             output version information, then exit

pgxl@db-172-16-3-150-> initgtm -Z gtm -D /ssd3/pgxl/gtm13921
pgxl@db-172-16-3-150-> cd /ssd3/pgxl/gtm13921/
pgxl@db-172-16-3-150-> vi gtm.conf
nodename = 'gtm13921'                                # Specifies the node name.
listen_addresses = '0.0.0.0'                    # Listen addresses of this GTM.
port = 13921                            # Port number of this GTM.
startup = ACT                           # Start mode. ACT/STANDBY.
keepalives_idle = 60                    # Keepalives_idle parameter.
keepalives_interval = 10                # Keepalives_interval parameter.
keepalives_count = 10                   # Keepalives_count internal parameter.
log_file = 'gtm.log'                    # Log file name
log_min_messages = WARNING              # log_min_messages.  Default WARNING.

pgxl@db-172-16-3-150-> gtm_ctl start -Z gtm -D /ssd3/pgxl/gtm13921
server starting

pgxl@db-172-16-3-150-> initgtm -Z gtm -D /ssd4/pgxl/gtm13922
pgxl@db-172-16-3-150-> vi /ssd4/pgxl/gtm13922/gtm.conf
nodename = 'gtm13922'                           # Specifies the node name.
listen_addresses = '0.0.0.0'                    # Listen addresses of this GTM.
port = 13922                            # Port number of this GTM.
startup = STANDBY                               # Start mode. ACT/STANDBY.
active_host = '172.16.3.150'                    # Listen address of active GTM.
active_port = 13921                             # Port number of active GTM.
keepalives_idle = 60                    # Keepalives_idle parameter.
keepalives_interval = 10                # Keepalives_interval parameter.
keepalives_count = 10                   # Keepalives_count internal parameter.
log_file = 'gtm.log'                    # Log file name
log_min_messages = WARNING              # log_min_messages.  Default WARNING.

pgxl@db-172-16-3-150-> gtm_ctl start -Z gtm -D /ssd4/pgxl/gtm13922
server starting



配置和启动gtm-proxy : 

[root@db-172-16-3-150 ~]# mkdir /ssd3/pgxl/gtm14921
[root@db-172-16-3-150 ~]# mkdir /ssd3/pgxl/gtm14922
[root@db-172-16-3-150 ~]# mkdir /ssd4/pgxl/gtm14923
[root@db-172-16-3-150 ~]# mkdir /ssd4/pgxl/gtm14924
[root@db-172-16-3-150 ~]# chown -R pgxl:pgxl /ssd3/pgxl
[root@db-172-16-3-150 ~]# chown -R pgxl:pgxl /ssd4/pgxl
pgxl@db-172-16-3-150-> initgtm -Z gtm_proxy -D /ssd3/pgxl/gtm14921
pgxl@db-172-16-3-150-> initgtm -Z gtm_proxy -D /ssd3/pgxl/gtm14922
pgxl@db-172-16-3-150-> initgtm -Z gtm_proxy -D /ssd4/pgxl/gtm14923
pgxl@db-172-16-3-150-> initgtm -Z gtm_proxy -D /ssd4/pgxl/gtm14924
pgxl@db-172-16-3-150-> vi /ssd3/pgxl/gtm14921/gtm_proxy.conf
nodename = 'gtm14921'                                   # Specifies the node name.
listen_addresses = '0.0.0.0'                    # Listen addresses of this GTM.
port = 14921                                    # Port number of this GTM.
worker_threads = 1                              # Number of the worker thread of this
gtm_host = '172.16.3.150'                                       # Listen address of the active GTM.
gtm_port = 13921                                        # Port number of the active GTM.
gtm_connect_retry_interval = 5  # How long (in secs) to wait until the next
keepalives_idle = 60                    # Keepalives_idle parameter.
keepalives_interval = 10                # Keepalives_interval parameter.
keepalives_count = 10                   # Keepalives_count internal parameter.
log_file = 'gtm_proxy.log'              # Log file name
log_min_messages = WARNING              # log_min_messages.  Default WARNING.
另外几个配置略, 端口和名字改一下即可.
启动gtm_proxy
pgxl@db-172-16-3-150-> gtm_ctl start -Z gtm_proxy -D /ssd3/pgxl/gtm14921
pgxl@db-172-16-3-150-> gtm_ctl start -Z gtm_proxy -D /ssd3/pgxl/gtm14922
pgxl@db-172-16-3-150-> gtm_ctl start -Z gtm_proxy -D /ssd4/pgxl/gtm14923
pgxl@db-172-16-3-150-> gtm_ctl start -Z gtm_proxy -D /ssd4/pgxl/gtm14924

pgxl@db-172-16-3-150-> netstat -anp|grep 13921
(Not all processes could be identified, non-owned process info
 will not be shown, you would have to be root to see it all.)
tcp        0      0 0.0.0.0:13921               0.0.0.0:*                   LISTEN      1768/gtm            
tcp        0      0 172.16.3.150:13921          172.16.3.150:54576          ESTABLISHED 1768/gtm            
tcp        0      0 172.16.3.150:13921          172.16.3.150:54572          ESTABLISHED 1768/gtm            
tcp        0      0 172.16.3.150:54570          172.16.3.150:13921          ESTABLISHED 2637/gtm_proxy      
tcp        0      0 172.16.3.150:13921          172.16.3.150:54566          ESTABLISHED 1768/gtm            
tcp        0      0 172.16.3.150:13921          172.16.3.150:54570          ESTABLISHED 1768/gtm            
tcp        0      0 172.16.3.150:13921          172.16.3.150:54564          ESTABLISHED 1768/gtm            
tcp        0      0 172.16.3.150:54546          172.16.3.150:13921          ESTABLISHED 2606/gtm_proxy      
tcp        0      0 172.16.3.150:54578          172.16.3.150:13921          ESTABLISHED 2653/gtm_proxy      
tcp        0      0 172.16.3.150:13921          172.16.3.150:54578          ESTABLISHED 1768/gtm            
tcp        0      0 172.16.3.150:13921          172.16.3.150:54544          ESTABLISHED 1768/gtm            
tcp        0      0 172.16.3.150:54564          172.16.3.150:13921          ESTABLISHED 2622/gtm_proxy      
tcp        0      0 172.16.3.150:54566          172.16.3.150:13921          ESTABLISHED 2622/gtm_proxy      
tcp        0      0 172.16.3.150:13921          172.16.3.150:54546          ESTABLISHED 1768/gtm            
tcp        0      0 172.16.3.150:54572          172.16.3.150:13921          ESTABLISHED 2637/gtm_proxy      
tcp        0      0 172.16.3.150:54576          172.16.3.150:13921          ESTABLISHED 2653/gtm_proxy      
tcp        0      0 172.16.3.150:54544          172.16.3.150:13921          ESTABLISHED 2606/gtm_proxy      



配置和启动datanode 节点 : 

pgxl@db-172-16-3-150-> cd /ssd3/pgxl/datan12921
pgxl@db-172-16-3-150-> vi pg_hba.conf
host all all 127.0.0.1/32 trust
host all all 172.16.3.150/32 trust
其他几个数据节点同上.

pgxl@db-172-16-3-150-> vi postgresql.conf
listen_addresses = '0.0.0.0'            # what IP address(es) to listen on;
port = 12921                            # (change requires restart)
max_connections = 400                   # (change requires restart)
superuser_reserved_connections = 13     # (change requires restart)
unix_socket_directory = '.'             # (change requires restart)
tcp_keepalives_idle = 60                # TCP_KEEPIDLE, in seconds;
tcp_keepalives_interval = 10            # TCP_KEEPINTVL, in seconds;
tcp_keepalives_count = 10               # TCP_KEEPCNT;
shared_buffers = 2048MB                 # min 128kB
maintenance_work_mem = 512MB            # min 1MB
vacuum_cost_delay = 10ms                # 0-100 milliseconds
vacuum_cost_limit = 10000               # 1-10000 credits
bgwriter_delay = 10ms                   # 10-10000ms between rounds
shared_queues = 64                      # min 16   
shared_queue_size = 2048kB              # min 16KB
synchronous_commit = off                # synchronization level;
wal_buffers = 16384kB                   # min 32kB, -1 sets based on shared_buffers
wal_writer_delay = 10ms         # 1-10000 milliseconds
checkpoint_segments = 128               # in logfile segments, min 1, 16MB each
network_byte_cost = 0.001               # same scale as above
remote_query_cost = 100.0               # same scale as above
effective_cache_size = 96000MB
log_destination = 'csvlog'              # Valid values are combinations of
logging_collector = on          # Enable capturing of stderr and csvlog
log_truncate_on_rotation = on           # If on, an existing log file with the
log_checkpoints = on
log_connections = on
log_disconnections = on
log_error_verbosity = verbose           # terse, default, or verbose messages
log_statement = 'ddl'                   # none, ddl, mod, all
log_timezone = 'PRC'
log_autovacuum_min_duration = 0 # -1 disables, 0 logs all actions and
datestyle = 'iso, mdy'
timezone = 'PRC'
lc_messages = 'C'                       # locale for system error message
lc_monetary = 'C'                       # locale for monetary formatting
lc_numeric = 'C'                        # locale for number formatting
lc_time = 'C'                           # locale for time formatting
default_text_search_config = 'pg_catalog.english'
pooler_port = 16921                     # Pool Manager TCP port
max_pool_size = 100                     # Maximum pool size
pool_conn_keepalive = 60                # Close connections if they are idle
pool_maintenance_timeout = 30           # Launch maintenance routine if pooler
max_coordinators = 16                   # Maximum number of Coordinators
max_datanodes = 16                      # Maximum number of Datanodes
gtm_host = 'localhost'                  # Host name or address of GTM
gtm_port = 14921                        # Port of GTM
pgxc_node_name = 'datan12921'                   # Coordinator or Datanode name
其他节点配置同上, 修改对应端口
启动datanode
pgxl@db-172-16-3-150-> pg_ctl start -Z datanode -D /ssd3/pgxl/datan12921 
pgxl@db-172-16-3-150-> pg_ctl start -Z datanode -D /ssd3/pgxl/datan12922
pgxl@db-172-16-3-150-> pg_ctl start -Z datanode -D /ssd4/pgxl/datan12923 
pgxl@db-172-16-3-150-> pg_ctl start -Z datanode -D /ssd4/pgxl/datan12924 



配置和启动coordinator 节点 : 

pgxl@db-172-16-3-150-> cd /ssd3/pgxl/coord11921
pgxl@db-172-16-3-150-> vi pg_hba.conf 
host all all 127.0.0.1/32 trust
host all all 172.16.3.150/32 trust
host all all 0.0.0.0/0 md5


其他几个节点同上.


pgxl@db-172-16-3-150-> vi postgresql.conf
listen_addresses = '0.0.0.0'            # what IP address(es) to listen on;
port = 11921                            # (change requires restart)
max_connections = 100                   # (change requires restart)
superuser_reserved_connections = 13     # (change requires restart)
unix_socket_directory = '.'             # (change requires restart)
tcp_keepalives_idle = 60                # TCP_KEEPIDLE, in seconds;
tcp_keepalives_interval = 10            # TCP_KEEPINTVL, in seconds;
tcp_keepalives_count = 10               # TCP_KEEPCNT;
shared_buffers = 1024MB                 # min 128kB
max_prepared_transactions = 16          # zero disables the feature
maintenance_work_mem = 512MB            # min 1MB
vacuum_cost_delay = 10ms                # 0-100 milliseconds
vacuum_cost_limit = 10000               # 1-10000 credits
bgwriter_delay = 10ms                   # 10-10000ms between rounds
synchronous_commit = on         # synchronization level;
checkpoint_segments = 64                # in logfile segments, min 1, 16MB each
network_byte_cost = 0.001               # same scale as above
remote_query_cost = 100.0               # same scale as above
effective_cache_size = 96000MB
log_destination = 'csvlog'              # Valid values are combinations of
logging_collector = on          # Enable capturing of stderr and csvlog
log_truncate_on_rotation = on           # If on, an existing log file with the
log_checkpoints = on
log_connections = on
log_disconnections = on
log_error_verbosity = verbose           # terse, default, or verbose messages
log_statement = 'ddl'                   # none, ddl, mod, all
log_timezone = 'PRC'
log_autovacuum_min_duration = 0 # -1 disables, 0 logs all actions and
datestyle = 'iso, mdy'
timezone = 'PRC'
lc_messages = 'C'                       # locale for system error message
lc_monetary = 'C'                       # locale for monetary formatting
lc_numeric = 'C'                        # locale for number formatting
lc_time = 'C'                           # locale for time formatting
default_text_search_config = 'pg_catalog.english'
pooler_port = 15921                     # Pool Manager TCP port
max_pool_size = 1600                    # Maximum pool size
pool_conn_keepalive = 60                # Close connections if they are idle
pool_maintenance_timeout = 30           # Launch maintenance routine if pooler
max_coordinators = 16                   # Maximum number of Coordinators
max_datanodes = 16                      # Maximum number of Datanodes
gtm_host = 'localhost'                  # Host name or address of GTM
gtm_port = 14921                        # Port of GTM
pgxc_node_name = 'coord11921'                   # Coordinator or Datanode name
sequence_range = 100


其他几个节点同上, 修改对应的端口
启动coordinator

pgxl@db-172-16-3-150-> pg_ctl start -Z coordinator -D /ssd3/pgxl/coord11921
pgxl@db-172-16-3-150-> pg_ctl start -Z coordinator -D /ssd3/pgxl/coord11922
pgxl@db-172-16-3-150-> pg_ctl start -Z coordinator -D /ssd4/pgxl/coord11923
pgxl@db-172-16-3-150-> pg_ctl start -Z coordinator -D /ssd4/pgxl/coord11924



测试 : 
连接到任意一个coordinator.

pgxl@db-172-16-3-150-> psql -h 127.0.0.1 -p 11921 -U postgres postgres
psql (PGXL 9.2.0, based on PG 9.2.4 (Postgres-XL 9.2.0))
Type "help" for help.
postgres=# \dtS pgxc*
             List of relations
   Schema   |    Name    | Type  |  Owner   
------------+------------+-------+----------
 pg_catalog | pgxc_class | table | postgres
 pg_catalog | pgxc_group | table | postgres
 pg_catalog | pgxc_node  | table | postgres
(3 rows)

postgres=# \dvS pgxc*
                 List of relations
   Schema   |        Name         | Type |  Owner   
------------+---------------------+------+----------
 pg_catalog | pgxc_prepared_xacts | view | postgres
(1 row)

postgres=# select * from pgxc_node;
 node_name  | node_type | node_port | node_host | nodeis_primary | nodeis_preferred |  node_id   
------------+-----------+-----------+-----------+----------------+------------------+------------
 coord11921 | C         |      5432 | localhost | f              | f                | -629813779
(1 row)

pgxl@db-172-16-3-150-> psql -h 127.0.0.1 -p 11922 -U postgres postgres
psql (PGXL 9.2.0, based on PG 9.2.4 (Postgres-XL 9.2.0))
Type "help" for help.

postgres=# select * from pgxc_node;
 node_name  | node_type | node_port | node_host | nodeis_primary | nodeis_preferred |  node_id  
------------+-----------+-----------+-----------+----------------+------------------+-----------
 coord11922 | C         |      5432 | localhost | f              | f                | 478655587
(1 row)


创建coordinator节点信息

pgxl@db-172-16-3-150-> psql -h 127.0.0.1 -p 11921 -U postgres postgres
psql (PGXL 9.2.0, based on PG 9.2.4 (Postgres-XL 9.2.0))
Type "help" for help.


创建coordinator节点 : 

postgres=# create node coord11922 with (type=coordinator, host='172.16.3.150', port=11922);
CREATE NODE
postgres=# create node coord11923 with (type=coordinator, host='172.16.3.150', port=11923);
CREATE NODE
postgres=# create node coord11924 with (type=coordinator, host='172.16.3.150', port=11924);
CREATE NODE
postgres=# alter node coord11921 with (type=coordinator, host='172.16.3.150', port=11921);
ALTER NODE



创建datanode节点.

postgres=# create node datan12921 with (type=datanode, host='172.16.3.150', port=12921, primary=true);
CREATE NODE
postgres=# create node datan12922 with (type=datanode, host='172.16.3.150', port=12922, primary=false);
CREATE NODE
postgres=# create node datan12923 with (type=datanode, host='172.16.3.150', port=12923, primary=false);
CREATE NODE
postgres=# create node datan12924 with (type=datanode, host='172.16.3.150', port=12924, primary=false);
CREATE NODE

postgres=# SELECT pgxc_pool_reload();
 pgxc_pool_reload 
------------------
 t
(1 row)
postgres=# create node group gp1 with (datan12921, datan12922, datan12923, datan12924);
CREATE NODE GROUP

postgres=# SELECT pgxc_pool_reload();
 pgxc_pool_reload 
------------------
 t
(1 row)



同样需要连接到其他coordinator节点创建coordinator节点和datanode节点的信息.

创建测试表 : 

pgxl@db-172-16-3-150-> psql -h 127.0.0.1 -p 11921 -U postgres postgres
psql (PGXL 9.2.0, based on PG 9.2.4 (Postgres-XL 9.2.0))
Type "help" for help.

postgres=# create table userinfo(id serial8 primary key, info text, crt_time timestamp) distribute by hash(id) to group gp1;
NOTICE:  CREATE TABLE will create implicit sequence "userinfo_id_seq" for serial column "userinfo.id"
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "userinfo_pkey" for table "userinfo"
CREATE TABLE
postgres=# \dt
          List of relations
 Schema |   Name   | Type  |  Owner   
--------+----------+-------+----------
 public | userinfo | table | postgres
(1 row)


在其他coordinator可以看到这个表的定义

pgxl@db-172-16-3-150-> psql -h 127.0.0.1 -p 11924 -U postgres postgres
psql (PGXL 9.2.0, based on PG 9.2.4 (Postgres-XL 9.2.0))
Type "help" for help.

postgres=# \dt
          List of relations
 Schema |   Name   | Type  |  Owner   
--------+----------+-------+----------
 public | userinfo | table | postgres
(1 row)



关闭集群的顺序.

coordinator
datanode
gtm_proxy
gtm_standby
gtm


pgxl@db-172-16-3-150-> pg_ctl stop -D /ssd3/pgxl/coord11921
pgxl@db-172-16-3-150-> pg_ctl stop -D /ssd3/pgxl/coord11922
pgxl@db-172-16-3-150-> pg_ctl stop -D /ssd4/pgxl/coord11923
pgxl@db-172-16-3-150-> pg_ctl stop -D /ssd4/pgxl/coord11924

pgxl@db-172-16-3-150-> pg_ctl stop -D /ssd3/pgxl/datan12921
pgxl@db-172-16-3-150-> pg_ctl stop -D /ssd3/pgxl/datan12922
pgxl@db-172-16-3-150-> pg_ctl stop -D /ssd4/pgxl/datan12923
pgxl@db-172-16-3-150-> pg_ctl stop -D /ssd4/pgxl/datan12924

pgxl@db-172-16-3-150-> gtm_ctl stop -Z gtm_proxy -D /ssd3/pgxl/gtm14921
pgxl@db-172-16-3-150-> gtm_ctl stop -Z gtm_proxy -D /ssd3/pgxl/gtm14922
pgxl@db-172-16-3-150-> gtm_ctl stop -Z gtm_proxy -D /ssd4/pgxl/gtm14923
pgxl@db-172-16-3-150-> gtm_ctl stop -Z gtm_proxy -D /ssd4/pgxl/gtm14924

pgxl@db-172-16-3-150-> gtm_ctl stop -Z gtm -D /ssd4/pgxl/gtm13922
pgxl@db-172-16-3-150-> gtm_ctl stop -Z gtm -D /ssd3/pgxl/gtm13921



启动集群的顺序

gtm
gtm_standby
gtm_proxy
datanode
coordinator

pgxl@db-172-16-3-150-> gtm_ctl start -Z gtm -D /ssd3/pgxl/gtm13921
pgxl@db-172-16-3-150-> gtm_ctl start -Z gtm -D /ssd4/pgxl/gtm13922

pgxl@db-172-16-3-150-> gtm_ctl start -Z gtm_proxy -D /ssd3/pgxl/gtm14921
pgxl@db-172-16-3-150-> gtm_ctl start -Z gtm_proxy -D /ssd3/pgxl/gtm14922
pgxl@db-172-16-3-150-> gtm_ctl start -Z gtm_proxy -D /ssd4/pgxl/gtm14923
pgxl@db-172-16-3-150-> gtm_ctl start -Z gtm_proxy -D /ssd4/pgxl/gtm14924

pgxl@db-172-16-3-150-> pg_ctl start -Z datanode -D /ssd3/pgxl/datan12921
pgxl@db-172-16-3-150-> pg_ctl start -Z datanode -D /ssd3/pgxl/datan12922
pgxl@db-172-16-3-150-> pg_ctl start -Z datanode -D /ssd4/pgxl/datan12923
pgxl@db-172-16-3-150-> pg_ctl start -Z datanode -D /ssd4/pgxl/datan12924

pgxl@db-172-16-3-150-> pg_ctl start -Z coordinator -D /ssd3/pgxl/coord11921
pgxl@db-172-16-3-150-> pg_ctl start -Z coordinator -D /ssd3/pgxl/coord11922
pgxl@db-172-16-3-150-> pg_ctl start -Z coordinator -D /ssd4/pgxl/coord11923
pgxl@db-172-16-3-150-> pg_ctl start -Z coordinator -D /ssd4/pgxl/coord11924



[其他建议]
1. 如果用作MPP, 可以不需要加gtm_proxy, 以及只需要1台coordinator即可, 因为TPS不是压力. 大量的压力在DATANODE端.

[参考]
1. http://files.postgres-xl.org/documentation/index.html
2. http://www.postgres-xl.org/
3. http://www.translattice.com/postgres_compare.shtml
4. http://postgres-xl.sourceforge.net/
5. http://blog.163.com/digoal@126/blog/static/16387704020133292915600/
6. http://files.postgres-xl.org/documentation/pg-xc-specifics.html

Flag Counter

评论

23334 - 2015-04-16 13:43:48

楼主在生产环境用过没？健壮性如何？

德哥@Digoal 回复 23334 - 2015-04-16 13:43:48

健壮性肯定不如PostgreSQL, 但是能cover住就可以了, 至于要不要上生产, 这个应该看业务需求.

freya - 2014-09-04 14:02:43

哇，pg_xl功能这么强大。。

