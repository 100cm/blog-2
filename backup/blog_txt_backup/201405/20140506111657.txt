PostgreSQL research

PostgreSQL 9.4 New Feature - Only WAL-log the modified portion in an UPDATE, if possible.

2014-05-06 11:16:57   查看原文>>

PostgreSQL的update会产生被更新的行的一条新版本的行信息, 新产生的行需要被写入wal中.
显然对于更新频繁的场景, 写入WAL的信息也是比较大的, 对于更新值在整行来说只占部分的场景, 并且新版本的行在当前heap page的话, 那么wal中可以只记录被变更的字段. 以此来减少wal的写入量.

Only WAL-log the modified portion in an UPDATE, if possible.
author  Heikki Linnakangas <heikki.linnakangas@iki.fi>
Wed, 12 Mar 2014 20:46:04 +0000 (22:46 +0200)
committer       Heikki Linnakangas <heikki.linnakangas@iki.fi>
Wed, 12 Mar 2014 21:28:36 +0000 (23:28 +0200)
commit  a3115f0d9ec1ac93b82156535dc00b10172a4fe7
tree    675870269d119e1632d9345539efd11ac16d044e        tree | snapshot
parent  17d787a3b160eefb2ff4a3fdf12ca1fedc02cbc1        commit | diff
Only WAL-log the modified portion in an UPDATE, if possible.

When a row is updated, and the new tuple version is put on the same page as
the old one, only WAL-log the part of the new tuple that's not identical to
the old. This saves significantly on the amount of WAL that needs to be
written, in the common case that most fields are not modified.

Amit Kapila, with a lot of back and forth with me, Robert Haas, and others.


测试 : 

digoal=# create table test(id int primary key, info text, crt_time timestamp, bigdata text) with (fillfactor =70);
CREATE TABLE
digoal=# insert into test select generate_series(1,5000000), 'test', clock_timestamp(), repeat(md5(random()::text),20);
INSERT 0 5000000
digoal=# checkpoint;
CHECKPOINT
digoal=# select pg_current_xlog_location();
 pg_current_xlog_location 
--------------------------
 16/6FAD7AF0
(1 row)

pg94@db-172-16-3-150-> vi test.sql
\setrandom id 1 5000000
update test set info='new' where id=:id;


pg94@db-172-16-3-150-> pgbench -M prepared -n -r -f ./test.sql -c 8 -j 4 -t 200000
transaction type: Custom query
scaling factor: 1
query mode: prepared
number of clients: 8
number of threads: 4
number of transactions per client: 200000
number of transactions actually processed: 1600000/1600000
latency average: 0.000 ms
tps = 7835.878926 (including connections establishing)
tps = 7836.145262 (excluding connections establishing)
statement latencies in milliseconds:
        0.003165        \setrandom id 1 5000000
        1.014506        update test set info='new' where id=:id;


digoal=# checkpoint;
CHECKPOINT
digoal=# select pg_current_xlog_location();
 pg_current_xlog_location 
--------------------------
 18/1B7790C8
(1 row)
digoal=# select pg_xlog_location_diff('18/1B7790C8','16/6FAD7AF0');
 pg_xlog_location_diff 
-----------------------
            7177115096
(1 row)



同样测试环境以及配置(block size, wal block size, wal_level)下9.1.3的测试结果 : 
8863512919
减少19%.

[参考]
1. http://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=a3115f0d9ec1ac93b82156535dc00b10172a4fe7
Flag Counter

评论

freya - 2014-05-06 11:20:40

[face30]
