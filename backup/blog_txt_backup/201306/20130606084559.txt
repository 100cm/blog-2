PostgreSQL research

PostgreSQL process management - kill|stop backend process

2013-06-06 8:45:59   查看原文>>

PostgreSQL 进程从功能来划分的话, 分为如下几类.
主进程, autovacuum 监视进程和autovacuum worker进程, checkpoint进程, 记录日志的logger进程, 写xlog的wal writer进程, 写buffer脏数据的writer进程, 收集统计信息的stats进程. 以及与客户端交互的进程.
所有进程都是直接或间接从主进程fork出来的. 从父进程号可以看出, 一下进程都是主进程postgres fork出来的.

[root@kefu ~]# ps -ewf|grep postgres|grep -v grep|sort -k 3
postgres 31940     1  0 Jun04 ?        00:00:00 /opt/pgsql9.3beta1/bin/postgres
postgres 11881 31940  0 08:06 ?        00:00:00 postgres: postgres postgres [local] idle
postgres 31946 31940  0 Jun04 ?        00:00:00 postgres: autovacuum launcher process   
postgres 31943 31940  0 Jun04 ?        00:00:00 postgres: checkpointer process   
postgres 31941 31940  0 Jun04 ?        00:00:00 postgres: logger process       
postgres 31945 31940  0 Jun04 ?        00:00:00 postgres: wal writer process   
postgres 31944 31940  0 Jun04 ?        00:00:00 postgres: writer process       
postgres 31947 31940  0 Jun04 ?        00:00:03 postgres: stats collector process  


如果开启了流复制, 还有用于流复制的sender或receiver进程. 以及启动数据库是可能会出现的执行数据库恢复的startup进程等.
本文主要介绍一下进程管理中可能会用到的杀进程.
杀进程严禁使用kill -9 pid这种方式来杀. 这样将导致数据库除主进程外的其他进程crash并自动重启(restart_after_crash = on).
如果使用kill-9 来结束进程, 会怎么样呢? 例如 : 
开启一个事务 : 

postgres@kefu-> psql
psql (9.3beta1)
Type "help" for help.
postgres=# begin;
BEGIN
postgres=# select pg_backend_pid();
 pg_backend_pid 
----------------
          12111
(1 row)


使用 kill -9 杀掉这个会话.

postgres@kefu-> kill -9 12111


查看数据库日志 : 

2013-06-06 08:20:11.124 CST,,,12108,,51afd5a6.2f4c,2,,2013-06-06 08:19:50 CST,1/0,0,WARNING,57P02,"terminating connection because of crash of another server process","The postmaster has commanded this server process to roll back the current transaction and exit, because another server process exited abnormally and possibly corrupted shared memory.","In a moment you should be able to reconnect to the database and repeat your command.",,,,,,"quickdie, postgres.c:2548",""
2013-06-06 08:20:11.125 CST,,,12102,,51afd5a6.2f46,4,,2013-06-06 08:19:50 CST,,0,LOG,00000,"all server processes terminated; reinitializing",,,,,,,,"PostmasterStateMachine, postmaster.c:3472",""
2013-06-06 08:20:11.230 CST,,,12114,,51afd5bb.2f52,1,,2013-06-06 08:20:11 CST,,0,LOG,00000,"database system was interrupted; last known up at 2013-06-06 08:19:50 CST",,,,,,,,"StartupXLOG, xlog.c:4909",""
2013-06-06 08:20:11.231 CST,,,12114,,51afd5bb.2f52,2,,2013-06-06 08:20:11 CST,,0,LOG,00000,"database system was not properly shut down; automatic recovery in progress",,,,,,,,"StartupXLOG, xlog.c:5283",""
2013-06-06 08:20:11.231 CST,,,12114,,51afd5bb.2f52,3,,2013-06-06 08:20:11 CST,,0,LOG,00000,"crash recovery starts in timeline 1 and has target timeline 1",,,,,,,,"StartupXLOG, xlog.c:5289",""


所有的server process crash, 并自动重新初始化. 重新初始话后数据库可以被正常访问.

如果修改配置 restart_after_crash = off, 并重启数据库. 使用kill -9 杀进程会导致数据库停止.

postgres@kefu-> pg_ctl restart
waiting for server to shut down.... done
server stopped
server starting
postgres@kefu-> LOG:  00000: loaded library "pg_stat_statements"
LOCATION:  load_libraries, miscinit.c:1296


开启一个会话 : 

postgres@kefu-> psql
psql (9.3beta1)
Type "help" for help.
postgres=# begin;
BEGIN
postgres=# select pg_backend_pid();
 pg_backend_pid 
----------------
          12144
(1 row)


使用kill -9 杀掉这个会话 

postgres@kefu-> kill -9 12144


查看数据库日志 : 

2013-06-06 08:22:14.623 CST,,,12141,,51afd62a.2f6d,2,,2013-06-06 08:22:02 CST,1/0,0,WARNING,57P02,"terminating connection because of crash of another server process","The postmaster has commanded this server process to roll back the current transaction and exit, because another server process exited abnormally and possibly corrupted shared memory.","In a moment you should be able to reconnect to the database and repeat your command.",,,,,,"quickdie, postgres.c:2548",""


数据库关闭, 不会自动重启.

postgres@kefu-> psql
psql: could not connect to server: No such file or directory
        Is the server running locally and accepting
        connections on Unix domain socket "/database/pgdata/pg_root/.s.PGSQL.1921"?



所以如果遇到紧急情况需要杀进程, 例如因为正在执行的SQL占用太多的资源, 或者抢占了锁, DBA需要干预怎么做呢?
请使用pg_cancel_backend, 或者pg_terminate_backend函数来结束.
pg_cancel_backend(pid int) 结束该进程的当前SQL, 使用超级用户或该会话同名用户(PostgreSQL 9.3)执行. 实际上发了个SIGINT信号给该进程.
pg_terminate_backend(pid int)   结束该进程, 使用超级用户或该会话同名用户(PostgreSQL 9.3)执行. 实际上发了个SIGTERM信号给该进程.
进程号可以通过pg_stat_activity查看, 或者操作系统的taskmgr或ps查看.
使用这两个函数比使用kill -9 发的SIGKILL信号要好多了. 不会导致数据库crash. 
举例 : 
SESSION A : 

postgres@kefu-> psql
psql (9.3beta1)
Type "help" for help.
postgres=# begin;
BEGIN
postgres=# select pg_backend_pid();
 pg_backend_pid 
----------------
          12287
(1 row)
执行一个long sql : 
postgres=# select count(*) from generate_series(1,1000000000000000);



SESSION B : 

postgres@kefu-> psql
psql (9.3beta1)
Type "help" for help.


查看当前数据库中的SQL

postgres=# select usename,backend_start,pid,state,query from pg_stat_activity;
 usename  |         backend_start         |  pid  | state  |                                query                                
----------+-------------------------------+-------+--------+---------------------------------------------------------------------
 postgres | 2013-06-06 08:38:39.136155+08 | 12287 | active | select count(*) from generate_series(1,1000000000000000);
 postgres | 2013-06-06 08:35:58.464465+08 | 12266 | active | select usename,backend_start,pid,state,query from pg_stat_activity;
(2 rows)


使用pg_cancel_backend, 结束当前SQL. 如果是事务的话, 事务被回滚. 或回到savepoint.

postgres=# select pg_cancel_backend(12287);
 pg_cancel_backend 
-------------------
 t
(1 row)



SESSION A : 
事务回滚

ERROR:  canceling statement due to user request
postgres=# select now();
ERROR:  current transaction is aborted, commands ignored until end of transaction block
postgres=# end;
ROLLBACK



SESSION B : 
使用pg_terninate_backend, 将结束这个进程.

postgres=# select pg_terminate_backend(12287);
 pg_terminate_backend 
----------------------
 t
(1 row)



SESSION A : 
进程被结束

postgres=# begin;
server closed the connection unexpectedly
        This probably means the server terminated abnormally
        before or while processing the request.
The connection to the server was lost. Attempting reset: Succeeded.



使用函数和发对应信号给进程效果是一样的. 如下 : 

postgres=# select usename,backend_start,pid,state,query from pg_stat_activity;
 usename  |         backend_start         |  pid  | state  |                                query                                
----------+-------------------------------+-------+--------+---------------------------------------------------------------------
 postgres | 2013-06-06 08:41:56.637691+08 | 12304 | active | select count(*) from generate_series(1,1000000000000000);
 postgres | 2013-06-06 08:43:02.848037+08 | 12309 | active | select usename,backend_start,pid,state,query from pg_stat_activity;
(2 rows)

postgres=# \q
postgres@kefu-> kill -SIGINT 12304

postgres=# select count(*) from generate_series(1,1000000000000000);
ERROR:  canceling statement due to user request




