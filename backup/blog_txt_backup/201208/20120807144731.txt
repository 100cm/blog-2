PostgreSQL research

include custom head file

2012-08-07 14:47:31   查看原文>>

前面已经看到GCC编译时分成4个步骤，第一步是预处理, 其中就包含了include 头文件.
C通过头文件可以调用其他c文件中的函数, 如果要共享变量, 变量定义时需使用extern .

举个例子 : 
封装函数 : 

[root@db-172-16-3-150 zzz]# cat encrypt.c
void encrypt(char *msg) {
  while (* msg) {
    *msg = *msg ^ 31;
    msg++;
  }
}


封装函数的头文件 : 

[root@db-172-16-3-150 zzz]# cat encrypt.h
void encrypt(char * msg);



主函数 : 

[root@db-172-16-3-150 zzz]# cat a.c
#include <stdio.h>  //头文件放在/usr/include 或/usr/local/include 中或者编译时使用-I的目录中使用尖括号.
#include "encrypt.h"  //头文件如果放在本地目录或相对目录或绝对目录时可使用双引号

int main() {
  char msg[80];
  while(fgets(msg,80,stdin)) {
    printf("original msg:%s\n", msg);
    // encode
    encrypt(msg);
    printf("encoded msg:%s\n", msg);
    // decode
    encrypt(msg);
    printf("decoded msg:%s\n", msg);
  }
  return 0;
}


编译时需要指出所有用到的C文件( 这里是 a.c 和 encrypt.c ).
gcc -O3 -Wall -Wextra -Werror -g ./a.c ./encrypt.c -o a
改为尖括号的话编译命令要改一下, 添加-I 或者把这个头文件拷贝到/usr/include里面才可以正常编译.

[root@db-172-16-3-150 zzz]# gcc -O3 -Wall -Wextra -Werror -g ./a.c ./encrypt.c -o a && ./a
./a.c:2:21: error: encrypt.h: No such file or directory
cc1: warnings being treated as errors
./a.c: In function ‘main’:
./a.c:9: warning: implicit declaration of function ‘encrypt’

把encrypt.h 拷贝到/usr/include中正常编译.
[root@db-172-16-3-150 zzz]# cp encrypt.h /usr/include/
[root@db-172-16-3-150 zzz]# gcc -O3 -Wall -Wextra -Werror -g ./a.c ./encrypt.c -o a

假设encrypt.h头文件在/root/zzz里面, 添加-I/root/zzz 正常编译.
[root@db-172-16-3-150 zzz]# gcc -O3 -Wall -Wextra -Werror -g -I/root/zzz ./a.c ./encrypt.c -o a


