PostgreSQL research

fgets vs scanf

2012-08-07 7:47:49   查看原文>>

fgets vs scanf - 德哥@Digoal - The Heart,The World.

fscanf 与scanf类似, 只是多了可选数据流.
如stdin ,还是其他data stream.


[root@db-172-16-3-150 zzz]# cat n.c
#include <stdio.h>
#include <string.h>

char a[10];
int main() {
  printf("enter a word:");
  fgets(a,sizeof(a),stdin);  // 使用stdin作为输入, fgets限定长度时使用sizeof(a) 不需要去除\0. scanf和fscanf使用%10s限定长度时表示存储10个字符(不包括\0, 所以要sizeof(a)-1)
  printf("a:%s\n", a);
  return 0;
}
结果
[root@db-172-16-3-150 zzz]# gcc -O3 -Wall -Wextra -Werror -g ./n.c -o n && ./n
enter a word:abc def ghi
a:abc def g


[root@db-172-16-3-150 zzz]# cat n.c
#include <stdio.h>
#include <string.h>
#include <unistd.h>
#include <stdlib.h>

int main() {
  char a[10];
  char w_file[] = "/root/zzz/out.txt";
  char w_mode[] = "w";
  FILE *out = fopen(w_file,w_mode);
  printf("enter a word:");
  fgets(a,sizeof(a),stdin);
  fprintf(out,"a:%s\n", a);  // 输出到文件
  return 0;
}
结果
[root@db-172-16-3-150 zzz]# gcc -O3 -Wall -Wextra -Werror -g ./n.c -o n && ./n
enter a word:abcdefghijkl
[root@db-172-16-3-150 zzz]# cat out.txt
a:abcdefghi


在测试时遇到几个问题, 请教了诸位C高手后,记录一下.
请教一个问题。

#include <stdio.h>
#include <string.h>
#include <unistd.h>
#include <stdlib.h>

void output(FILE * out,char * a) {
  fprintf(out,"a:%s\n", a);
  close(fileno(out));
}

char a[10];
char w_file[] = "/root/zzz/out.txt";
char w_mode[] = "w";
//FILE *out = fopen(w_file,w_mode);

int main() {
  FILE *out = fopen(w_file,w_mode);
  printf("enter a word:");
  fgets(a,sizeof(a),stdin);
  output(out,a);
  return 0;
}



1. 这个怎么输出没有打到out.txt里面呢?
   但是把close(fileno(out)) 注释就可以输出到out.txt
A:
两个问题, 1. 关闭文件前先调用flush到磁盘 2. 使用close关闭对应的是open打开的. fopen打开的应该使用fclose关闭.
man fclose : 
NOTES
       Note  that  fclose()  only flushes the user space buffers provided by the C library. To ensure that the data is
       physically stored on disk the kernel buffers must be flushed too, e.g. with sync(2) or fsync(2).

2. 如果把FILE *out = fopen(w_file,w_mode); 这个放在所有函数的外面就会报错
   ./n.c:14: error: initializer element is not constant
A:
C都是函数式语言，所有的可执行代码都必须在某个函数体内的，外部只能定义全局变量、常量等.
所以在全局变量初始化的地方都不能调用函数, 
最后代码修改为 : 

#include <stdio.h>
#include <string.h>
#include <unistd.h>
#include <stdlib.h>
#include <errno.h>

void output(FILE * lout,char * la) {
  fprintf(lout,"a:%s\n", la);
  if (fsync(fileno(lout))) {
    printf("error:%s\n", strerror(errno));
  }
}

char a[10];
char w_file[] = "/root/zzz/out.txt";
char w_mode[] = "w";
FILE *out;

int main() {
  out = fopen(w_file,w_mode);
  printf("enter a word:");
  fgets(a,sizeof(a),stdin);
  output(out,a);
  fclose(out);
  return 0;
}


