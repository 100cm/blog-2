PostgreSQL research

如何处理并发: select后如果没有则insert，有则update

2012-01-06 10:28:29   查看原文>>

今天一位同事问我select后insert,update 的并发问题？
描述如下 : 
举个例子:查找表里有没有红色的鞋，有则数量加1，没有则插入一条，数量为1
伪代码如下：
int test()
{
  //ado.net对象...
  sqlcommand cmd;
  sqldatareader r;
  ...

  string s = "select count from a where color=red";
  cmd.CommandText= s;
  r = cmd.ExecuteReader();   
  if (r.HasRows)
  {
  string update = "update a set count = count + 1 where color=red";
  //执行更新...
    
  }
  else
  {
  string insert = "insert into a(color,count) values(red,1)";
  //执行插入...
  }
}

问题：
并发怎么办？
线程1和线程2都发现没有红色的记录，则都插入；
或者都发现有红色的鞋比如是10，则update时并发后记录还是11，而不是12.
怎么解决？
把整个函数加个大锁？ 

解决办法有几种 : 
1. 用约束来保证数据的唯一性.
例如约束它只有一条记录被插入，多了不给插。如果遇到duplicate 报错则可以在函数的exception中写上UPDATE的SQL。

postgres=# create table test (id int primary key, info text, who name);
CREATE TABLE
postgres=# create or replace function f_test(i_test test) returns void as $$
declare
begin
  update test set info=i_test.info,who=i_test.who where id=i_test.id;
  if not found then
    insert into test values(i_test.*);
  end if;
  exception when unique_violation then
    update test set info=i_test.info,who=i_test.who where id=i_test.id;
end;
$$ language plpgsql;
CREATE FUNCTION
会话A
postgres=# begin;
BEGIN
postgres=# select f_test(test '(1,test,digoal)');
 f_test 
--------
 
(1 row)

postgres=# select * from test;
 id | info |  who   
----+------+--------
  1 | test | digoal
(1 row)
会话B
postgres=# select f_test(test '(1,b,b)');
等待锁.

会话A
postgres=# commit;
COMMIT
会话B
postgres=# select f_test(test '(1,b,b)');
 f_test 
--------
 
(1 row)

postgres=# select ctid,* from test;
 ctid  | id | info | who 
-------+----+------+-----
 (0,5) |  1 | b    | b
(1 row)



2. 用PostgreSQL9.1的 serializable isolation
可以参考我以前写过的几篇BLOG
http://blog.163.com/digoal@126/blog/static/163877040201192715948181/
http://blog.163.com/digoal@126/blog/static/16387704020118162950691/


