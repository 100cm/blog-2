PostgreSQL research

Use moddatetime Functions for Tracking Last Modification Time

2012-01-13 15:52:59   查看原文>>

和前面两篇BLOG里的timetravel和insert_username一样来自spi模块, moddatetime用于跟踪记录的修改时间，测试如下 : 
创建extension : 
digoal=# create extension moddatetime;
CREATE EXTENSION
创建测试表
digoal=# \c digoal digoal
You are now connected to database "digoal" as user "digoal".
digoal=> create table moddatetime_test (id int primary key,info text,modtime timestamp(0));
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "moddatetime_test_pkey" for table "moddatetime_test"
CREATE TABLE
创建触发器
digoal=> CREATE TRIGGER mdt_moddatetime
digoal->         BEFORE UPDATE ON moddatetime_test
digoal->         FOR EACH ROW
digoal->         EXECUTE PROCEDURE moddatetime (modtime);
CREATE TRIGGER
插入测试数据
digoal=> insert into moddatetime_test (id,info) select generate_series(1,10),'digoal';
INSERT 0 10
digoal=> select * from moddatetime_test ;
 id |  info  | modtime 
----+--------+---------
  1 | digoal | 
  2 | digoal | 
  3 | digoal | 
  4 | digoal | 
  5 | digoal | 
  6 | digoal | 
  7 | digoal | 
  8 | digoal | 
  9 | digoal | 
 10 | digoal | 
(10 rows)
修改记录，查看TUPLE的修改时间 : 
digoal=> update moddatetime_test set info='new' where id=1;
UPDATE 1
digoal=> select * from moddatetime_test ;
 id |  info  |          modtime           
----+--------+----------------------------
  2 | digoal | 
  3 | digoal | 
  4 | digoal | 
  5 | digoal | 
  6 | digoal | 
  7 | digoal | 
  8 | digoal | 
  9 | digoal | 
 10 | digoal | 
  1 | new    | 2012-01-13 15:42:43.537942
(10 rows)
