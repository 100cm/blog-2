PostgreSQL research

PostgreSQL 9.5 new feature - ALTER TABLE .. SET LOGGED / UNLOGGED

2015-06-15 17:56:33   查看原文>>

PostgreSQL 9.5以前，我们只能在创建表时指定这个表是否需要记录WAL，即是否unlogged TABLE。
如果表创建好后，需要修改这个属性的话，我们只能用超级用户去修改pg_class.relpersistence 。 u代表unlogged, p代表persistent。

Allow control of table WAL logging after table creation with ALTER TABLE .. SET LOGGED / UNLOGGED (Fabrízio de Royes Mello)


测试：

postgres=# select relpersistence from pg_class where relname='test';
 relpersistence 
----------------
 p
(1 row)
postgres=# alter table test set unlogged;
ALTER TABLE
postgres=# select relpersistence from pg_class where relname='test';
 relpersistence 
----------------
 u
(1 row)

postgres=# select pg_relation_filepath('test');
 pg_relation_filepath 
----------------------
 base/13181/16403
(1 row)
postgres=# \q
pg95@db-172-16-3-150-> cd $PGDATA
pg95@db-172-16-3-150-> ll base/13181/16403*
-rw------- 1 pg95 pg95 0 Jun 15 17:41 base/13181/16403
-rw------- 1 pg95 pg95 0 Jun 15 17:41 base/13181/16403_init
pg95@db-172-16-3-150-> psql
psql (9.5devel)
Type "help" for help.

postgres=# alter table test set logged;
ALTER TABLE
postgres=# select pg_relation_filepath('test');
 pg_relation_filepath 
----------------------
 base/13181/16406
(1 row)

postgres=# \q
pg95@db-172-16-3-150-> ll base/13181/16406*
-rw------- 1 pg95 pg95 0 Jun 15 17:41 base/13181/16406


注意执行alter table set 后file发生了变化, 即表发生了rewrite, 参考代码
src/backend/commands/tablecmds.c。

时间测试，因为需要rewrite，所以表越大，时间越久：

postgres=# insert into test select generate_series(1,100000000);
INSERT 0 100000000
postgres=# \timing
Timing is on.
postgres=# alter table test set logged;  --  产生WAL
ALTER TABLE
Time: 99217.034 ms
postgres=# alter table test set unlogged;  --  不产生WAL
ALTER TABLE
Time: 56105.722 ms



[参考]
1. src/backend/commands/tablecmds.c

                case AT_SetLogged:              /* SET LOGGED */
                        ATSimplePermissions(rel, ATT_TABLE);
                        tab->chgPersistence = ATPrepChangePersistence(rel, true);
                        /* force rewrite if necessary; see comment in ATRewriteTables */
                        if (tab->chgPersistence)
                        {
                                tab->rewrite |= AT_REWRITE_ALTER_PERSISTENCE;
                                tab->newrelpersistence = RELPERSISTENCE_PERMANENT;
                        }
                        pass = AT_PASS_MISC;
                        break;
                case AT_SetUnLogged:    /* SET UNLOGGED */
                        ATSimplePermissions(rel, ATT_TABLE);
                        tab->chgPersistence = ATPrepChangePersistence(rel, false);
                        /* force rewrite if necessary; see comment in ATRewriteTables */
                        if (tab->chgPersistence)
                        {
                                tab->rewrite |= AT_REWRITE_ALTER_PERSISTENCE;
                                tab->newrelpersistence = RELPERSISTENCE_UNLOGGED;
                        }
                        pass = AT_PASS_MISC;
                        break;


Flag Counter
