PostgreSQL research

Partition Table monitor on PostgreSQL

2010-09-29 19:25:44   查看原文>>

分区表好，不过很多的话维护起来会比较麻烦，比如按时间分区的分区表，到期忘记加的话就悲惨了，挨个去看都累死了。

下面是一个集中将分区呈现的SHELL小脚本。终于可以减轻点负担了。

(用PYTHON写会方便很多，找个时间看一看)

首先要在被监控的数据库端添加监控数据库使用的用户，然后是赋予连接被监控的数据库的权限。

另外一个需要把IP和端口调通。PG_HBA.CONF的权限打开。

程序端需要配置PASSWORDFILE文件位置.已经文件内容的添加.

脚本如下:

#!/bin/bash
export LANG=en_US.utf8
EMAIL="digoal.zhou@126.com"




# IDC_A
IDC_A_DB1=" -h xxx.xxx.xxx.xxx -p xxxx -U mon_user -d "
IDC_A_DB1_DBNAME="dbnamea dbnameb dbnamec dbnamed"
IDC_A_DB2=" -h xxx.xxx.xxx.xxx -p xxxx -U mon_user -d "
IDC_A_DB2_DBNAME="dbnamea dbnameb dbnamec dbnamed"
# IDC_B
IDC_B_DB1=" -h xxx.xxx.xxx.xxx -p xxxx -U mon_user -d "
IDC_B_DB1_DBNAME="dbnamea dbnameb dbnamec dbnamed"
IDC_B_DB2=" -h xxx.xxx.xxx.xxx -p xxxx -U mon_user -d "
IDC_B_DB2_DBNAME="dbnamea dbnameb dbnamec dbnamed"
# IDC_C
IDC_C_DB1=" -h xxx.xxx.xxx.xxx -p xxxx -U mon_user -d "
IDC_C_DB1_DBNAME="dbnamea dbnameb dbnamec dbnamed"
IDC_C_DB2=" -h xxx.xxx.xxx.xxx -p xxxx -U mon_user -d "
IDC_C_DB2_DBNAME="dbnamea dbnameb dbnamec dbnamed"
# IDC_D
IDC_D_DB1=" -h xxx.xxx.xxx.xxx -p xxxx -U mon_user -d "
IDC_D_DB1_DBNAME="dbnamea dbnameb dbnamec dbnamed"
IDC_D_DB2=" -h xxx.xxx.xxx.xxx -p xxxx -U mon_user -d "
IDC_D_DB2_DBNAME="dbnamea dbnameb dbnamec dbnamed"




 




for i in "IDC_A_DB1" "IDC_A_DB2" "IDC_B_DB1" "IDC_B_DB2" "IDC_C_DB1" "IDC_C_DB2" "IDC_D_DB1" "IDC_D_DB2"
do
eval str="$"$i
eval conn=${i}_DBNAME
eval conn_str="$"$conn
for n in $conn_str
do
psql $str $n -w -c "SELECT c.oid::pg_catalog.regclass,i.inhrelid::pg_catalog.regclass FROM pg_catalog.pg_class c, pg_catalog.pg_inherits i WHERE c.oid=i.inhparent  ORDER BY c.oid::pg_catalog.regclass,i.inhrelid::pg_catalog.regclass;"|col -x|mutt -s "Patition Notice : $i $str $n (`date +%F%T`)" $EMAIL &
done
done




exit


