PostgreSQL research

PostgreSQL FUSE tool, mount database AS a filesystem

2013-02-03 12:20:51   查看原文>>

把PostgreSQL的数据库操作转换成普通的操作系统命令. 当然一般不会有这种使用场景. 纯属实验.
下载 : 
http://git.postgresql.org/gitweb/?p=postgresqlfs.git;a=summary

安装 : 

tar -zxvf postgresqlfs-b5b1a25.tar.gz 
mv postgresqlfs-b5b1a25 /home/ocz/postgresql-9.2.1/contrib/
. /home/ocz/.bash_profile
cd /home/ocz/postgresql-9.2.1/contrib/postgresqlfs-b5b1a25/



(编译异常处理-1) 

vi GNUmakefile
删除以下option.
-Werror
-Wtype-limits
-Wno-sign-conversion 
-Wlogical-op
否则报错 : 
[root@db-172-16-3-150 postgresqlfs-b5b1a25]# gmake clean
rm -f postgresqlfs.o path.o strlcpy.o query.o postgresqlfs
[root@db-172-16-3-150 postgresqlfs-b5b1a25]# gmake
gmake: pg_config: Command not found
gcc -std=gnu99 -Wall -Wshadow -Werror -Wextra -Wformat=2 -Wpointer-arith -Wtype-limits -Wbad-function-cast -Wcast-qual -Wcast-align -Wwrite-strings -Wconversion -Wno-sign-conversion -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wmissing-prototypes -D_FILE_OFFSET_BITS=64 -I  -c -o postgresqlfs.o postgresqlfs.c
cc1: error: unrecognized command line option "-Wtype-limits"
cc1: error: unrecognized command line option "-Wno-sign-conversion"
cc1: error: unrecognized command line option "-Wlogical-op"
gmake: *** [postgresqlfs.o] Error 1
或者 : 
cc1: warnings being treated as errors



(编译异常处理-2) 

修改行 : 
LIBS = $(shell pkg-config fuse --libs) -lpq
改成 : 
LIBS = $(shell pkg-config fuse --libs) -L/home/ocz/pgsql9.2.1/lib -lpq
否则报错 : 
/usr/bin/ld: cannot find -lpq
collect2: ld returned 1 exit status
gmake: *** [postgresqlfs] Error 1



编译正常如下 : 

root@db-172-16-3-150-> gmake all
gcc -std=gnu99 -Wall -Wshadow -Wextra -Wformat=2 -Wpointer-arith -Wbad-function-cast -Wcast-qual -Wcast-align -Wwrite-strings -Wconversion -Waggregate-return -Wstrict-prototypes -Wmissing-prototypes  postgresqlfs.o path.o strlcpy.o query.o -pthread -L/lib64 -lfuse -lrt -ldl   -L/home/ocz/pgsql9.2.1/lib -lpq -o postgresqlfs



gcc 版本 : 

[root@db-172-16-3-150 postgresqlfs-b5b1a25]# gcc -v
Using built-in specs.
Target: x86_64-redhat-linux
Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-libgcj-multifile --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --disable-plugin --with-java-home=/usr/lib/jvm/java-1.4.2-gcj-1.4.2.0/jre --with-cpu=generic --host=x86_64-redhat-linux
Thread model: posix
gcc version 4.1.2 20080704 (Red Hat 4.1.2-52)



测试 : 

su - root
假设以下数据库已经存在, 该数据库为standby数据库, 只读, 不能写, 所以在集群文件夹下创建数据库和SCHEMA时报错.
export PGHOSTADDR=172.16.3.33
export PGPORT=9200
export PGDATABASE=digoal
export PGUSER=digoal
export PGPASSWORD=digoal
cd /home/ocz/postgresql-9.2.1/contrib/postgresqlfs-b5b1a25/
./postgresqlfs /mnt


读测试 : 

digoal=# create table test (id int,info text,crt_time timestamp);
CREATE TABLE
digoal=# insert into test select generate_series(1,5),'test',clock_timestamp();
INSERT 0 5
digoal=# select * from test;
 id | info |          crt_time          
----+------+----------------------------
  1 | test | 2013-02-03 11:57:29.444508
  2 | test | 2013-02-03 11:57:29.444643
  3 | test | 2013-02-03 11:57:29.444647
  4 | test | 2013-02-03 11:57:29.444649
  5 | test | 2013-02-03 11:57:29.44465
(5 rows)
digoal=# \c digoal digoal
You are now connected to database "digoal" as user "digoal".
--  注意这个表是超级用户创建的, 未赋予digoal用户读权限, 所以在目录中查看将报错
digoal=> select * from test;
ERROR:  permission denied for relation test


在目录中查看 : 

root@db-172-16-3-150-> pwd
/mnt/digoal/public
root@db-172-16-3-150-> cd test
root@db-172-16-3-150-> ls
ls: reading directory .: Input/output error


-- 赋予digoal权限 : 

digoal=> \c digoal postgres
You are now connected to database "digoal" as user "postgres".
digoal=# grant all on table test to digoal;
GRANT


再次查看数据正常, 数据以ctid为目录的方式列出, 每个字段1个文件, 并加上顺序序列.

root@db-172-16-3-150-> ls
(0,1)  (0,2)  (0,3)  (0,4)  (0,5)
root@db-172-16-3-150-> cd \(0\,1\)/
root@db-172-16-3-150-> ls
01_id  02_info  03_crt_time
root@db-172-16-3-150-> cat *
1test2013-02-03 11:57:29.444508root@db-172-16-3-150-> 


代码部分 : 

        else if (dbpath_is_table(dbpath))
        {
                PGresult *res;
                int i;
                char str[PATH_MAX];

                str[0] = '\0';
                res = db_query(dbconn, "SELECT attname FROM pg_attribute WHERE attrelid = (SELECT ci.oid FROM pg_class ci, pg_class ct, pg_index i, pg_namespace n WHERE n.oid = ct.relnamespace AND ci.oid = i.indexrelid AND ct.oid = i.indrelid AND n.nspname = '%s' AND ct.relname = '%s' AND NOT EXISTS (SELECT 1 FROM pg_attribute at, pg_attribute ai WHERE at.attrelid = ct.oid AND ai.attrelid = ci.oid AND at.attname = ai.attname AND at.attnum < 0) AND i.indisunique ORDER BY i.indisprimary DESC LIMIT 1) ORDER BY attnum;", dbpath.schema, dbpath.table);
                for (i = 0; i < PQntuples(res); i++)
                {
                        strcat(str, PQgetvalue(res, i, 0));
                        strcat(str, "::text || '_' || ");
                }
                debug("unique key is %s", str);
                PQclear(res);

                res = db_query(dbconn, "SELECT %s ctid FROM %s.%s;", str, dbpath.schema, dbpath.table);
                if (!res)
                        return -EIO;
                for (i = 0; i < PQntuples(res); i++)
                {
                        debug("added row %s", PQgetvalue(res, i, 0));
                        filler(buf, PQgetvalue(res, i, 0), NULL, 0);
                }
                PQclear(res);
        }
        else if (dbpath_is_row(dbpath))
        {
                PGresult *res;
                int i;

                res = db_query(dbconn, "SELECT to_char(attnum, 'FM00') || '_' || attname FROM pg_attribute a, pg_class c, pg_namespace n WHERE a.attrelid = c.oid AND c.relnamespace = n.oid AND NOT attisdropped AND attnum > 0 AND n.nspname = '%s' AND c.relname = '%s';", dbpath.schema, dbpath.table);
                if (!res)
                        return -EIO;
                for (i = 0; i < PQntuples(res); i++)
                {
                        debug("added column %s", PQgetvalue(res, i, 0));
                        filler(buf, PQgetvalue(res, i, 0), NULL, 0);
                }
                PQclear(res);
        }



写测试 : 
-- 由于是STANDBY库, 显然不允许写入.

root@db-172-16-3-150-> pwd
/mnt/digoal/public
root@db-172-16-3-150-> mkdir fstest
mkdir: cannot create directory `fstest': Function not implemented
-- 注意这个报错不是因为不允许写入而造成的, 而是没有实现创建表的转换.


-- 以下则是因为只读造成的错误 : 

root@db-172-16-3-150-> cd ..
root@db-172-16-3-150-> pwd
/mnt/digoal
-- 在数据库目录创建文件夹, 相当于创建schema
root@db-172-16-3-150-> ls
information_schema  pg_catalog  pg_temp_1  pg_toast  pg_toast_temp_1  public
root@db-172-16-3-150-> mkdir digoal
mkdir: cannot create directory `digoal': Input/output error


对应代码 : 

                if (dbpath_is_schema(dbpath))
                        return db_command(dbconn, "CREATE SCHEMA %s;", dbpath.schema);


在集群目录创建文件夹, 相当于创建数据库

root@db-172-16-3-150-> cd ..
root@db-172-16-3-150-> pwd
/mnt
root@db-172-16-3-150-> mkdir dbtest
mkdir: cannot create directory `dbtest': Input/output error


对应代码 : 

        else if (dbpath_is_database(dbpath))
                return db_command(dbconn, "CREATE DATABASE %s;", dbpath.database);



-- 连接到PRIMARY 库, 重新挂载目录

root@db-172-16-3-150-> cd
root@db-172-16-3-150-> umount /mnt
root@db-172-16-3-150-> export PGPORT=9201
root@db-172-16-3-150-> /home/ocz/postgresql-9.2.1/contrib/postgresqlfs-b5b1a25/postgresqlfs /mnt


创建DBTEST数据库,  但是由于挂载时用到的digoal用户没有创建数据库的权限, 所以报错.

root@db-172-16-3-150-> cd /mnt
root@db-172-16-3-150-> ll
total 63K
drwxr-xr-x 1 root root 42 Feb  3 12:02 digoal
drwxr-xr-x 1 root root 42 Feb  3 12:02 postgres
drwxr-xr-x 1 root root 42 Feb  3 12:02 template1
root@db-172-16-3-150-> mkdir dbtest
mkdir: cannot create directory `dbtest': Input/output error


-- 赋予超级用户权限

digoal=# alter role digoal superuser;
ALTER ROLE


再次创建目录成功 : 

root@db-172-16-3-150-> mkdir dbtest
root@db-172-16-3-150-> 


-- 在集群目录下创建的目录, 相当于创建数据库 : 

digoal=# \l
                             List of databases
   Name    |  Owner   | Encoding | Collate | Ctype |   Access privileges   
-----------+----------+----------+---------+-------+-----------------------
 dbtest    | digoal   | UTF8     | C       | C     | 
 digoal    | postgres | UTF8     | C       | C     | 
 postgres  | postgres | UTF8     | C       | C     | 
 template0 | postgres | UTF8     | C       | C     | =c/postgres          +
           |          |          |         |       | postgres=CTc/postgres
 template1 | postgres | UTF8     | C       | C     | =c/postgres          +
           |          |          |         |       | postgres=CTc/postgres
(5 rows)


在数据库目录, 创建目录, 等于创建schema : 

root@db-172-16-3-150-> cd dbtest/
root@db-172-16-3-150-> mkdir schematest

digoal=# \c dbtest digoal
You are now connected to database "dbtest" as user "digoal".
dbtest=# \dn
    List of schemas
    Name    |  Owner   
------------+----------
 public     | postgres
 schematest | digoal
(2 rows)


在schema目录, 创建目录失败, 因为目前没有实现这个函数 :

root@db-172-16-3-150-> cd schematest/
root@db-172-16-3-150-> mkdir tabletest
mkdir: cannot create directory `tabletest': Function not implemented



以上测试仅供参考, 目前这个功能基本上只能玩玩. 没有什么用途.

【参考】
1. http://git.postgresql.org/gitweb/?p=postgresqlfs.git;a=summary
2. http://www.postgresql.org/docs/9.2/static/libpq-envars.html

