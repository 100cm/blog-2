PostgreSQL research

PostgreSQL 9.4 Support ordered-set (WITHIN GROUP) aggregates.

2013-12-24 10:08:56   查看原文>>

PostgreSQL Support ordered-set (WITHIN GROUP) aggregates 这个补丁已经提交了, 

Support ordered-set (WITHIN GROUP) aggregates.

This patch introduces generic support for ordered-set and hypothetical-set
aggregate functions, as well as implementations of the instances defined in
SQL:2008 (percentile_cont(), percentile_disc(), rank(), dense_rank(),
percent_rank(), cume_dist()).  We also added mode() though it is not in the
spec, as well as versions of percentile_cont() and percentile_disc() that
can compute multiple percentile values in one pass over the data.

Unlike the original submission, this patch puts full control of the sorting
process in the hands of the aggregate's support functions.  To allow the
support functions to find out how they're supposed to sort, a new API
function AggGetAggref() is added to nodeAgg.c.  This allows retrieval of
the aggregate call's Aggref node, which may have other uses beyond the
immediate need.  There is also support for ordered-set aggregates to
install cleanup callback functions, so that they can be sure that
infrastructure such as tuplesort objects gets cleaned up.

In passing, make some fixes in the recently-added support for variadic
aggregates, and make some editorial adjustments in the recent FILTER
additions for aggregates.  Also, simplify use of IsBinaryCoercible() by
allowing it to succeed whenever the target type is ANY or ANYELEMENT.
It was inconsistent that it dealt with other polymorphic target types
but not these.

Atri Sharma and Andrew Gierth; reviewed by Pavel Stehule and Vik Fearing,
and rather heavily editorialized upon by Tom Lane


新增了一些函数, 聚合的语法, 以及聚合系统表的修改.
在补丁未提交状态时, 我做过一些测试. 见下文.
http://blog.163.com/digoal@126/blog/static/16387704020137124851944/
提交后的测试可以参考pg源码中的regresstest
http://git.postgresql.org/gitweb/?p=postgresql.git;a=blobdiff;f=src/test/regress/expected/aggregates.out;h=58df85470a67c9025bb6afb9f1c87d0fa7a802b4;hp=1a0ca5c5f3c109b92e5fb936efa42dafe982c81a;hb=8d65da1f01c6a4c84fe9c59aeb6b7e3adf870145;hpb=37484ad2aacef5ec794f4dd3d5cf814475180a78

[参考]
1. http://blog.163.com/digoal@126/blog/static/16387704020137124851944/
2. http://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=8d65da1f01c6a4c84fe9c59aeb6b7e3adf870145
