PostgreSQL research

use with recursive or function recursive get the innest string in multi-lables html

2015-03-13 11:02:12   查看原文>>

如何取出最内的标签内的字符串?
方法有多种多样, 这里举例一下, 一种用递归查询, 一种用函数.
个人推荐函数比较清晰明了. 递归查询没有写好的话, 也是很费事的.
测试如下

postgres=# create table t1(col1 text);
CREATE TABLE
postgres=# insert into t1 values ('<p><span style="font-size:16px;font-family:宋体">南京：连云港</span><p>');
INSERT 0 1
postgres=# insert into t1 values ('<p><span style="font-size:16px;font-family:宋体">南京：连云港</span><p>');
INSERT 0 1
postgres=# insert into t1 values ('<p><span style="font-size:16px;font-family:宋体">南京：连云港</span><p>');
INSERT 0 1
postgres=# insert into t1 values ('abc');
INSERT 0 1



递归查询

postgres=# with recursive t(col1) as (select col1 from t1 union all select substring(col1,'>(.*)<') from t where substring(col1,'>(.*)<') is not null) select * from t where substring(col1,'>(.*)<') is null;
     col1     
--------------
 abc
 南京：连云港
 南京：连云港
 南京：连云港
(3 rows)

postgres=# with recursive t(col1) as (select col1 from t1 where ctid='(0,1)' union all select substring(col1,'>(.*)<') from t where substring(col1,'>(.*)<') is not null) select * from t where substring(col1,'>(.*)<') is null;
     col1     
--------------
 南京：连云港
(1 row)



函数 : 

postgres=# create or replace function f_test(i_str text) returns text as $$
declare
  v_str text := substring(i_str,'>(.*)<');
begin 
  if v_str is null then 
    return i_str ;
  end if;
  return f_test(v_str);
end;
$$ language plpgsql strict;
CREATE FUNCTION

postgres=# select f_test(col1) from t1;
    f_test    
--------------
 南京：连云港
 南京：连云港
 南京：连云港
 abc
(3 rows)


[参考]
1. http://www.postgresql.org/docs/9.4/static/queries-with.html

Flag Counter
