PostgreSQL research

use PostgreSQL Implement Async Message Queue System

2011-11-25 9:39:28   查看原文>>

前段时间在一个数据库设计评审的时候了解到的一个情况。
业务系统A，
处理用户请求，部分请求信息需要发送到业务系统B。为了提高处理速度，与业务系统B的交互采用异步的方式。
use PostgreSQL Implement Async Message Queue System - 德哥@Digoal - The Heart,The World.
在业务设计上异步消息使用的是如上图的方式， 
Publish : 
消息写入到业务系统A的PostgreSQL数据库，（8核24G,本地10K SAS盘存储。PG单库提供的同步单步提交速度约1.8Wtps，异步提交可以达到5.8Wtps, 不可否认如果多步提交这个TPS还可以更强。参考http://blog.163.com/digoal@126/blog/static/1638770402011102214142132/）
Subscribe : 
对数据库来说是SELECT和UPDATE的操作，怎样确保不重复消费单个消息。例如消息表 : 
create table message 
(id bigint primary key,  -- 消息ID
sub_cnt int default 0 check (sub_cnt <=1),  -- 消息状态,插入时=0,消费后sub_cnt=sub_cnt+1,每消费一次加1.
redo text,  -- 消息内容。
undo text  --  消息回滚内容, 当消费不成功的情况下如何回滚。
);
消费消息后必须更新sub_cnt，如果更新不成功则在业务系统B执行回滚。
PostgreSQL完全满足ACID的要求，所以不用担心丢消息和消息持久化的问题。
使用数据库来做MQ，UPDATE最可能成为性能瓶颈，所以要做分布式例如用PLPROXY。

不过数据库还是数据库，要当MQ来用还是比较费劲的事情。
MQ有很多专业的软件在做，还是用专业软件比较靠谱。







