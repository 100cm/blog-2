PostgreSQL research

PostgreSQL 9.1 performance improve

2011-08-24 8:13:45   查看原文>>

1. Merge duplicate fsync requests
This greatly improves performance under heavy write loads.
2. Allow inheritance table scans to return meaningfully-sorted results (Greg Stark, Hans-Jurgen Schonig, Robert Haas, Tom Lane)

This allows better optimization of queries that use ORDER BY, LIMIT, or MIN/MAX with inherited tables.

这几条太养眼了。


E.1.3.1.1. Performance

  • Support unlogged tables using the UNLOGGED option in CREATE TABLE (Robert Haas)

    Such tables provide better update performance than regular tables, but are not crash-safe: their contents are automatically cleared in case of a server crash. Their contents do not propagate to replication slaves, either.

  • Allow FULL OUTER JOIN to be implemented as a hash join, and allow either side of a LEFT OUTER JOIN or RIGHT OUTER JOIN to be hashed (Tom Lane)

    Previously FULL OUTER JOIN could only be implemented as a merge join, and LEFT OUTER JOIN and RIGHT OUTER JOIN could hash only the nullable side of the join. These changes provide additional query optimization possibilities.

  • Merge duplicate fsync requests (Robert Haas, Greg Smith)

    This greatly improves performance under heavy write loads.

  • Improve performance of commit_siblings (Greg Smith)

    This allows the use of commit_siblings with less overhead.

  • Reduce the memory requirement for large ispell dictionaries (Pavel Stehule, Tom Lane)

  • Avoid leaving data files open after "blind writes" (Alvaro Herrera)

    This fixes scenarios where backends might hold open files that were long since deleted, preventing the kernel from reclaiming disk space.

    ----

    Allow inheritance table scans to return meaningfully-sorted results (Greg Stark, Hans-Jurgen Schonig, Robert Haas, Tom Lane)

    This allows better optimization of queries that use ORDER BY, LIMIT, or MIN/MAX with inherited tables.

    ----

    Allow ALTER TABLE ... SET DATA TYPE to avoid table rewrites in appropriate cases (Noah Misch, Robert Haas)

    For example, converting a varchar column to text no longer requires a rewrite of the table. However, increasing the length constraint on a varchar column still requires a table rewrite.

    ----

      □ Add nearest-neighbor (order-by-operator) searching to GiST indexes (Teodor Sigaev, Tom Lane)

        This allows GiST indexes to quickly return the N closest values in a query with LIMIT. For example

        SELECT * FROM places ORDER BY location <-> point '(101,456)' LIMIT 10;

        finds the ten places closest to a given target point.

      □ Allow GIN indexes to index null and empty values (Tom Lane)

        This allows full GIN index scans, and fixes various corner cases in which GIN scans would fail.

      □ Allow GIN indexes to better recognize duplicate search entries (Tom Lane)

        This reduces the cost of index scans, especially in cases where it avoids unnecessary full index scans.

      □ Fix GiST indexes to be fully crash-safe (Heikki Linnakangas)

        Previously there were rare cases where a REINDEX would be required (you would be informed).

        ----

        Allow numeric to use a more compact, two-byte header in common cases (Robert Haas)

        Previously all numeric values had four-byte headers; this saves on disk storage.

        ----

        E.1.3.13.2. Contrib Performance

          ☆ Add support for LIKE and ILIKE index searches to contrib/pg_trgm (Alexander Korotkov)

          ☆ Add levenshtein_less_equal() function to contrib/fuzzystrmatch, which is optimized for small distances (Alexander Korotkov)

          ☆ Improve performance of index lookups on contrib/seg columns (Alexander Korotkov)

          ☆ Improve performance of pg_upgrade for databases with many relations (Bruce Momjian)

          ☆ Add flag to contrib/pgbench to report per-statement latencies (Florian Pflug)

