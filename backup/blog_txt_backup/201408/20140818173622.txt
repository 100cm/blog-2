PostgreSQL research

modify array_length, return 0 when array is null

2014-08-18 17:36:22   查看原文>>

群里的兄弟问的一个问题, 当使用array_length获取数组长度时, 如果数组为空, 返回值为空. 
因为array_length是internal函数, 所以直接在arrayfuncs.c里面添加的话, 还需要修改catalog(src/include/catalog/pg_proc.h), 并且只有initdb时会调用. 那个不适合生产环境, 建议使用C函数来满足需求.
如果想要数组为空, 返回长度为0. 可以新增一个函数来满足. 
如下 : 


# vi array_length1.c
#include "postgres.h"

#include <ctype.h>

#include "access/htup_details.h"
#include "funcapi.h"
#include "libpq/pqformat.h"
#include "utils/array.h"
#include "utils/builtins.h"
#include "utils/datum.h"
#include "utils/lsyscache.h"
#include "utils/memutils.h"
#include "utils/typcache.h"

PG_MODULE_MAGIC;

PG_FUNCTION_INFO_V1(array_length1);

/*
 * array_length1 :
 *              returns the length, of the dimension requested, for
 *              the array pointed to by "v", as an int4
 */
Datum
array_length1(PG_FUNCTION_ARGS)
{
        ArrayType  *v = PG_GETARG_ARRAYTYPE_P(0);
        int                     reqdim = PG_GETARG_INT32(1);
        int                *dimv;
        int                     result;
// 添加以下2行
        if (ARR_NDIM(v) <= 0)
                PG_RETURN_INT32(0);

        /* Sanity check: does it look like an array at all? */
        if (ARR_NDIM(v) <= 0 || ARR_NDIM(v) > MAXDIM)
                PG_RETURN_NULL();

        /* Sanity check: was the requested dim valid */
        if (reqdim <= 0 || reqdim > ARR_NDIM(v))
                PG_RETURN_NULL();

        dimv = ARR_DIMS(v);

        result = dimv[reqdim - 1];

        PG_RETURN_INT32(result);
}

[root@150 soft_bak]# gcc -O3 -Wall -Wextra -Werror -I /opt/soft_bak/postgresql-9.3.5/src/include -g -fPIC -c ./array_length1.c -o array_length1.o
[root@150 soft_bak]# gcc -O3 -Wall -Wextra -Werror -I /opt/soft_bak/postgresql-9.3.5/src/include -g -shared array_length1.o -o array_length1.so
[root@150 soft_bak]# cp array_length1.so /opt/pgsql/lib/



测试是否满足需求 : 

[root@150 soft_bak]# su - postgres
postgres@150-> psql
psql (9.3.5)
Type "help" for help.

postgres=# create function array_length1 (anyarray,int) returns int language c as 'array_length1' strict immutable;
CREATE FUNCTION
postgres=# select array_length1('{1,2}'::int[],0);  -- 维度输入不正确依旧返回空, 如果这个也需要的话, 那么代码修改一下就好了.
 array_length1 
---------------
              
(1 row)

postgres=# select array_length1('{1,2}'::int[],1);  -- 正常返回长度
 array_length1 
---------------
             2
(1 row)

postgres=# select array_length1('{}'::int[],1);  -- 维度正确时, 返回0.
 array_length1 
---------------
             0
(1 row)

postgres=# select array_length1('{}'::int[],2);
 array_length1 
---------------
             0
(1 row)




[参考]
1. http://blog.163.com/digoal@126/blog/static/163877040201302192427651/
2. src/backend/utils/adt/arrayfuncs.c
3. src/include/utils/array.h

Flag Counter
