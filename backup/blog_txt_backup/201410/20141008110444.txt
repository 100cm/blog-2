PostgreSQL research

PostgreSQL's protocol requires clients to send particular packet before they disconnect the connection.

2014-10-08 11:04:44   查看原文>>

在使用pgpool-II时, 如果客户端异常退出, 可能在pgpool的日志中会产生类似ProcessFrontendResponse: failed to read kind from frontend. frontend abnormally exited的日志. 
pool_proto_modules.c

POOL_STATUS ProcessFrontendResponse(POOL_CONNECTION *frontend,
                                                                        POOL_CONNECTION_POOL *backend)
{
        char fkind;
        char *bufp = NULL;
        char *contents;
        POOL_STATUS status;
        int len;
        POOL_SESSION_CONTEXT *session_context;

        /* Get session context */
        session_context = pool_get_session_context();
        if (!session_context)
        {
                pool_error("ProcessFrontendResponse: cannot get session context");
                return POOL_END;
        }

        if (pool_read_buffer_is_empty(frontend) && frontend->no_forward != 0)
                return POOL_CONTINUE;

        if (pool_read(frontend, &fkind, 1) < 0)
        {
                pool_log("ProcessFrontendResponse: failed to read kind from frontend. frontend abnormally exited");
                return POOL_END_WITH_FRONTEND_ERROR;
        }



Why am I getting "ProcessFrontendResponse: failed to read kind from frontend. frontend abnormally exited" in my pgool log?

    Well, your clients might be ill-behaved:-) PostgreSQL's protocol requires clients to send particular packet before they disconnect the connection. pgpool-II complains that clients disconnect without sending the packet. You could reprodcude the problem by using psql. Connect to pgpool using psql. Kill -9 psql. You
    will silimar message in the log. The message will not appear if you quit psql normaly. Another possibility is unstable network connection between your client machine and pgpool-II. Check the cable and network interface card.


连接包也有类似的检查.
telnet 127.0.0.1 5432
日志如下 : 
日志信息来自ProcessStartupPacket, postmaster.c

        if (len < (int32) sizeof(ProtocolVersion) ||
                len > MAX_STARTUP_PACKET_LENGTH)
        {
                ereport(COMMERROR,
                                (errcode(ERRCODE_PROTOCOL_VIOLATION),
                                 errmsg("invalid length of startup packet")));
                return STATUS_ERROR;
        }


2014-10-08 10:47:00.528 CST,,,27183,"",5434a5a4.6a2f,1,"",2014-10-08 10:47:00 CST,,0,LOG,00000,"connection received: host=127.0.0.1 port=49040",,,,,,,,"BackendInitialize, postmaster.c:3850",""
2014-10-08 10:47:01.188 CST,,,27183,"127.0.0.1:49040",5434a5a4.6a2f,2,"",2014-10-08 10:47:00 CST,,0,LOG,08P01,"invalid length of startup packet",,,,,,,,"ProcessStartupPacket, postmaster.c:1744",""



I periodically get error message like "read_startup_packet: incorrect packet length". What does it mean?

    Monitoring tools including Zabbix and Nagios periodically sends a packet or ping to the port which pgoool is listening on. Unfortunately those packets do not have correct contents, and pgpool-II complains it. If you are not sure who is sending such a packet, you could turn on "log_connections" to know the source
    host and port info. If they are from such tools, you could stop the monitoring to avoid the problem or even better, change the monitoring method to send legal query, for example, "SELECT 1".


Flag Counter
