PostgreSQL research

set backend's client_min_messages same when use pgpool-II

2014-10-08 10:21:25   查看原文>>

在使用pgpool-II时, 如果后端数据库设置的client_min_messages级别不一样, 可能导致某些语句执行失败.
例如一些set语句, 当client_min_messages设置为notice时, 输出notice, 当级别更低时, 没有notice输出.
可能导致pgpool-II错误.
因为启动事务是需要在所有backend执行的.

Why "SET default_transaction_isolation TO DEFAULT" fails ?

    $ psql -h localhost -p 9999 -c 'SET default_transaction_isolation to DEFAULT;'
    ERROR: kind mismatch among backends. Possible last query was: "SET default_transaction_isolation to DEFAULT;" kind details are: 0[N: statement: SET default_transaction_isolation to DEFAULT;] 1[C]
    HINT: check data consistency among db nodes
    ERROR: kind mismatch among backends. Possible last query was: "SET default_transaction_isolation to DEFAULT;" kind details are: 0[N: statement: SET default_transaction_isolation to DEFAULT;] 1[C]
    HINT: check data consistency among db nodes
    connection to server was lost

    Pgpool-II detects that node 0 returns "N" (a NOTICE message comes from PostgreSQL) while node 1 returns "C" (which means the command finished).
    Though pgpool-II expects that both node 0 and 1 returns identical messages, actually they are not. So pgpool-II threw an error.
    Probably certain log/message settings are different in node 0 and 1. Please check client_min_messages or something like that.
    They should be identical.

If I start transaction, pgool-II also starts a transaction on standby nodes. Why?

    This is necessary to deal with the case when JDBC driver wants to use cursors. Pgpool-II takes a liberty of distributing SELECTs to the standby node including cursor statements. Unfortunately cursor statements need to be executed in an explicit transaction.


[参考]
1. http://www.pgpool.net/mediawiki/index.php/FAQ

Flag Counter
