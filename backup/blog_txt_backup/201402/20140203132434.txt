PostgreSQL research

PostgreSQL 9.4 keep pg_stat_statements' query texts in a file, not in shared memory

2014-02-03 13:24:34   查看原文>>

PostgreSQL 9.4 提交的一个补丁, 将pg_stat_statements插件的query text保存到文件中, 而不是共享内存.
所以理论上可以存储更多的SQL统计信息, 因为SQL文本已经不需要存储在内存中了.
存储SQL的文件如下:

pg_stat_tmp/pgss_query_texts.stat


同时新增了文件访问接口, 原来存储在内存中的query则替换为query的hash值: queryid.
补丁说明 : 

Keep pg_stat_statements' query texts in a file, not in shared memory.
author  Tom Lane <tgl@sss.pgh.pa.us>
        Mon, 27 Jan 2014 20:37:54 +0000 (15:37 -0500)
committer       Tom Lane <tgl@sss.pgh.pa.us>
        Mon, 27 Jan 2014 20:37:54 +0000 (15:37 -0500)
commit  f0d6f20278b7c5c412ce40a9b86c6b31dc2fbfdd
tree    88d045ea6425c0e2bf72a04775e8fab271fd8d74        tree | snapshot
parent  ea9df812d8502fff74e7bc37d61bdc7d66d77a7f        commit | diff
Keep pg_stat_statements' query texts in a file, not in shared memory.

This change allows us to eliminate the previous limit on stored query
length, and it makes the shared-memory hash table very much smaller,
allowing more statements to be tracked.  (The default value of
pg_stat_statements.max is therefore increased from 1000 to 5000.)
In typical scenarios, the hash table can be large enough to hold all the
statements commonly issued by an application, so that there is little
"churn" in the set of tracked statements, and thus little need to do I/O
to the file.

To further reduce the need for I/O to the query-texts file, add a way
to retrieve all the columns of the pg_stat_statements view except for
the query text column.  This is probably not of much interest for human
use but it could be exploited by programs, which will prefer using the
queryid anyway.

Ordinarily, we'd need to bump the extension version number for the latter
change.  But since we already advanced pg_stat_statements' version number
from 1.1 to 1.2 in the 9.4 development cycle, it seems all right to just
redefine what 1.2 means.

Peter Geoghegan, reviewed by Pavel Stehule


注意, 对同一个SQL, 如果search_path不同, 其实可能是两个SQL.
例如 : 
有两个表, 表名一致都叫tbl, 但是放在两个schema下面.

1. search_path = public.
select * from tbl;  -> select * from public.tbl;
2. search_path = $user, public
\c digoal digoal
select * from tbl;  -> select * from digoal.tbl;


因此这两个sql的hash值queryid实际上是不一样的.
例如 : 

postgres=# create schema postgres;
CREATE SCHEMA
postgres=# create table public.tbl(id int);
CREATE TABLE
postgres=# create table postgres.tbl(id int);
CREATE TABLE
postgres=# show search_path;
-[ RECORD 1 ]---------------
search_path | "$user",public

postgres=# select * from tbl;
(No rows)
postgres=# set search_path=public;
SET
postgres=# select * from tbl;
(No rows)
在pg_stat_statements中将得到两条统计信息  : 
postgres=# select * from pg_stat_statements where query ~ 'tbl';
 userid | dbid  |  queryid   |               query                | calls | total_time | rows | shared_blks_hit | shared_blks_read |
 shared_blks_dirtied | shared_blks_written | local_blks_hit | local_blks_read | local_blks_dirtied | local_blks_written | temp_blks_
read | temp_blks_written | blk_read_time | blk_write_time 
--------+-------+------------+------------------------------------+-------+------------+------+-----------------+------------------+
---------------------+---------------------+----------------+-----------------+--------------------+--------------------+-----------
-----+-------------------+---------------+----------------
     10 | 12855 | 1696001068 | select * from tbl;                 |     1 |      0.006 |    0 |               0 |                0 |
                   0 |                   0 |              0 |               0 |                  0 |                  0 |           
   0 |                 0 |             0 |              0
     10 | 12855 |  165422858 | create table postgres.tbl(id int); |     1 |      0.662 |    0 |             115 |                0 |
                   0 |                   0 |              0 |               0 |                  0 |                  0 |           
   0 |                 0 |             0 |              0
     10 | 12855 | 2799837472 | create table public.tbl(id int);   |     1 |       0.74 |    0 |             114 |                0 |
                   0 |                   0 |              0 |               0 |                  0 |                  0 |           
   0 |                 0 |             0 |              0
     10 | 12855 | 2760056465 | select * from tbl;                 |     1 |      0.011 |    0 |               0 |                0 |
                   0 |                   0 |              0 |               0 |                  0 |                  0 |           
   0 |                 0 |             0 |              0
(4 rows)

postgres=# select * from tbl;
 id 
----
(0 rows)

postgres=# select * from pg_stat_statements where query ~ 'tbl';
 userid | dbid  |  queryid   |               query                | calls | total_time | rows | shared_blks_hit | shared_blks_read |
 shared_blks_dirtied | shared_blks_written | local_blks_hit | local_blks_read | local_blks_dirtied | local_blks_written | temp_blks_
read | temp_blks_written | blk_read_time | blk_write_time 
--------+-------+------------+------------------------------------+-------+------------+------+-----------------+------------------+
---------------------+---------------------+----------------+-----------------+--------------------+--------------------+-----------
-----+-------------------+---------------+----------------
     10 | 12855 | 1696001068 | select * from tbl;                 |     2 |      0.014 |    0 |               0 |                0 |
                   0 |                   0 |              0 |               0 |                  0 |                  0 |           
   0 |                 0 |             0 |              0
     10 | 12855 |  165422858 | create table postgres.tbl(id int); |     1 |      0.662 |    0 |             115 |                0 |
                   0 |                   0 |              0 |               0 |                  0 |                  0 |           
   0 |                 0 |             0 |              0
     10 | 12855 | 2799837472 | create table public.tbl(id int);   |     1 |       0.74 |    0 |             114 |                0 |
                   0 |                   0 |              0 |               0 |                  0 |                  0 |           
   0 |                 0 |             0 |              0
     10 | 12855 | 2760056465 | select * from tbl;                 |     1 |      0.011 |    0 |               0 |                0 |
                   0 |                   0 |              0 |               0 |                  0 |                  0 |           
   0 |                 0 |             0 |              0
(4 rows)


说明 : 

Since the queryid hash value is computed on the post-parse-analysis representation of the queries, the opposite is also possible: queries with identical texts might appear as separate entries, if they have different meanings as a result of factors such as different search_path settings.



查看文件内容 : 

pg94@db-172-16-3-150-> cd $PGDATA
pg94@db-172-16-3-150-> cd pg_stat_tmp
pg94@db-172-16-3-150-> cat pgss_query_texts.stat 
/* contrib/pg_stat_statements/pg_stat_statements--1.2.sql */

-- complain if script is sourced in psql, rather than via CREATE EXTENSION


-- Register functions.
CREATE FUNCTION pg_stat_statements_reset()
RETURNS void
AS '$libdir/pg_stat_statements'
LANGUAGE C;

CREATE FUNCTION pg_stat_statements(IN showtext boolean,
    OUT userid oid,
    OUT dbid oid,
    OUT queryid bigint,
    OUT query text,
    OUT calls int8,
    OUT total_time float8,
    OUT rows int8,
    OUT shared_blks_hit int8,
    OUT shared_blks_read int8,
    OUT shared_blks_dirtied int8,
    OUT shared_blks_written int8,
    OUT local_blks_hit int8,
    OUT local_blks_read int8,
    OUT local_blks_dirtied int8,
    OUT local_blks_written int8,
    OUT temp_blks_read int8,
    OUT temp_blks_written int8,
    OUT blk_read_time float8,
    OUT blk_write_time float8
)
RETURNS SETOF record
AS '$libdir/pg_stat_statements', 'pg_stat_statements_1_2'
LANGUAGE C STRICT VOLATILE;

-- Register a view on the function for ease of use.
CREATE VIEW pg_stat_statements AS
  SELECT * FROM pg_stat_statements(true);

GRANT SELECT ON pg_stat_statements TO PUBLIC;

-- Don't want this to be available to non-superusers.
REVOKE ALL ON FUNCTION pg_stat_statements_reset() FROM PUBLIC;
/* contrib/pg_stat_statements/pg_stat_statements--1.2.sql */

-- complain if script is sourced in psql, rather than via CREATE EXTENSION


-- Register functions.
CREATE FUNCTION pg_stat_statements_reset()
RETURNS void
AS '$libdir/pg_stat_statements'
LANGUAGE C;

CREATE FUNCTION pg_stat_statements(IN showtext boolean,
    OUT userid oid,
    OUT dbid oid,
    OUT queryid bigint,
    OUT query text,
    OUT calls int8,
    OUT total_time float8,
    OUT rows int8,
    OUT shared_blks_hit int8,
    OUT shared_blks_read int8,
    OUT shared_blks_dirtied int8,
    OUT shared_blks_written int8,
    OUT local_blks_hit int8,
    OUT local_blks_read int8,
    OUT local_blks_dirtied int8,
    OUT local_blks_written int8,
    OUT temp_blks_read int8,
    OUT temp_blks_written int8,
    OUT blk_read_time float8,
    OUT blk_write_time float8
)
RETURNS SETOF record
AS '$libdir/pg_stat_statements', 'pg_stat_statements_1_2'
LANGUAGE C STRICT VOLATILE;

-- Register a view on the function for ease of use.
CREATE VIEW pg_stat_statements AS
  SELECT * FROM pg_stat_statements(?);

GRANT SELECT ON pg_stat_statements TO PUBLIC;

-- Don't want this to be available to non-superusers.
REVOKE ALL ON FUNCTION pg_stat_statements_reset() FROM PUBLIC;
create extension pg_stat_statements;select * from pg_stat_statements;create schema postgres;create table public.tbl(id int);create table postgres.tbl(id int);show search_path;select * from tbl;set search_path=public;select * from tbl;select * from pg_stat_statements where query ~ ?;



[注意]
1. contrib/pg_stat_statements/pg_stat_statements.c

 * To facilitate presenting entries to users, we create "representative" query
 * strings in which constants are replaced with '?' characters, to make it
 * clearer what a normalized entry can represent.  To save on shared memory,
 * and to avoid having to truncate oversized query strings, we store these
 * strings in a temporary external query-texts file.  Offsets into this
 * file are kept in shared memory.
 *
 * Note about locking issues: to create or delete an entry in the shared
 * hashtable, one must hold pgss->lock exclusively.  Modifying any field
 * in an entry except the counters requires the same.  To look up an entry,
 * one must hold the lock shared.  To read or update the counters within
 * an entry, one must hold the lock shared or exclusive (so the entry doesn't
 * disappear!) and also take the entry's mutex spinlock.
 * The shared state variable pgss->extent (the next free spot in the external
 * query-text file) should be accessed only while holding either the
 * pgss->mutex spinlock, or exclusive lock on pgss->lock.  We use the mutex to
 * allow reserving file space while holding only shared lock on pgss->lock.
 * Rewriting the entire external query-text file, eg for garbage collection,
 * requires holding pgss->lock exclusively; this allows individual entries
 * in the file to be read or written while holding only shared lock.


因为现在hashtable里只记录query的offset, query string则记录在文件中, 并且现在query没有截断, 所以query string file可能膨胀.
例如, 我们只跟踪100个QUERY, 但是实际可能有几万个QUERY, 对于不在hash table的query, 这些query需要从query file中垃圾回收掉, 回收垃圾需要pgss->lock exclusively, 同时hash table中的信息变更(除计数器变更)也需要pgss->lock exclusively, 所以垃圾回收和跟踪是有锁冲突的, 那么就有可能造成有垃圾却无法回收的情况.
如果是锁冲突造成的, 我们可以尽量的加大max参数, 来减少这种锁冲突, 这样不会因为锁冲突导致垃圾无法回收.

希望未来可以改进此处, 


[参考]
1. http://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=f0d6f20278b7c5c412ce40a9b86c6b31dc2fbfdd
2. http://www.postgresql.org/docs/devel/static/pgstatstatements.html

