PostgreSQL research

INSTALL PL/R in PostgreSQL

2015-03-06 11:40:13   查看原文>>

PL/R在CentOS 6.x + PostgreSQL 9.4.1的安装, 相当方便.

首先安装R

# yum localinstall --nogpgcheck https://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
# yum install R
# rpm -qa|grep R
ORBit2-devel-2.14.17-5.el6.x86_64
R-core-devel-3.1.2-1.el6.x86_64
ORBit2-2.14.17-5.el6.x86_64
libRmath-3.1.2-1.el6.x86_64
R-devel-3.1.2-1.el6.x86_64
perl-URI-1.40-2.el6.noarch
perl-Compress-Raw-Zlib-2.021-136.el6_6.1.x86_64
libRmath-devel-3.1.2-1.el6.x86_64
R-core-3.1.2-1.el6.x86_64
R-java-3.1.2-1.el6.x86_64
R-3.1.2-1.el6.x86_64
R-java-devel-3.1.2-1.el6.x86_64


安装pl/r时需要用到R的LIB库, 如果没有的话, 请安装R-DEVEL, 如果你是编译安装的R, 编译参数请加上--enable-R-shlib

# ldconfig -p|grep R
        libRlapack.so (libc6,x86-64) => /usr/lib64/R/lib/libRlapack.so
        libRblas.so (libc6,x86-64) => /usr/lib64/R/lib/libRblas.so
        libR.so (libc6,x86-64) => /usr/lib64/R/lib/libR.so
# 



下载plr源码包

# wget http://www.joeconway.com/plr/plr-8.3.0.16.tar.gz
# tar -zxvf plr-8.3.0.16.tar.gz
# export PATH=/opt/pgsql9.4.1/bin:$PATH
# which pg_config
/opt/pgsql9.4.1/bin/pg_config


将plr目录拷贝到postgresql源码包的contrib下.

# mv plr /opt/soft_bak/postgresql-9.4.1/contrib/
# cd /opt/soft_bak/postgresql-9.4.1/contrib/plr/
[plr ~]# gmake clean
[plr ~]# gmake
[plr ~]# gmake install



在PostgreSQL数据库中创建extension. 

# su - postgres
> psql
psql (9.4.1)
Type "help" for help.
postgres=# create extension plr;
CREATE EXTENSION
postgres=# select * from pg_language ;
 lanname  | lanowner | lanispl | lanpltrusted | lanplcallfoid | laninline | lanvalidator | lanacl 
----------+----------+---------+--------------+---------------+-----------+--------------+--------
 internal |       10 | f       | f            |             0 |         0 |         2246 | 
 c        |       10 | f       | f            |             0 |         0 |         2247 | 
 sql      |       10 | f       | t            |             0 |         0 |         2248 | 
 plpgsql  |       10 | t       | t            |         12672 |     12673 |        12674 | 
 plr      |       10 | t       | f            |         16769 |         0 |            0 | 
(5 rows)


从上面可以看到plr不是一个受信任语言, 只有超级用户可以创建它的函数, 需要执行的话, 可以赋予给普通用户执行.

使用注意

Notes:
    - R headers are required. Download and install R prior to building
      PL/R.

    - R must have been built with the --enable-R-shlib option when it was
      configured, in order for the libR shared object library to be available.

    - R_HOME must be defined in the environment of the user under which
      PostgreSQL is started, before the postmaster is started. Otherwise
      PL/R will refuse to load.

Tip: If a language is installed into template1, all subsequently created databases will have the language installed automatically.

Tip: In addition to the documentation, the plr.out.* files in plr/expected are a good source of usage examples.

Tip: R headers are required. Download and install R prior to building PL/R. R must have been built with the --enable-R-shlib option when it was configured, in order for the libR shared object library to be available.



注意把R的lib库放到搜索路径中, CentOS可修改/etc/ld.so.conf, 执行ldconfig刷新.

Tip: Additionally, libR must be findable by your runtime linker. On Linux, this involves adding an entry in /etc/ld.so.conf for the location of libR (typically $R_HOME/bin or $R_HOME/lib), and then running ldconfig. Refer to man ldconfig or its equivalent for your system.

Tip: R_HOME must be defined in the environment of the user under which PostgreSQL is started, before the postmaster is started. Otherwise PL/R will refuse to load. See plr_environ(), which allows examination of the environment available to the PostgreSQL postmaster process.



获取环境变量

postgres=# select plr_environ();
                                                                                                                                    
                                                                                                                                    
                                                                                                                                    
                                                                                                                                    
                                                                                                           plr_environ              
                                                                                                                                    
                                                                                                                                    
                                                                                                                                    
                                                                                                                                    
                                                                                              
------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
 (MANPATH,/opt/pgsql/share/man:)
 (HOSTNAME,db-172-16-3-150.sky-mobi.com)
 (TERM,vt100)
 (SHELL,/bin/bash)
 (HISTSIZE,1000)
 (PG_GRANDPARENT_PID,23733)
 (QTDIR,/usr/lib64/qt-3.3)
 (QTINC,/usr/lib64/qt-3.3/include)
 (USER,postgres)
 (LS_COLORS,rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=3
0;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;
31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.tbz=01;31:*.tbz2=01;31:*.bz
=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=0
1;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff
=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.o
gm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.f
lc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv
=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mp
c=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.axa=01;36:*.oga=01;36:*.spx=01;36:*.xspf=01;36:)
 (PGPORT,1921)
 (LD_LIBRARY_PATH,/opt/pgsql/lib:/lib64:/usr/lib64:/usr/local/lib64:/lib:/usr/lib:/usr/local/lib:)
 (PGDATABASE,postgres)
 (DATE,201503061109)
 (PATH,/opt/pgsql/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:/home/postgres/bin:.)
 (MAIL,/var/spool/mail/postgres)
 (_,/opt/pgsql9.4.1/bin/postgres)
 (PWD,/home/postgres)
 (LANG,en_US.utf8)
 (MODULEPATH,/usr/share/Modules/modulefiles:/etc/modulefiles)
 (PGHOST,/data02/pgdata/pg_root)
 (LOADEDMODULES,"")
 (PGSYSCONFDIR,/opt/pgsql9.4.1/etc)
 (PGHOME,/opt/pgsql)
 (HISTCONTROL,ignoredups)
 (HOME,/home/postgres)
 (SHLVL,2)
 (LOGNAME,postgres)
 (CVS_RSH,ssh)
 (QTLIB,/usr/lib64/qt-3.3/lib)
 (MODULESHOME,/usr/share/Modules)
 (LESSOPEN,"||/usr/bin/lesspipe.sh %s")
 (PGDATA,/data02/pgdata/pg_root)
 (G_BROKEN_FILENAMES,1)
 ("BASH_FUNC_module()","() {  eval `/usr/bin/modulecmd bash $*`                                                                     
                                                                                                                                    
                                                                                                                                    
                                                                                                                                    
                                                                                                                                    
                                                                                                                                    
                                                                                                                                    
                                                                                                                                    
                                                                                                                                    
                                                                                             +
 }")
 (LC_COLLATE,C)
 (LC_CTYPE,C)
 (LC_MESSAGES,C)
 (LC_MONETARY,C)
 (LC_NUMERIC,C)
 (LC_TIME,C)
(41 rows)



使用举例 : 
最强大实用的部分还是聚合和窗口.
plr目前不支持在线代码执行.
postgres=# do language plr $$
postgres$# $$;
ERROR:  language "plr" does not support inline code execution
所以还是老实创建函数吧.
还有一种特殊的用法, 当PG函数名和R本身提供的函数名一致时, 可以投射过去, 例如R有一个标准方差的函数sd().
可以通过这种方法来创建一个PG函数, 例如, 函数体内不需要任何内容创建一个参数为数组的函数sd, _float8是数组类型的真实名称, float8[]也行.
返回标准差

# create or replace function sd(_float8) returns float as '' language 'plr';
# select round(sd('{1.23,1.31,1.42,1.27}'::_float8)::numeric,8);
   round    
------------
 0.08180261
(1 row)


Greenplum下安装参考
http://gpdb.docs.pivotal.io/4340/index.html#ref_guide/pl_r.html

[参考]
1. http://www.joeconway.com/plr/doc/plr-install.html
2. http://www.joeconway.com/plr/
3. https://github.com/jconway/plr
4. http://cran.r-project.org/
5. http://www.joeconway.com/plr/doc/index.html
6. http://faculty.washington.edu/tlumley/Rcourse/

Flag Counter
