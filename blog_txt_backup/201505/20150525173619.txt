PostgreSQL research

PostgreSQL 9.5 new feature - Allow LOCK TABLE .. ROW EXCLUSIVE MODE with INSERT

2015-05-25 17:36:19   查看原文>>

PostgreSQL 9.5 的一个小补丁，当用户拥有表的insert权限时，可以通过lock命令申请该表的ROW EXCLUSIVE MODE锁。
因为insert操作就需要获取row exclusive mode锁。

postgres=# begin;
BEGIN
postgres=# insert into test values(1);
INSERT 0 1
postgres=# select *,relation::regclass from pg_locks;
   locktype    | database | relation | page | tuple | virtualxid | transactionid | classid | objid | objsubid | virtualtransaction |
 pid  |       mode       | granted | fastpath | relation 
---------------+----------+----------+------+-------+------------+---------------+---------+-------+----------+--------------------+
------+------------------+---------+----------+----------
 relation      |    13181 |    11666 |      |       |            |               |         |       |          | 3/221              |
 6799 | AccessShareLock  | t       | t        | pg_locks
 relation      |    13181 |    16410 |      |       |            |               |         |       |          | 3/221              |
 6799 | RowExclusiveLock | t       | t        | test
 virtualxid    |          |          |      |       | 3/221      |               |         |       |          | 3/221              |
 6799 | ExclusiveLock    | t       | t        | 
 transactionid |          |          |      |       |            |          1768 |         |       |          | 3/221              |
 6799 | ExclusiveLock    | t       | f        | 
(4 rows)



而在9.5以前，用户必须拥有表的update或truncate或delete权限时，才能申请该表的ROW EXCLUSIVE MODE显锁。
9.5以前的例子：

postgres=# revoke all on test from public;
REVOKE
postgres=# grant insert on test to test;
GRANT
postgres=# \c postgres test
You are now connected to database "postgres" as user "test".
postgres=> begin;
BEGIN
postgres=> lock table test in row exclusive mode;
ERROR:  permission denied for relation test
postgres=> \c postgres postgres
You are now connected to database "postgres" as user "postgres".
postgres=# grant update on test to test;
GRANT
postgres=# \c postgres test
You are now connected to database "postgres" as user "test".
postgres=> begin;
BEGIN
postgres=> lock table test in row exclusive mode;
LOCK TABLE



9.5的例子：

postgres=# revoke all on test from public;
REVOKE
postgres=# grant insert on test to digoal;
GRANT
postgres=# \c postgres digoal
You are now connected to database "postgres" as user "digoal".
postgres=> begin;
BEGIN
postgres=> lock table test in row exclusive mode;
LOCK TABLE



详见代码：

--- a/src/backend/commands/lockcmds.c
+++ b/src/backend/commands/lockcmds.c
@@ -169,13 +169,17 @@ static AclResult
 LockTableAclCheck(Oid reloid, LOCKMODE lockmode)
 {
    AclResult   aclresult;
+   AclMode     aclmask;
 
    /* Verify adequate privilege */
    if (lockmode == AccessShareLock)
-       aclresult = pg_class_aclcheck(reloid, GetUserId(),
-                                     ACL_SELECT);
+       aclmask = ACL_SELECT;
+   else if (lockmode == RowExclusiveLock)
+       aclmask = ACL_INSERT | ACL_UPDATE | ACL_DELETE | ACL_TRUNCATE;
    else
-       aclresult = pg_class_aclcheck(reloid, GetUserId(),
-                                     ACL_UPDATE | ACL_DELETE | ACL_TRUNCATE);
+       aclmask = ACL_UPDATE | ACL_DELETE | ACL_TRUNCATE;
+
+   aclresult = pg_class_aclcheck(reloid, GetUserId(), aclmask);
+
    return aclresult;
 }


这算是个小补丁，但是目前并没有加入到低版本中。
Not back-patching this as it's a behavior change which, strictly
speaking, loosens security restrictions.

[参考]
1. http://git.postgresql.org/gitweb/?p=postgresql.git;a=commitdiff;h=fa2642438f189c2b169ace3ac1df19533b9c7781
Flag Counter
