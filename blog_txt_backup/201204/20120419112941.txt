PostgreSQL research

PostgreSQL COPY data from file, diff format between target table and the source file

2012-04-19 11:29:41   查看原文>>

从文件拷贝数据到PostgreSQL的数据库表中 , 应该是比较普遍的需求。
拷贝的语法如下 : 

Command:     COPY
Description: copy data between a file and a table
Syntax:
COPY table_name [ ( column [, ...] ) ]
    FROM { 'filename' | STDIN }
    [ [ WITH ] ( option [, ...] ) ]

COPY { table_name [ ( column [, ...] ) ] | ( query ) }
    TO { 'filename' | STDOUT }
    [ [ WITH ] ( option [, ...] ) ]

where option can be one of:

    FORMAT format_name
    OIDS [ boolean ]
    DELIMITER 'delimiter_character'
    NULL 'null_string'
    HEADER [ boolean ]
    QUOTE 'quote_character'
    ESCAPE 'escape_character'
    FORCE_QUOTE { ( column [, ...] ) | * }
    FORCE_NOT_NULL ( column [, ...] ) |
    ENCODING 'encoding_name'


对于文件内容的格式和目标表的格式相同的情况拷贝比较方便, 如字段个数和字段的顺序以及字段的长度等都相同.
但是当文件的格式和表不一致时就比较麻烦, PostgreSQL目前还不支持选择文件的列, 因此需要用awk这种程序来匹配输出表的格式.
例如 : 

postgres=# create table test (id int,username text,crt_time timestamp(0),nick text,comment text);
CREATE TABLE
postgres=# insert into test select generate_series(1,100000),'digoal'||generate_series(1,100000),now(),'zhou','a beautiful day';
INSERT 0 100000
postgres=# copy test to '/home/postgres/test.csv' with csv header ;
COPY 100000


输出的文件格式如下 : 

postgres@db-172-16-3-150-> less test.csv
id,username,crt_time,nick,comment
1,digoal1,2012-04-19 11:18:35,zhou,a beautiful day
2,digoal2,2012-04-19 11:18:35,zhou,a beautiful day
3,digoal3,2012-04-19 11:18:35,zhou,a beautiful day
4,digoal4,2012-04-19 11:18:35,zhou,a beautiful day
5,digoal5,2012-04-19 11:18:35,zhou,a beautiful day
6,digoal6,2012-04-19 11:18:35,zhou,a beautiful day
7,digoal7,2012-04-19 11:18:35,zhou,a beautiful day
8,digoal8,2012-04-19 11:18:35,zhou,a beautiful day
9,digoal9,2012-04-19 11:18:35,zhou,a beautiful day


创建目标测试表 : 

postgres=# create table test1 (id int,crt_time timestamp(0),nick text);
CREATE TABLE


使用awk规则化输出, 管道到psql程序然后copy from stdin.

> awk -F "," '{print $1","$3","$4}' /home/postgres/test.csv |psql -h 127.0.0.1 postgres postgres -c "copy test1 from stdin with csv header"
psql -h 127.0.0.1 postgres postgres
psql (9.1.3)
Type "help" for help.
postgres=# select * from test1 limit 5;
 id |      crt_time       | nick 
----+---------------------+------
  1 | 2012-04-19 11:18:35 | zhou
  2 | 2012-04-19 11:18:35 | zhou
  3 | 2012-04-19 11:18:35 | zhou
  4 | 2012-04-19 11:18:35 | zhou
  5 | 2012-04-19 11:18:35 | zhou
(5 rows)


以上是一种解决方法, 仅供参考.

