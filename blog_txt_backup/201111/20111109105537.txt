PostgreSQL research

how many performance decreased use dynamic SQL

2011-11-09 10:55:37   查看原文>>

最近一些项目上的应用，必须使用PostgreSQL函数来保证事务一致性。
可以参考
http://blog.163.com/digoal@126/blog/static/163877040201110314133817/

接下来的问题是在函数中要使用到动态表名。那么就需要使用动态SQL来达到目的。

使用动态SQL的话就造成了SQL的硬解析。那么到底会带来多少的性能损失呢？来看看下面的测试：
测试版本 : PostgreSQL 9.1.1
测试表 : 

digoal=> \d parse_test 
  Table "digoal.parse_test"
 Column |  Type   | Modifiers 
--------+---------+-----------
 id     | integer | 
 info   | text    | 



测试函数 : 
软解 : 

digoal=> \sf insert_parse_soft
CREATE OR REPLACE FUNCTION digoal.insert_parse_soft(i_id integer, i_info text)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
declare
begin
insert into parse_test (id,info) values (i_id,i_info);
return;
end;
$function$


硬解 : 

digoal=> \sf insert_parse_hard
CREATE OR REPLACE FUNCTION digoal.insert_parse_hard(i_id integer, i_info text)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
declare
begin
execute $$insert into parse_test (id,info) values ($$||i_id||$$,'$$||i_info||$$')$$;
return;
end;
$function$



测试脚本 : 
软解 : 

postgres@db5-> cat soft.sh
nohup pgbench -M extended -r -c 32 -f ./insert_parse_soft.sql -j 16 -n -T 180 -h 127.0.0.1 -p 1996 -U digoal digoal >>./soft.log 2>&1 &
postgres@db5-> cat insert_parse_soft.sql 
SELECT * from  insert_parse_soft(1,'digoal');


硬解 : 

postgres@db5-> cat hard.sh
nohup pgbench -M extended -r -c 32 -f ./insert_parse_hard.sql -j 16 -n -T 180 -h 127.0.0.1 -p 1996 -U digoal digoal >>./hard.log 2>&1 &
postgres@db5-> cat insert_parse_hard.sql 
SELECT * from  insert_parse_hard(1,'digoal');



测试结果 : 
软解 : 

postgres@db5-> cat soft.log 
transaction type: Custom query
scaling factor: 1
query mode: extended
number of clients: 32
number of threads: 16
duration: 180 s
number of transactions actually processed: 5576738
tps = 30981.435432 (including connections establishing)
tps = 30982.522494 (excluding connections establishing)
statement latencies in milliseconds:
        1.030557        SELECT * from  insert_parse_soft(1,'digoal');


数据库服务器TOP : 
how many performance decreased use dynamic SQL - 德哥@Digoal - The Heart,The World.
 
 
硬解 : 

postgres@db5-> cat hard.log 
transaction type: Custom query
scaling factor: 1
query mode: extended
number of clients: 32
number of threads: 16
duration: 180 s
number of transactions actually processed: 5459964
tps = 30332.628632 (including connections establishing)
tps = 30333.306981 (excluding connections establishing)
statement latencies in milliseconds:
        1.052670        SELECT * from  insert_parse_hard(1,'digoal');


数据库服务器TOP : 
how many performance decreased use dynamic SQL - 德哥@Digoal - The Heart,The World.
 

【小结】
硬解析给数据库服务器的CPU带来了较大的开销，约比软解析多消耗

100*(((1-0.256)-(1-0.357))/(1-0.357)) = 15.7% CPU。


应尽量避免在数据库中使用动态SQL。
