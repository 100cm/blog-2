PostgreSQL research

PostgreSQL 9.4 use Linux hugepage reduce overhead when using large contiguous chunks of memory

2014-03-25 20:31:48   查看原文>>

PostgreSQL 9.4支持使用Linux hugepage降低大内存管理的开销. 
配置方法如下, 以CentOS 6.4 x64为例, 首先要确保操作系统内核打开了如下项目.

[root@db-172-16-3-150 ~]# cat /usr/src/kernels/`uname -r`/.config|grep HUG
CONFIG_TRANSPARENT_HUGEPAGE=y
CONFIG_HUGETLBFS=y
CONFIG_HUGETLB_PAGE=y


查看内存信息 : 

[root@db-172-16-3-150 ~]# cat /proc/meminfo 
MemTotal:       99055100 kB
AnonHugePages:     38912 kB
HugePages_Total:   10240
HugePages_Free:    10240
HugePages_Rsvd:        0
HugePages_Surp:        0
Hugepagesize:       2048 kB


配置数据库参数, huge_pages 默认为 try, 表示尝试使用hugepage, 如果失败则使用原来的内存管理方式, 我们先使用off模式启动, 得到数据库启动后的内存大小 : 

pg94@db-172-16-3-150-> grep "^[a-z]" postgresql.conf 
listen_addresses = '0.0.0.0'            # what IP address(es) to listen on;
max_connections = 100                   # (change requires restart)
unix_socket_directories = '.'   # comma-separated list of directories
shared_buffers = 19200MB                        # min 128kB
huge_pages = off    # on, off, or try
maintenance_work_mem = 512MB            # min 1MB
dynamic_shared_memory_type = posix # the default is the first option
bgwriter_delay = 10ms                   # 10-10000ms between rounds
max_worker_processes = 8
wal_level = logical                     # minimal, archive, hot_standby or logical
synchronous_commit = off                # synchronization level;
wal_writer_delay = 10ms         # 1-10000 milliseconds
checkpoint_segments = 512               # in logfile segments, min 1, 16MB each
max_wal_senders = 32            # max number of walsender processes
max_replication_slots = 32      # max number of replication slots.
log_destination = 'csvlog'              # Valid values are combinations of
logging_collector = on          # Enable capturing of stderr and csvlog
log_error_verbosity = verbose           # terse, default, or verbose messages
log_timezone = 'PRC'
autovacuum = off                        # Enable autovacuum subprocess?  'on'
datestyle = 'iso, mdy'
timezone = 'PRC'
lc_messages = 'C'                       # locale for system error message
lc_monetary = 'C'                       # locale for monetary formatting
lc_numeric = 'C'                        # locale for number formatting
lc_time = 'C'                           # locale for time formatting
default_text_search_config = 'pg_catalog.english'


查看数据库主进程的状态信息.

pg94@db-172-16-3-150-> cat $PGDATA/postmaster.pid 
2811
/ssd2/pg94/pg_root
1395750231
1933
.
0.0.0.0
  1933001     32769


2811即数据库主进程ID, 查看它的VmPeak.

pg94@db-172-16-3-150-> cat /proc/2811/status 
VmPeak: 19965204 kB


这个就是内存峰值, 我们只要确保可用的hugepage总数比这个多就可以了.
从/proc/meminfo得知Hugepagesize=2MB, 所以19965204/2/1024 = 9748, 只要nr_hugepages比这个大就可以了.

sysctl -w vm.nr_hugepages=10240


接下来我们把huge_pages 改成on, 那么将强制使用hugepage, 如果内存分配失败则无法启动数据库 :

vi $PGDATA/postgresql.conf
huge_pages = on
pg_ctl restart -m fast



查看hugepage参数 : 

[root@db-172-16-3-150 ~]# sysctl -a|grep huge
vm.nr_hugepages = 10240
vm.nr_hugepages_mempolicy = 10240
vm.hugetlb_shm_group = 0
vm.hugepages_treat_as_movable = 0
vm.nr_overcommit_hugepages = 0



把hugepage的配额写到sysctl.conf, 下次启动系统后将使用这个配置.

vi /etc/sysctl.conf
vm.nr_hugepages=10240



测试 : 

psql
create table test(id int, info text, crt_time timestamp);
insert into test select generate_series(1,1000000000),'test',now();



数据库使用过程中, 要用到内存时, 从hugepage中分配, 现在已经使用了一些.

[root@db-172-16-3-150 ~]# cat /proc/meminfo |grep Huge
AnonHugePages:     40960 kB
HugePages_Total:   10240
HugePages_Free:     7681
HugePages_Rsvd:     7113
HugePages_Surp:        0
Hugepagesize:       2048 kB



[参考]
1. http://www.postgresql.org/docs/devel/static/runtime-config-resource.html#RUNTIME-CONFIG-RESOURCE-MEMORY
2. http://www.postgresql.org/docs/devel/static/kernel-resources.html#LINUX-HUGE-PAGES
3. https://www.kernel.org/doc/Documentation/vm/hugetlbpage.txt
4. /usr/src/kernels/`uname -r`/.config
5. /proc/$postmasterPID/status
6. /proc/meminfo
