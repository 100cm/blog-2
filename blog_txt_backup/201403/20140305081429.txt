PostgreSQL research

Attention: Use pg_statsinfo set correct timezone and log_timezone in repo and monitored instance.

2014-03-05 8:14:29   查看原文>>

在使用pg_statsinfo 2.5.0 这个版本时, 有一个比较严重的值得关注的问题, 当被监控的数据库和存储监控数据的数据库设置的时区不正确时, 会造成严重后果.
例如, 按照pg_statsinfo的手册, 将被监控数据库的log_timezone设置为'UTC'. 
如果这个时候repo设置的timezone也是'UTC'的话, 将会造成收集到的checkpoint, autovacuum, autoanalyze等数据的时间正常, 但是snapshot表的时间却加了8个小时. (假设服务器的时间是PRC的).
这样的话将导致repo库的一些函数无法正常的统计数据.
例如 : 

statsrepo=>  \sf get_autovacuum_activity
CREATE OR REPLACE FUNCTION statsrepo.get_autovacuum_activity(snapid_begin bigint, snapid_end bigint, OUT datname text, OUT nspname text, OUT relname text, OUT count bigint, OUT avg_tup_removed numeric, OUT avg_tup_remain numeric, OUT avg_index_scans numeric, OUT avg_duration numeric, OUT max_duration numeric)
 RETURNS SETOF record
 LANGUAGE sql
AS $function$
        SELECT
                database,
                schema,
                "table",
                count(*),
                round(avg(tup_removed)::numeric,3),
                round(avg(tup_remain)::numeric,3),
                round(avg(index_scans)::numeric,3),
                round(avg(duration)::numeric,3),
                round(max(duration)::numeric,3)
        FROM
                statsrepo.autovacuum v,
                (SELECT min(time) AS time FROM statsrepo.snapshot WHERE snapid >= $1) b,
                (SELECT max(time) AS time FROM statsrepo.snapshot WHERE snapid <= $2) e
        WHERE
                v.start BETWEEN b.time AND e.time
                AND v.instid = (SELECT instid FROM statsrepo.snapshot WHERE snapid = $2)
        GROUP BY
                database, schema, "table"
        ORDER BY
                5 DESC;
$function$;


这些函数都要使用snapshot的time, 然后从统计表例如autovacuum取数据, 如果它们的时间有偏差, 例如本文提到的偏差了8小时, 那么无法取到正确的数据, 因为取到的数据将与实际偏差8个小时.

目前可以正常采集数据的配置如下, 请参照配置 : 
1. 被监控数据库服务器以及repo服务器的时区

/etc/sysconfig/clock
ZONE="Asia/Shanghai"


2. 被监控机数据库的timezone和log_timezone

$ grep timezone postgresql.conf 
log_timezone = 'UTC'
timezone = 'PRC'
#timezone_abbreviations = 'Default'     # Select the set of available time zone
                                        # share/timezonesets/.


3. 被监控服务器的启动环境PGUSER=postgres, 超级用户.
4. repo数据库的时区配置

$ grep timezone postgresql.conf 
log_timezone = 'UTC'  # 这个无关紧要, 如果仅作为repo库的话.
timezone = 'PRC'
#timezone_abbreviations = 'Default'     # Select the set of available time zone
                                        # share/timezonesets/.



另外, 修改了log_timezone, 必须把pg_log/里的日志文件清除后, 重启数据库或者switch log, 按照新的时区产生一个正确的文件名, 否则statsinfo会无法正常取日志里的内容.
