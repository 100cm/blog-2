PostgreSQL research

阿里云RDS for PostgreSQL预装的模块

2015-06-26 14:27:40   查看原文>>

前几天对阿里RDS for PostgreSQL做了一次基于XID的PITR恢复测试，有兴趣的朋友可以参考：
http://blog.163.com/digoal@126/blog/static/16387704020155199222755/
在恢复过程中，看了一下参数配置，发现阿里云RDS目前预装（与其说预装，不如说允许你使用）了一些模块。
某些模块具有破坏性，RDS不允许你使用。

可以使用的模块如下，附简单的说明：
如果你是一个数据库玩家，一定要试一试这些模块，在其他数据库上你可能玩不到的哦。

#rds_available_extensions='
plpgsql,  --  解释性函数语言，如果要使用PG做服务端编程，大多数情况下使用这个函数就够了。
玩法非常多，可参考：
http://blog.163.com/digoal@126/blog/static/1638770402013283547959/
http://blog.163.com/digoal@126/blog/static/163877040201431410032638
http://blog.163.com/digoal@126/blog/static/163877040201361491337541

pg_stat_statements,  --  SQL性能统计模块(calls, cpu time, r/w rows, io r/w time, share/local/tmp buffer hit/read/dirtied/written)

btree_gin,  --  在某些已有的支持btree索引的数据类型上实现gin索引及原btree对应的操作符，对于有复合列查询(gin+btree)的场景，创建复合索引效率比分开gin+btree实现更高。包括int2, int4, int8, float4, float8, timestamp with time zone, timestamp without time zone, time with time zone, time without time zone, date, interval,
oid, money, "char", varchar, text, bytea, bit, varbit, macaddr, inet, cidr.

btree_gist,    --  在某些已有的支持btree索引的数据类型上实现gist索引及原btree对应的操作符，对于有复合列查询(gist+btree)的场景，创建复合索引效率比分开gist+btree实现更高。同时增加了<->操作符支持举例排序。包括int2, int4, int8, float4, float8, numeric, timestamp with time zone, timestamp without time zone, time with time
zone, time without time zone, date, interval, oid, money, char, varchar, text, bytea, bit, varbit, macaddr, inet, cidr.

chkpass,  --  加密类型，调用unix crypt()函数，超过8个字节的内容被截断。

citext,  --  不区分大小写的类型。

cube,  -- 可以用于表示多维空间点或方盒的类型，支持相交，包含，按距离排序等查询。

dblink,  --  数据链路，可以用于远程数据库调用，2PC等。玩法很多，可参考：http://blog.163.com/digoal@126/blog/static/163877040201321125220134/
http://blog.163.com/digoal@126/blog/static/1638770402012731944439/

dict_int,  --  全文检索类型字典，用于处理数字的字典。
http://blog.163.com/digoal@126/blog/static/163877040201422410175698/
http://blog.163.com/digoal@126/blog/static/16387704020153309577689/

--  如果你觉得postgis太庞大了，只需要一些简单的功能，用earthdistance可能就够了哦。
earthdistance,  --  结合cube插件，将地球视为标准的圆球体，支持三维坐标和经纬度转换，计算球体表面的距离，返回范围等。玩法可参考 http://blog.163.com/digoal@126/blog/static/163877040201552631447227/

hstore,  --  key-value类型，非结构化类型。我之前有写过文章介绍使用HSTORE来跟踪审计用户行为的，模拟数据闪回的。
http://blog.163.com/digoal@126/blog/static/163877040201252575529358/
http://digoal.lofter.com/post/6ced3_44cc200
http://blog.163.com/digoal@126/blog/static/1638770402014728105442434/

intagg,  --  提供一些整型聚合和枚举，目前已经废弃，因为自身的聚合已经包含了这个模块提供的功能。

intarray,  --  整型数组的功能扩展，支持GIST，GIN索引，支持许多数组相关的操作如包含，相交，加减，去重，排序，下标相关操作等。

isn,  --  支持一些国际产品数字化编码的格式，例如ISBN，ISMN等。

ltree,  --  异构数据（树型数据）结构类型。例如用来存储路径，如:中国.浙江.杭州.西湖区.紫荆花路。可以方便的进行路径检索。

pgcrypto,  --  提供了许多数据加密函数。
http://blog.163.com/digoal@126/blog/static/1638770402013423101455507

pgrowlocks,  --  提供了观察行锁的功能。

pg_prewarm,  --  将指定的数据块加载到数据库共享内存区，达到预热的目的。
http://blog.163.com/digoal@126/blog/static/1638770402013112313221318
http://blog.163.com/digoal@126/blog/static/16387704020150685356333/

pg_trgm,  --  模糊检索。例如你只记得一个单词的少部分信息，即使输入错误，也能通过相似度匹配到。
http://blog.163.com/digoal@126/blog/static/163877040201191882553803/

postgres_fdw,  --  PostgreSQL外部表，就像使用本地表一样使用。现已支持读写，PG还支持很多其他数据源的外部表，（例如redis,mysql,oracle,db2,....hadoop,mongodb,......）
https://wiki.postgresql.org/wiki/Fdw

sslinfo,  --  如果客户端以SSL方式连接数据库，通过这个模块可以查看SSL相关的信息。例如DN, cipher。
http://blog.163.com/digoal@126/blog/static/163877040201342233131835/
http://blog.163.com/digoal@126/blog/static/163877040201342383123592/

tablefunc,  --  提供了一些行列变换，异构查询等函数。
http://blog.163.com/digoal@126/blog/static/163877040201151253211186

tsearch2,  --  老的全文检索类型，现在最好使用PostgreSQL自带的全文检索。

unaccent,  --  全文检索字典，支持自定义规则，去重，去复数等。

-- 如果你有地理位置信息需要处理，POSTGIS最好不过了，功能极其强大，一定要试试哦。
postgis,  --  功能强大的地理位置相关模块
postgis_topology,  --  功能强大的地理位置相关模块，包含拓扑信息。
fuzzystrmatch,  --  功能强大的地理位置相关模块
postgis_tiger_geocoder,  --  功能强大的地理位置相关模块

plperl,  --  perl 解释性函数语言
pltcl,  --  tcl 解释性函数语言

--  如果你用到了PostgreSQL的json或者jsonb类型的话，可以试试这几个过程语言，让你的PG服务端编程更加得心应手。
plv8,  --  JavaScript 解释性函数语言
plls,  --  LiveScript 解释性函数语言
plcoffee,  --  CoffeeScript 解释性函数语言

"uuid-ossp"  --  包含几个产生UUID的函数，不过你如果要拿他来当主键，需要注意一下性能。
http://blog.163.com/digoal@126/blog/static/16387704020129249646421/

'

还有一些可以加进去的常用组件，建议RDS可以加入这些插件：
1. 常用的中文分词插件，可用于中文搜索。
2. plR过程语言，可用于数据挖掘。
3. MADlib库，可用于数据挖掘。

如果你觉得这些模块还不够，看看这里吧，大把大把的模块等你来玩：
http://www.postgresql.org/docs/9.4/static/contrib.html
http://pgxn.org/
http://pgfoundry.org/
如果你要在PG上玩挖掘，madlib一定要玩一下，如果理论知识不扎实很烧脑的哦。
http://madlib.net/


[参考]
1. http://postgis.net/docs/manual-2.1/postgis_installation.html#create_new_db_extensions
2. http://pgxn.org/dist/plv8
3. http://www.postgresql.org/docs/9.4/static/server-programming.html
4. http://www.postgresql.org/docs/9.4/static/contrib.html

Flag Counter
