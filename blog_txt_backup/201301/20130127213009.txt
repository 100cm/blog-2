PostgreSQL research

PostgreSQL 9.3 PATCH: optimized DROP of multiple tables within a transaction

2013-01-27 21:30:09   查看原文>>

PostgreSQL 在同一个事物中删除多个表的优化, 如下 : 

Accelerate end-of-transaction dropping of relations

When relations are dropped, at end of transaction we need to remove the
files and clean the buffer pool of buffers containing pages of those
relations.  Previously we would scan the buffer pool once per relation
to clean up buffers.  When there are many relations to drop, the
repeated scans make this process slow; so we now instead pass a list of
relations to drop and scan the pool once, checking each buffer against
the passed list.  When the number of relations is larger than a
threshold (which as of this patch is being set to 20 relations) we sort
the array before starting, and bsearch the array; when it's smaller, we
simply scan the array linearly each time, because that's faster.  The
exact optimal threshold value depends on many factors, but the
difference is not likely to be significant enough to justify making it
user-settable.

This has been measured to be a significant win (a 15x win when dropping
100,000 relations; an extreme case, but reportedly a real one).

Author: Tomas Vondra, some tweaks by me
Reviewed by: Robert Haas, Shigeru Hanada, Andres Freund, ?lvaro Herrera


删除多表时, 在事物的最后需要移除buffer pool里面的相关内容以及清除磁盘中的相关文件。
在这个补丁前, 每个表都要扫描一次buffer pool, 有多少被删除的对象, 就需要扫描多少次。效率低下.
打补丁后, buffer pool只需要扫描一次. (如果被删除的对象大于一定数量(现在设置的是20), 将先对列表进行排序再通过bsearch的方式进行扫描)

涉及代码 : 

src/backend/catalog/storage.c
src/backend/storage/buffer/bufmgr.c
src/backend/storage/smgr/smgr.c
src/include/storage/bufmgr.h
src/include/storage/smgr.h



【测试】
1. 建表函数

CREATE OR REPLACE FUNCTION public.crt_table(i_tablename text, i_cnt integer)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
declare
  v_sql text;
begin
  set client_min_messages=error;
  v_sql := 'create table if not exists '||i_tablename||'(id int primary key, info text)';
  execute v_sql;
  for i in 1..i_cnt loop
    v_sql := 'create table if not exists '||i_tablename||'_'||i||' (like '||i_tablename||' including all) inherits ('||i_tablename||')';
    execute v_sql;
  end loop;
  return;
end;
$function$;



数据库参数 : 

shared_buffers = 4096MB
synchronous_commit = off
wal_level = minimal
checkpoint_segments = 128
max_locks_per_transaction = 1024000



补丁前 : 

ocz@db-172-16-3-150-> psql
psql (9.2.1)
Type "help" for help.
digoal=# \timing
digoal=# select * from crt_table('test', 10000);
 crt_table 
-----------
(1 row)
Time: 49124.616 ms
digoal=# select count(*) from pg_class where relkind='r' and relname ~ '^test';
 count 
-------
 10002
(1 row)
Time: 59.910 ms
digoal=# drop table test cascade;
DROP TABLE
Time: 188896.872 ms



补丁后 : 

pgdev@db-172-16-3-150-> psql
psql (9.3devel)
Type "help" for help.
digoal=# \timing
Timing is on.
digoal=# select * from crt_table('test', 10000);
 crt_table 
-----------
(1 row)
Time: 52650.580 ms
digoal=# select count(*) from pg_class where relkind='r' and relname ~ '^test';
 count 
-------
 10001
(1 row)
Time: 71.086 ms
digoal=# drop table test cascade;
DROP TABLE
Time: 43721.542 ms



速度提升76.85% : 

digoal=# select (188896.872-43721.542)/188896.872;
        ?column?        
------------------------
 0.76854279513956165457
(1 row)
Time: 1.462 ms



【参考】
1. http://www.postgresql.org/message-id/flat/509FFE4E.1070002@fuzzy.cz#509FFE4E.1070002@fuzzy.cz
2. http://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=279628a0a7cf582f7dfb68e25b7b76183dd8ff2f

