PostgreSQL research

PostgreSQL "function call" gram

2014-11-06 10:34:19   查看原文>>

一位朋友在使用PB的datawindow时, 报列不存在的问题, 这个问题实际上是调用PostgreSQL函数的变量输入格式错误造成的.
一般有两种方式传入参数, 位置参数, 或者名字参数.

例如 : 

digoal=# \sf+ f(int)
        CREATE OR REPLACE FUNCTION public.f(ms integer)
         RETURNS SETOF a
         LANGUAGE sql
       AS $function$
        select * from a where id=ms limit 10;
       $function$;

正确使用名字参数的方法.
digoal=# select * from f(ms:=1);
 id | info | c 
----+------+---
  1 | test |  
  1 | test |  
  1 | test |  
(3 rows)

以下写法就不对了
digoal=# select * from f(ms=1);
ERROR:  42703: column "ms" does not exist
LINE 1: select * from f(ms=1);
                        ^
LOCATION:  errorMissingColumn, parse_relation.c:2655



PostgreSQL使用变量名传递参数时, 使用的是param_name COLON_EQUALS a_expr格式.
即key := value.
而不是key = value.
key = value会将key解析成字段名.

相关代码 : 
src/backend/parser/gram.y

%token                  TYPECAST DOT_DOT COLON_EQUALS


/* function arguments can have names */
func_arg_list:  func_arg_expr
                                {
                                        $$ = list_make1($1);
                                }
                        | func_arg_list ',' func_arg_expr
                                {
                                        $$ = lappend($1, $3);
                                }
                ;

func_arg_expr:  a_expr
                                {
                                        $$ = $1;
                                }
                        | param_name COLON_EQUALS a_expr
                                {
                                        NamedArgExpr *na = makeNode(NamedArgExpr);
                                        na->name = $1;
                                        na->arg = (Expr *) $3;
                                        na->argnumber = -1;             /* until determined */
                                        na->location = @1;
                                        $$ = (Node *) na;
                                }
                ;



src/backend/parser/scan.l

colon_equals    ":="
{colon_equals}  {
                                        SET_YYLLOC();
                                        return COLON_EQUALS;



Flag Counter
