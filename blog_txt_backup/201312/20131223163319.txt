PostgreSQL research

PostgreSQL 9.4 improve Optimize updating a row that's locked by same xid

2013-12-23 16:33:19   查看原文>>

Optimize updating a row that's locked by same xid

Updating or locking a row that was already locked by the same
transaction under the same Xid caused a MultiXact to be created; but
this is unnecessary, because there's no usefulness in being able to
differentiate two locks by the same transaction.  In particular, if a
transaction executed SELECT FOR UPDATE followed by an UPDATE that didn't
modify columns of the key, we would dutifully represent the resulting
combination as a multixact -- even though a single key-update is
sufficient.

Optimize the case so that only the strongest of both locks/updates is
represented in Xmax.  This can save some Xmax's from becoming
MultiXacts, which can be a significant optimization.

This missed optimization opportunity was spotted by Andres Freund while
investigating a bug reported by Oliver Seemann in message
CANCipfpfzoYnOz5jj=UZ70_R=CwDHv36dqWSpwsi27vpm1z5sA@mail.gmail.com
and also directly as a performance regression reported by Dong Ye in
message
d54b8387.000012d8.00000010@YED-DEVD1.vmware.com
Reportedly, this patch fixes the performance regression.

Since the missing optimization was reported as a significant performance
regression from 9.2, backpatch to 9.3.

Andres Freund, tweaked by ?lvaro Herrera



同一个事务对同一行多次获取锁时的一个优化, 例如 : 
begin;
select * from t where id=1 for update;
update t set x=x where id=1;
-- 发生对同一行的锁操作
end;
这种场景, 在没有打这个补丁前, 会生成multixacts状态, 实际上对于同一个事务来说是没有必要的.
所以优化后对于这种使用场景有性能提升.
[参考]
1. http://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=13aa6244313df2315b0952a9e7f6e68bb09c9d98
2. http://git.postgresql.org/gitweb/?p=postgresql.git;a=blobdiff;f=src/backend/access/heap/heapam.c;h=4dfc8b1de50fa938586e6003948d2cb9ae7403f3;hp=db683b121796309155ed99f0517a1a91572bdb9b;hb=13aa6244313df2315b0952a9e7f6e68bb09c9d98;hpb=084e385a2fc0b596ff6aa0ede8d360a889a6c084
