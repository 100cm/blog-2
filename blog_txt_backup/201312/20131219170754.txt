PostgreSQL research

阿里云免费虚拟主机的iops测试

2013-12-19 17:07:54   查看原文>>

刚申请的阿里云免费虚拟主机, 先测试一下它的IOPS能力. 
下次使用我以前写的PG性能优化里面的案例测试一下虚拟主机的TPS.
http://blog.163.com/digoal@126/blog/static/163877040201221382150858/
http://blog.163.com/digoal@126/blog/static/163877040201221333411196/
顺便对比一下阿里云提供的mysql的benchmark
http://help.aliyun.com/manual?spm=0.0.0.0.4bt56g&helpId=979
阿里云免费虚拟主机的配置:
CPU : 

root@AY131219095142824b87Z-> cat /proc/cpuinfo 
processor       : 0
vendor_id       : GenuineIntel
cpu family      : 6
model           : 45
model name      :        Intel(R) Xeon(R) CPU E5-2420 0 @ 1.90GHz
stepping        : 7
cpu MHz         : 1894.907
cache size      : 15360 KB
physical id     : 0
siblings        : 2
core id         : 0
cpu cores       : 2
apicid          : 0
fpu             : yes
fpu_exception   : yes
cpuid level     : 13
wp              : yes
flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat clflush mmx fxsr sse sse2 ht syscall nx rdtscp lm constant_tsc pni ssse3 cx16 sse4_1 sse4_2 popcnt lahf_lm
bogomips        : 3789.81
clflush size    : 64
cache_alignment : 64
address sizes   : 46 bits physical, 48 bits virtual
power management:

processor       : 1
vendor_id       : GenuineIntel
cpu family      : 6
model           : 45
model name      :        Intel(R) Xeon(R) CPU E5-2420 0 @ 1.90GHz
stepping        : 7
cpu MHz         : 1894.907
cache size      : 15360 KB
physical id     : 0
siblings        : 2
core id         : 1
cpu cores       : 2
apicid          : 2
fpu             : yes
fpu_exception   : yes
cpuid level     : 13
wp              : yes
flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat clflush mmx fxsr sse sse2 ht syscall nx rdtscp lm constant_tsc pni ssse3 cx16 sse4_1 sse4_2 popcnt lahf_lm
bogomips        : 3790.33
clflush size    : 64
cache_alignment : 64
address sizes   : 46 bits physical, 48 bits virtual
power management:


MEM : 

root@AY131219095142824b87Z-> cat /proc/meminfo 
MemTotal:      1541188 kB
MemFree:         86128 kB
Buffers:         83416 kB
Cached:        1216620 kB
SwapCached:          0 kB
Active:         367548 kB
Inactive:       947120 kB
HighTotal:           0 kB
HighFree:            0 kB
LowTotal:      1541188 kB
LowFree:         86128 kB
SwapTotal:           0 kB
SwapFree:            0 kB
Dirty:             132 kB
Writeback:           0 kB
AnonPages:       14724 kB
Mapped:          21800 kB
Slab:           121188 kB
PageTables:       5548 kB
NFS_Unstable:        0 kB
Bounce:              0 kB
CommitLimit:    770592 kB
Committed_AS:   815480 kB
VmallocTotal: 34359738367 kB
VmallocUsed:       476 kB
VmallocChunk: 34359737723 kB
HugePages_Total:     0
HugePages_Free:      0
HugePages_Rsvd:      0
Hugepagesize:     2048 kB


硬盘 : 

root@AY131219095142824b87Z-> fdisk -l

Disk /dev/hda: 21.4 GB, 21474836480 bytes
224 heads, 56 sectors/track, 3343 cylinders
Units = cylinders of 12544 * 512 = 6422528 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/hda1   *           1        3343    20967268   83  Linux

Disk /dev/xvdb: 21.4 GB, 21474836480 bytes
224 heads, 56 sectors/track, 3343 cylinders
Units = cylinders of 12544 * 512 = 6422528 bytes

Disk /dev/xvdb doesn't contain a valid partition table



/dev/hda的IOPS :　

postgres@AY131219095142824b87Z-> psql
psql (9.3.2)
Type "help" for help.

postgres=> \q
postgres@AY131219095142824b87Z-> pg_test_fsync 
5 seconds per test
O_DIRECT supported on this platform for open_datasync and open_sync.

Compare file sync methods using one 8kB write:
(in wal_sync_method preference order, except fdatasync
is Linux's default)
        open_datasync                                 n/a
        fdatasync                         454.179 ops/sec    2202 usecs/op
        fsync                             448.366 ops/sec    2230 usecs/op
        fsync_writethrough                            n/a
        open_sync                         452.859 ops/sec    2208 usecs/op

Compare file sync methods using two 8kB writes:
(in wal_sync_method preference order, except fdatasync
is Linux's default)
        open_datasync                                 n/a
        fdatasync                         392.615 ops/sec    2547 usecs/op
        fsync                             395.656 ops/sec    2527 usecs/op
        fsync_writethrough                            n/a
        open_sync                         234.373 ops/sec    4267 usecs/op

Compare open_sync with different write sizes:
(This is designed to compare the cost of writing 16kB
in different write open_sync sizes.)
         1 * 16kB open_sync write         421.139 ops/sec    2375 usecs/op
         2 *  8kB open_sync writes        235.940 ops/sec    4238 usecs/op
         4 *  4kB open_sync writes        117.348 ops/sec    8522 usecs/op
         8 *  2kB open_sync writes         61.815 ops/sec   16177 usecs/op
        16 *  1kB open_sync writes         31.403 ops/sec   31844 usecs/op

Test if fsync on non-write file descriptor is honored:
(If the times are similar, fsync() can sync data written
on a different descriptor.)
        write, fsync, close               424.891 ops/sec    2354 usecs/op
        write, close, fsync               453.739 ops/sec    2204 usecs/op

Non-Sync'ed 8kB writes:
        write                           227673.843 ops/sec       4 usecs/op



/dev/xvdb的iops : 

postgres@AY131219095142824b87Z-> pg_test_fsync 
5 seconds per test
O_DIRECT supported on this platform for open_datasync and open_sync.

Compare file sync methods using one 8kB write:
(in wal_sync_method preference order, except fdatasync
is Linux's default)
        open_datasync                                 n/a
        fdatasync                         482.133 ops/sec    2074 usecs/op
        fsync                             156.732 ops/sec    6380 usecs/op
        fsync_writethrough                            n/a
        open_sync                         496.674 ops/sec    2013 usecs/op

Compare file sync methods using two 8kB writes:
(in wal_sync_method preference order, except fdatasync
is Linux's default)
        open_datasync                                 n/a
        fdatasync                         431.197 ops/sec    2319 usecs/op
        fsync                             152.172 ops/sec    6572 usecs/op
        fsync_writethrough                            n/a
        open_sync                         244.892 ops/sec    4083 usecs/op

Compare open_sync with different write sizes:
(This is designed to compare the cost of writing 16kB
in different write open_sync sizes.)
         1 * 16kB open_sync write         410.506 ops/sec    2436 usecs/op
         2 *  8kB open_sync writes        248.983 ops/sec    4016 usecs/op
         4 *  4kB open_sync writes        126.592 ops/sec    7899 usecs/op
         8 *  2kB open_sync writes         65.915 ops/sec   15171 usecs/op
        16 *  1kB open_sync writes         29.481 ops/sec   33920 usecs/op

Test if fsync on non-write file descriptor is honored:
(If the times are similar, fsync() can sync data written
on a different descriptor.)
        write, fsync, close               157.563 ops/sec    6347 usecs/op
        write, close, fsync               159.763 ops/sec    6259 usecs/op

Non-Sync'ed 8kB writes:
        write                           226013.773 ops/sec       4 usecs/op




Flag Counter
