PostgreSQL research

PostgreSQL 9.4 add HEAP_XMIN_FROZEN value in t_infomask

2013-12-23 13:22:34   查看原文>>

Instead of changing the tuple xmin to FrozenTransactionId, the combination
of HEAP_XMIN_COMMITTED and HEAP_XMIN_INVALID, which were previously never
set together, is now defined as HEAP_XMIN_FROZEN.  A variety of previous
proposals to freeze tuples opportunistically before vacuum_freeze_min_age
is reached have foundered on the objection that replacing xmin by
FrozenTransactionId might hinder debugging efforts when things in this
area go awry; this patch is intended to solve that problem by keeping
the XID around (but largely ignoring the value to which it is set).

Third-party code that checks for HEAP_XMIN_INVALID on tuples where
HEAP_XMIN_COMMITTED might be set will be broken by this change.  To fix,
use the new accessor macros in htup_details.h rather than consulting the
bits directly.  HeapTupleHeaderGetXmin has been modified to return
FrozenTransactionId when the infomask bits indicate that the tuple is
frozen; use HeapTupleHeaderGetRawXmin when you already know that the
tuple isn't marked commited or frozen, or want the raw value anyway.
We currently do this in routines that display the xmin for user consumption,
in tqual.c where it's known to be safe and important for the avoidance of
extra cycles, and in the function-caching code for various procedural
languages, which shouldn't invalidate the cache just because the tuple
gets frozen.

Robert Haas and Andres Freund



PostgreSQL 9.4 在对表执行 freeze后, xmin不变了. 而是在tuple head中新增了一个定义, 合并HEAP_XMIN_COMMITTED and HEAP_XMIN_INVALID两个比特位作为HEAP_XMIN_FROZEN的含义.
例子 : 

pg94@db-172-16-3-150-> psql postgres postgres
psql (9.4devel)
Type "help" for help.
postgres=# create table t(id int);
CREATE TABLE
postgres=# create extension pageinspect;
CREATE EXTENSION
postgres=# insert into t values (1);
INSERT 0 1
postgres=# select * from heap_page_items(get_raw_page('t',0));
 lp | lp_off | lp_flags | lp_len | t_xmin | t_xmax | t_field3 | t_ctid | t_infomask2 | t_infomask | t_hoff | t_bits | t_oid 
----+--------+----------+--------+--------+--------+----------+--------+-------------+------------+--------+--------+-------
  1 |   8160 |        1 |     28 |   1815 |      0 |        0 | (0,1)  |           1 |       2048 |     24 |        |      
(1 row)

postgres=# vacuum (verbose,freeze) t;
INFO:  vacuuming "public.t"
INFO:  "t": found 0 removable, 1 nonremovable row versions in 1 out of 1 pages
DETAIL:  0 dead row versions cannot be removed yet.
There were 0 unused item pointers.
0 pages are entirely empty.
CPU 0.00s/0.00u sec elapsed 0.00 sec.
VACUUM
postgres=# select * from heap_page_items(get_raw_page('t',0));
 lp | lp_off | lp_flags | lp_len | t_xmin | t_xmax | t_field3 | t_ctid | t_infomask2 | t_infomask | t_hoff | t_bits | t_oid 
----+--------+----------+--------+--------+--------+----------+--------+-------------+------------+--------+--------+-------
  1 |   8160 |        1 |     28 |   1815 |      0 |        0 | (0,1)  |           1 |       2816 |     24 |        |      
(1 row)
2816 = 0xB00


freeze后, 虽然t_xmin没有变化, 但是t_infomask发生了变化, 从2048变成2816对应这3个比特位.

#define HEAP_XMIN_COMMITTED             0x0100  /* t_xmin committed */
#define HEAP_XMIN_INVALID               0x0200  /* t_xmin invalid/aborted */
#define HEAP_XMAX_INVALID               0x0800  /* t_xmax invalid/aborted */

postgres=# begin;
BEGIN
postgres=# update t set id=2;
UPDATE 1
postgres=# rollback;
postgres=# select * from heap_page_items(get_raw_page('t',0));
 lp | lp_off | lp_flags | lp_len | t_xmin | t_xmax | t_field3 | t_ctid | t_infomask2 | t_infomask | t_hoff | t_bits | t_oid 
----+--------+----------+--------+--------+--------+----------+--------+-------------+------------+--------+--------+-------
  1 |   8160 |        1 |     28 |   1815 |   1816 |        0 | (0,2)  |       16385 |        768 |     24 |        |      
  2 |   8128 |        1 |     28 |   1816 |      0 |        0 | (0,2)  |       32769 |      10240 |     24 |        |      
(2 rows)


xmax在vacuum freeze后会被清除.

postgres=# vacuum (verbose,freeze) t;
INFO:  vacuuming "public.t"
INFO:  "t": found 1 removable, 1 nonremovable row versions in 1 out of 1 pages
DETAIL:  0 dead row versions cannot be removed yet.
There were 1 unused item pointers.
0 pages are entirely empty.
CPU 0.00s/0.00u sec elapsed 0.00 sec.
VACUUM
postgres=# select * from heap_page_items(get_raw_page('t',0));
 lp | lp_off | lp_flags | lp_len | t_xmin | t_xmax | t_field3 | t_ctid | t_infomask2 | t_infomask | t_hoff | t_bits | t_oid 
----+--------+----------+--------+--------+--------+----------+--------+-------------+------------+--------+--------+-------
  1 |   8160 |        1 |     28 |   1815 |      0 |        0 | (0,2)  |           1 |       2816 |     24 |        |      
  2 |      0 |        0 |      0 |        |        |          |        |             |            |        |        |      
(2 rows)


对于PostgreSQL 9.4以前的版本, xmin会置为frozenxid = 2;

digoal=# drop table t;
DROP TABLE
digoal=# create table t(id int);
CREATE TABLE
digoal=# insert into t values (1);
INSERT 0 1
digoal=# select ctid,cmin,cmax,xmin,xmax,* from t;
 ctid  | cmin | cmax |   xmin    | xmax | id 
-------+------+------+-----------+------+----
 (0,1) |    0 |    0 | 316732673 |    0 |  1
(1 row)

digoal=# vacuum (verbose,freeze) t;
INFO:  vacuuming "postgres.t"
INFO:  "t": found 0 removable, 1 nonremovable row versions in 1 out of 1 pages
DETAIL:  0 dead row versions cannot be removed yet.
There were 0 unused item pointers.
0 pages are entirely empty.
CPU 0.00s/0.00u sec elapsed 0.00 sec.
VACUUM
digoal=# select ctid,cmin,cmax,xmin,xmax,* from t;
 ctid  | cmin | cmax | xmin | xmax | id 
-------+------+------+------+------+----
 (0,1) |    0 |    0 |    2 |    0 |  1
(1 row)

digoal=# begin;
BEGIN
digoal=# update t set id=2;
UPDATE 1
digoal=# rollback;
ROLLBACK
digoal=# select ctid,cmin,cmax,xmin,xmax,* from t;
 ctid  | cmin | cmax | xmin |   xmax    | id 
-------+------+------+------+-----------+----
 (0,1) |    0 |    0 |    2 | 316732674 |  1
(1 row)

digoal=# vacuum (verbose,freeze) t;
INFO:  vacuuming "postgres.t"
INFO:  "t": found 1 removable, 1 nonremovable row versions in 1 out of 1 pages
DETAIL:  0 dead row versions cannot be removed yet.
There were 1 unused item pointers.
0 pages are entirely empty.
CPU 0.00s/0.00u sec elapsed 0.00 sec.
VACUUM
digoal=# select ctid,cmin,cmax,xmin,xmax,* from t;
 ctid  | cmin | cmax | xmin | xmax | id 
-------+------+------+------+------+----
 (0,1) |    0 |    0 |    2 |    0 |  1
(1 row)



[参考]
1. http://git.postgresql.org/gitweb/?p=postgresql.git;a=commitdiff;h=37484ad2aacef5ec794f4dd3d5cf814475180a78;hp=961bf59fb7a7e4fab751e20e9372de7ab37c5649
2. http://www.postgresql.org/docs/devel/static/pageinspect.html
3. src/include/access/htup_details.h

/*
 * information stored in t_infomask:
 */
#define HEAP_HASNULL                    0x0001  /* has null attribute(s) */
#define HEAP_HASVARWIDTH                0x0002  /* has variable-width attribute(s) */
#define HEAP_HASEXTERNAL                0x0004  /* has external stored attribute(s) */
#define HEAP_HASOID                             0x0008  /* has an object-id field */
#define HEAP_XMAX_KEYSHR_LOCK   0x0010  /* xmax is a key-shared locker */
#define HEAP_COMBOCID                   0x0020  /* t_cid is a combo cid */
#define HEAP_XMAX_EXCL_LOCK             0x0040  /* xmax is exclusive locker */
#define HEAP_XMAX_LOCK_ONLY             0x0080  /* xmax, if valid, is only a locker */

 /* xmax is a shared locker */
#define HEAP_XMAX_SHR_LOCK      (HEAP_XMAX_EXCL_LOCK | HEAP_XMAX_KEYSHR_LOCK)

#define HEAP_LOCK_MASK  (HEAP_XMAX_SHR_LOCK | HEAP_XMAX_EXCL_LOCK | \
                                                 HEAP_XMAX_KEYSHR_LOCK)
#define HEAP_XMIN_COMMITTED             0x0100  /* t_xmin committed */
#define HEAP_XMIN_INVALID               0x0200  /* t_xmin invalid/aborted */
#define HEAP_XMIN_FROZEN                (HEAP_XMIN_COMMITTED|HEAP_XMIN_INVALID)
#define HEAP_XMAX_COMMITTED             0x0400  /* t_xmax committed */
#define HEAP_XMAX_INVALID               0x0800  /* t_xmax invalid/aborted */
#define HEAP_XMAX_IS_MULTI              0x1000  /* t_xmax is a MultiXactId */
#define HEAP_UPDATED                    0x2000  /* this is UPDATEd version of row */
#define HEAP_MOVED_OFF                  0x4000  /* moved to another place by pre-9.0
                                                                                 * VACUUM FULL; kept for binary
                                                                                 * upgrade support */
#define HEAP_MOVED_IN                   0x8000  /* moved from another place by pre-9.0
                                                                                 * VACUUM FULL; kept for binary
                                                                                 * upgrade support */
#define HEAP_MOVED (HEAP_MOVED_OFF | HEAP_MOVED_IN)

#define HEAP_XACT_MASK                  0xFFF0  /* visibility-related bits */



