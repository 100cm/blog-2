PostgreSQL research

UNIQUE constraint PostgreSQL's BUG or Oracle's BUG OR not

2012-06-20 16:45:07   查看原文>>

今天一位同事找到我, 发现在PostgreSQL中做联合唯一约束时, 某字段为空,其他字段非空, 可以插入多次. 而这个在Oracle里面是不允许的.
先来了解一下什么是NULL, 下面三种情况是在PostgreSQL和Oracle里面的真假.

NULL = NULL is false
NULL <> NULL is false
NULL IS NULL is true



Oracle : 

SQL> select 1 from dual where null=null;
no rows selected
SQL> select 1 from dual where null<>null;
no rows selected
SQL> select 1 from dual where null is null;
         1
----------
         1



PostgreSQL : 

mns=> select 1 where null = null;
 ?column? 
----------
(0 rows)
mns=> select 1 where null <> null;
 ?column? 
----------
(0 rows)
mns=> select 1 where null is null;
 ?column? 
----------
        1
(1 row)



具体是什么样子呢? 看个测试:
Oracle : 

SQL> create table test_null (c1 int,c2 int);
Table created.
SQL> insert into test_null values (null,null);
1 row created.
SQL> insert into test_null values (null,null);
1 row created.
SQL> insert into test_null values (null,null);
1 row created.
SQL> insert into test_null values (1,null);
1 row created.
-- oracle不允许以下SQL
SQL> insert into test_null values (1,null);
insert into test_null values (1,null)
*
ERROR at line 1:
ORA-00001: unique constraint (SYS.IDX_TEST_NULL) violated
-- 从group by 来看, null输出1行. oracle认为null,null是重复的. 但是unique约束又允许它插入多条, 矛盾.
SQL> select c1,c2 from test_null group by c1,c2;

        C1         C2
---------- ----------

         1




PostgreSQL : 

mns=> create table null_test (c1 int,c2 int);
CREATE TABLE
mns=> create unique index idx_null_test on null_test (c1,c2);
CREATE INDEX
-- postgresql允许这样的情况发生
mns=> insert into null_test values (1,null);
INSERT 0 1
mns=> insert into null_test values (1,null);
INSERT 0 1
mns=> insert into null_test values (1,null);
INSERT 0 1
mns=> insert into null_test values (1,null);
INSERT 0 1
mns=> insert into null_test values (1,null);
INSERT 0 1
mns=> insert into null_test values (null,null);
INSERT 0 1
mns=> insert into null_test values (null,null);
INSERT 0 1
mns=> insert into null_test values (null,null);
INSERT 0 1
mns=> insert into null_test values (null,null);
INSERT 0 1
-- group by 时, PostgreSQL认为1,null和1, null是重复的, null,null与null,null也是重复的. 但是他们都允许在unique约束时重复插入, 矛盾.
mns=> select c1,c2 from null_test group by c1,c2;
 c1 | c2 
----+----
    |   
  1 |   
(2 rows)


下面测试的是非联合唯一约束, 也就是单列上的唯一约束.
结果, Oracle和PostgreSQL测试结果一致.
Oracle : 

SQL> create table test (id int unique);
Table created.
SQL> insert into test values (1);
1 row created.
SQL> insert into test values (1);
insert into test values (1)
*
ERROR at line 1:
ORA-00001: unique constraint (SYS.SYS_C0070356) violated

SQL> insert into test values (null);
1 row created.
SQL> insert into test values (null);
1 row created.
SQL> insert into test values (null);
1 row created.

SQL> set null NULL
SQL> select id from test group by id;
        ID
----------
         1
NULL

SQL> select id,count(*) from test group by id;
        ID   COUNT(*)
---------- ----------
         1          1
NULL                3



PostgreSQL : 

postgres=# create table test (id int unique);
ERROR:  42P07: relation "test" already exists
LOCATION:  heap_create_with_catalog, heap.c:1027
postgres=# drop table test;
DROP TABLE
postgres=# create table test (id int unique);
NOTICE:  00000: CREATE TABLE / UNIQUE will create implicit index "test_id_key" for table "test"
LOCATION:  DefineIndex, indexcmds.c:600
CREATE TABLE
postgres=# insert into test values (1);
INSERT 0 1
postgres=# insert into test values (1);
ERROR:  23505: duplicate key value violates unique constraint "test_id_key"
DETAIL:  Key (id)=(1) already exists.
LOCATION:  _bt_check_unique, nbtinsert.c:396
postgres=# insert into test values (null);
INSERT 0 1
postgres=# insert into test values (null);
INSERT 0 1
postgres=# insert into test values (null);
INSERT 0 1
postgres=# select id,count(*) from test group by id;
 id | count 
----+-------
    |     3
  1 |     1
(2 rows)


接下来看看PostgreSQL在这两块遵循的SQL标准.
supported feature : 

E141-02 Core UNIQUE constraints of NOT NULL columns
T591   UNIQUE constraints of possibly null columns


unsupported feature : 

F291   UNIQUE predicate
S291   Unique constraint on entire row


到底是PostgreSQL还是Oracle的问题, 先不追究了.
但是如果你有数据要从Oracle到PG, 就要注意这方面的差别了.
