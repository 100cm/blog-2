PostgreSQL research

Oracle TO PostgreSQL case

2012-11-29 15:55:06   查看原文>>

监控系统以前查询digoalment数据是在oracle的监控数据库进行的.
监控数据库的信息来自定时从生产系统中同步, 然后转成视图.
监听的查询SQL是基于这个视图进行的.
步骤如下:

第一,创建一个存储过程,把现网digoalment的digoalment.tbl_digoal_record表和digoalment.tbl_digoal_submit_log分别同步到监控系统的oracle的
tbl_digoal_record和tbl_digoal_submit_log表中

CREATE OR REPLACE PROCEDURE CMP.p_sync_deposit_thridp as
  v_max_id number;
begin

  select max(id) into v_max_id from tbl_digoal_record;
  delete from tbl_digoal_record nologging where id < v_max_id-1000000 and CREATETIME<sysdate-1/12;
  commit;

  insert into tbl_digoal_record nologging (digoalORDERID,ID,CARDTYPE,digoalTIME,digoalRESULT,digoalTYPE,digoalAMOUNT,CREATETIME)
    select digoalORDERID,ID,CARDTYPE,digoalTIME,digoalRESULT,digoalTYPE,digoalAMOUNT,CREATETIME
      from digoalment.tbl_digoal_record@skyoss2
     where id > v_max_id and CREATETIME<=(sysdate-1/144);
  commit;

  select max(id) into v_max_id from tbl_digoal_submit_log;
  delete from tbl_digoal_submit_log nologging where id < v_max_id-1000000 and SUBMITTIME<sysdate-1/12;
  commit;

  insert into tbl_digoal_submit_log nologging (digoalORDERID,ID,THIRID,SUBMITTIME)
    select digoalORDERID,ID,THIRID,SUBMITTIME
      from digoalment.tbl_digoal_submit_log@skyoss2
     where id > v_max_id;
  commit;

END p_sync_deposit_thridp;



过程分析 : 
1. 10分钟同步一次
2. 为确保监控系统的ORACLE中数据不会太大. 同步时需要删除老记录, 表中至少保留100W条或者CREATETIME值是2小时的记录.
3. 同步id大于本地表中最大ID的记录, 同时保证记录的CREATETIME值是10分钟以前的.
   是否担心批量提交, 会造成部分ID已经CACHE掉了, 将同步不到. 所以取了10分钟以前的记录(这里假设批量提交的延时最大小于10分钟) ?
   后面会讲到, 同步的数据确实不准确, 有缺失, 可能由于是监控系统一直未发现这个问题.

第二,创建一个视图,这个试图的数据来源于上面同步好的tbl_digoal_record和tbl_digoal_submit_log

CREATE OR REPLACE VIEW TBL_DEPOSIT_QUDAO_RESP
(ID, QUDAOTYPE, CARDTYPE, SUBMITTIME, digoalTIME, digoalRESULT, digoalTYPE, digoalAMOUNT)
AS 
select 
  t2.id, 
  t2.thirid qudaotype, 
  t1.cardtype, 
  t2.submittime,
  t1.digoaltime,
  t1.digoalresult,
  t1.digoaltype,
  t1.digoalamount
from tbl_digoal_record t1 inner join tbl_digoal_submit_log t2
on t1.digoalorderid=t2.digoalorderid;



第三,监控系统去视图中获取数据

select 
  t1.qudaotype,
  t1.totalcount,
  t2.notrespcount 
from 
(select 
   qudaotype,
   count(0) as totalcount 
 from tbl_deposit_qudao_resp 
 where substr(to_char(submittime,'yyyyMMddHH24mi'),1,11) = '20121128101'
 group by qudaotype
) t1 
left join 
(select 
   qudaotype,
   count(0) as notrespcount 
 from tbl_deposit_qudao_resp 
 where substr(to_char(submittime,'yyyyMMddHH24mi'),1,11) = '20121128101'
 and (digoaltime is null or (digoaltime-submittime)*24*60 > 10) 
 group by qudaotype
) t2  
on t1.qudaotype=t2.qudaotype;



转换到PostgreSQL中后, 将直接在生产的HOT STANDBY数据库中执行查询, 省去同步数据的过程.
反向分析, 先看视图.

CREATE OR REPLACE VIEW TBL_DEPOSIT_QUDAO_RESP
(ID, QUDAOTYPE, CARDTYPE, SUBMITTIME, digoalTIME, digoalRESULT, digoalTYPE, digoalAMOUNT)
AS 
select 
  t2.id,
  t2.thirid qudaotype,
  t1.cardtype,
  t2.submittime,
  t1.digoaltime,
  t1.digoalresult,
  t1.digoaltype,
  t1.digoalamount
from tbl_digoal_record t1 inner join tbl_digoal_submit_log t2
on t1.digoalorderid=t2.digoalorderid;


实际只用到了生产表的这几个字段 : 

tbl_digoal_record: (digoalorderid, cardtype, digoaltime, digoalresult, digoaltype, digoalamount)
tbl_digoal_submit_log: (digoalorderid, id, thirid, submittime)


其中tbl_digoal_submit_log.thirid使用了qudaotype别名.

再看监控的查询SQL : 

select 
  t1.qudaotype,
  t1.totalcount,
  t2.notrespcount 
from 
(select 
   qudaotype,
   count(0) as totalcount 
 from tbl_deposit_qudao_resp 
 where substr(to_char(submittime,'yyyyMMddHH24mi'),1,11) = '20121128101'
 group by qudaotype
) t1 
left join 
(select 
   qudaotype,
   count(0) as notrespcount 
 from tbl_deposit_qudao_resp 
 where substr(to_char(submittime,'yyyyMMddHH24mi'),1,11) = '20121128101'
 and (digoaltime is null or (digoaltime-submittime)*24*60 > 10) 
 group by qudaotype
) t2  
on t1.qudaotype=t2.qudaotype;


这里用到了left join, 来看看这两个JOIN的子查询.
1. 

select 
   qudaotype,
   count(0) as totalcount 
 from tbl_deposit_qudao_resp 
 where substr(to_char(submittime,'yyyyMMddHH24mi'),1,11) = '20121128101'
 group by qudaotype



2. 

select 
   qudaotype,
   count(0) as notrespcount 
 from tbl_deposit_qudao_resp 
 where substr(to_char(submittime,'yyyyMMddHH24mi'),1,11) = '20121128101'
 and (digoaltime is null or (digoaltime-submittime)*24*60 > 10) 
 group by qudaotype



关联条件t1.qudaotype=t2.qudaotype
原来最终要的是按照tbl_digoal_submit_log.thirid进行的分组, 只是2的分组多了个附加条件. 所以在这里用到了很多个JOIN.
其实没有必要, 用case when then else end转成SUM就好了.
下面是转成PostgreSQL后的SQL : 

select 
t2.thirid as qudaotype,
count(*) as totalcount,
sum(
  case 
  when ( t1.digoaltime is null or (t1.digoaltime-t2.submittime) > interval '10 min' )
  then 1
  else 0
  end
) as notrespcount
from
tbl_digoal_record t1
join
tbl_digoal_submit_log t2
on 
(t1.digoalorderid=t2.digoalorderid
and substr(to_char(t2.submittime,'yyyymmddhh24mi'),1,11) = '20121128101'
-- 以下限制条件可以根据业务逻辑进行修改.
-- 因为在监控数据库中, tbl_digoal_record表只保留了符合以下条件的数据.
-- and ( t1.createtime >= now()- interval '2 hour'
--      or
--      t1.id > (select max(id)-1000000 from tbl_digoal_record)
--     )
)
group by qudaotype
order by qudaotype;



执行结果 : 

 qudaotype | totalcount | notrespcount 
-----------+------------+--------------
 10        |          7 |            0
 11        |          1 |            0
 12        |         38 |            0
 13        |         25 |            0
 22        |         14 |            0
 26        |          5 |            0
 42        |          8 |            1
 45        |          3 |            0
 47        |         15 |            0
 48        |          1 |            0
(10 rows)
Time: 52067.600 ms


耗时较长, 执行计划 : 

digoalment=> explain select
t2.thirid as qudaotype,
count(*) as totalcount,
sum(
  case
  when ( t1.digoaltime is null or (t1.digoaltime-t2.submittime) > interval '10 min' )
  then 1
  else 0
  end
) as notrespcount
from
tbl_digoal_record t1
join
tbl_digoal_submit_log t2
on 
(t1.digoalorderid=t2.digoalorderid
and substr(to_char(t2.submittime,'yyyymmddhh24mi'),1,11) = '20121128101'
-- 以下这个限制条件可以根据业务逻辑进行修改.
-- 因为在监控数据库中, tbl_digoal_record表只保留了符合以下条件的数据.
-- and ( t1.createtime >= now()- interval '2 hour'
--      or
--      t1.id > (select max(id)-1000000 from tbl_digoal_record)
--     )
)
group by qudaotype
order by qudaotype;
                                                      QUERY PLAN                                                      
----------------------------------------------------------------------------------------------------------------------
 Sort  (cost=1299097.44..1299097.94 rows=200 width=19)
   Sort Key: t2.thirid
   ->  HashAggregate  (cost=1299087.79..1299089.79 rows=200 width=19)
         ->  Hash Join  (cost=837533.07..1298266.41 rows=65711 width=19)
               Hash Cond: ((t2.digoalorderid)::text = (t1.digoalorderid)::text)
               ->  Append  (cost=0.00..367935.14 rows=65711 width=32)
                     ->  Seq Scan on tbl_digoal_submit_log t2  (cost=0.00..0.00 rows=1 width=146)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201004 t2  (cost=0.00..1981.86 rows=356 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201005 t2  (cost=0.00..3692.95 rows=663 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201006 t2  (cost=0.00..4366.18 rows=784 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201007 t2  (cost=0.00..6107.97 rows=1094 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201008 t2  (cost=0.00..7398.18 rows=1325 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201009 t2  (cost=0.00..10064.09 rows=1803 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201010 t2  (cost=0.00..10031.96 rows=1797 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201011 t2  (cost=0.00..10232.05 rows=1834 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201012 t2  (cost=0.00..9291.40 rows=1665 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201101 t2  (cost=0.00..9579.05 rows=1715 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201102 t2  (cost=0.00..9092.85 rows=1629 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201103 t2  (cost=0.00..11161.13 rows=1999 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201104 t2  (cost=0.00..10596.52 rows=1899 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201105 t2  (cost=0.00..10921.26 rows=1956 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201106 t2  (cost=0.00..10074.33 rows=1804 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201107 t2  (cost=0.00..11124.31 rows=1989 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201108 t2  (cost=0.00..12350.01 rows=2209 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201109 t2  (cost=0.00..11422.37 rows=2044 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201110 t2  (cost=0.00..13422.94 rows=2401 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201111 t2  (cost=0.00..13245.23 rows=2370 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201112 t2  (cost=0.00..12422.96 rows=2223 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201201 t2  (cost=0.00..12630.75 rows=2259 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201202 t2  (cost=0.00..12795.73 rows=2287 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201203 t2  (cost=0.00..14068.72 rows=2516 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201204 t2  (cost=0.00..14528.59 rows=2593 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201205 t2  (cost=0.00..15074.83 rows=2689 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201206 t2  (cost=0.00..16346.38 rows=2907 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201207 t2  (cost=0.00..18151.91 rows=3224 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201208 t2  (cost=0.00..18341.61 rows=3263 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201209 t2  (cost=0.00..14528.79 rows=2586 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201210 t2  (cost=0.00..16018.38 rows=2853 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201211 t2  (cost=0.00..16701.58 rows=2962 width=32)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201212 t2  (cost=0.00..14.03 rows=1 width=146)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201302 t2  (cost=0.00..14.03 rows=1 width=146)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201303 t2  (cost=0.00..14.03 rows=1 width=146)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201304 t2  (cost=0.00..14.03 rows=1 width=146)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201305 t2  (cost=0.00..14.03 rows=1 width=146)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201306 t2  (cost=0.00..14.03 rows=1 width=146)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201307 t2  (cost=0.00..14.03 rows=1 width=146)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201308 t2  (cost=0.00..14.03 rows=1 width=146)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201309 t2  (cost=0.00..14.03 rows=1 width=146)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201310 t2  (cost=0.00..14.03 rows=1 width=146)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201311 t2  (cost=0.00..14.03 rows=1 width=146)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
                     ->  Seq Scan on tbl_digoal_submit_log_201312 t2  (cost=0.00..14.03 rows=1 width=146)
                           Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
               ->  Hash  (cost=582936.25..582936.25 rows=13167026 width=29)
                     ->  Append  (cost=0.00..582936.25 rows=13167026 width=29)
                           ->  Seq Scan on tbl_digoal_record t1  (cost=0.00..0.00 rows=1 width=29)
                           ->  Seq Scan on tbl_digoal_record_201004 t1  (cost=0.00..2543.65 rows=71165 width=29)
                           ->  Seq Scan on tbl_digoal_record_201005 t1  (cost=0.00..4637.48 rows=131548 width=29)
                           ->  Seq Scan on tbl_digoal_record_201006 t1  (cost=0.00..5335.37 rows=156137 width=29)
                           ->  Seq Scan on tbl_digoal_record_201007 t1  (cost=0.00..7728.89 rows=216989 width=29)
                           ->  Seq Scan on tbl_digoal_record_201008 t1  (cost=0.00..10287.95 rows=262295 width=29)
                           ->  Seq Scan on tbl_digoal_record_201009 t1  (cost=0.00..14792.37 rows=359237 width=29)
                           ->  Seq Scan on tbl_digoal_record_201010 t1  (cost=0.00..15018.00 rows=353400 width=29)
                           ->  Seq Scan on tbl_digoal_record_201011 t1  (cost=0.00..15145.33 rows=364933 width=29)
                           ->  Seq Scan on tbl_digoal_record_201012 t1  (cost=0.00..13511.94 rows=331094 width=29)
                           ->  Seq Scan on tbl_digoal_record_201101 t1  (cost=0.00..14035.27 rows=340727 width=29)
                           ->  Seq Scan on tbl_digoal_record_201102 t1  (cost=0.00..13414.78 rows=324878 width=29)
                           ->  Seq Scan on tbl_digoal_record_201103 t1  (cost=0.00..16720.57 rows=398557 width=29)
                           ->  Seq Scan on tbl_digoal_record_201104 t1  (cost=0.00..16079.41 rows=379241 width=29)
                           ->  Seq Scan on tbl_digoal_record_201105 t1  (cost=0.00..16623.41 rows=390341 width=29)
                           ->  Seq Scan on tbl_digoal_record_201106 t1  (cost=0.00..15164.98 rows=359598 width=29)
                           ->  Seq Scan on tbl_digoal_record_201107 t1  (cost=0.00..16441.32 rows=397232 width=29)
                           ->  Seq Scan on tbl_digoal_record_201108 t1  (cost=0.00..19443.66 rows=440266 width=29)
                           ->  Seq Scan on tbl_digoal_record_201109 t1  (cost=0.00..18199.55 rows=410455 width=29)
                           ->  Seq Scan on tbl_digoal_record_201110 t1  (cost=0.00..21318.33 rows=479133 width=29)
                           ->  Seq Scan on tbl_digoal_record_201111 t1  (cost=0.00..21326.38 rows=472838 width=29)
                           ->  Seq Scan on tbl_digoal_record_201112 t1  (cost=0.00..20334.76 rows=448176 width=29)
                           ->  Seq Scan on tbl_digoal_record_201201 t1  (cost=0.00..20776.35 rows=453835 width=29)
                           ->  Seq Scan on tbl_digoal_record_201202 t1  (cost=0.00..21708.77 rows=470877 width=29)
                           ->  Seq Scan on tbl_digoal_record_201203 t1  (cost=0.00..24344.13 rows=523613 width=29)
                           ->  Seq Scan on tbl_digoal_record_201204 t1  (cost=0.00..25049.67 rows=536467 width=29)
                           ->  Seq Scan on tbl_digoal_record_201205 t1  (cost=0.00..25648.66 rows=544666 width=29)
                           ->  Seq Scan on tbl_digoal_record_201206 t1  (cost=0.00..26343.59 rows=580159 width=29)
                           ->  Seq Scan on tbl_digoal_record_201207 t1  (cost=0.00..30284.35 rows=640635 width=29)
                           ->  Seq Scan on tbl_digoal_record_201208 t1  (cost=0.00..30983.93 rows=647593 width=29)
                           ->  Seq Scan on tbl_digoal_record_201209 t1  (cost=0.00..25258.46 rows=526246 width=29)
                           ->  Seq Scan on tbl_digoal_record_201210 t1  (cost=0.00..26713.79 rows=565079 width=29)
                           ->  Seq Scan on tbl_digoal_record_201211 t1  (cost=0.00..27588.55 rows=589355 width=29)
                           ->  Seq Scan on tbl_digoal_record_201212 t1  (cost=0.00..10.20 rows=20 width=126)
                           ->  Seq Scan on tbl_digoal_record_201301 t1  (cost=0.00..10.20 rows=20 width=126)
                           ->  Seq Scan on tbl_digoal_record_201302 t1  (cost=0.00..10.20 rows=20 width=126)
                           ->  Seq Scan on tbl_digoal_record_201303 t1  (cost=0.00..10.20 rows=20 width=126)
                           ->  Seq Scan on tbl_digoal_record_201304 t1  (cost=0.00..10.20 rows=20 width=126)
                           ->  Seq Scan on tbl_digoal_record_201305 t1  (cost=0.00..10.20 rows=20 width=126)
                           ->  Seq Scan on tbl_digoal_record_201306 t1  (cost=0.00..10.20 rows=20 width=126)
                           ->  Seq Scan on tbl_digoal_record_201307 t1  (cost=0.00..10.20 rows=20 width=126)
                           ->  Seq Scan on tbl_digoal_record_201308 t1  (cost=0.00..10.20 rows=20 width=126)
                           ->  Seq Scan on tbl_digoal_record_201309 t1  (cost=0.00..10.20 rows=20 width=126)
                           ->  Seq Scan on tbl_digoal_record_201310 t1  (cost=0.00..10.20 rows=20 width=126)
                           ->  Seq Scan on tbl_digoal_record_201311 t1  (cost=0.00..10.20 rows=20 width=126)
                           ->  Seq Scan on tbl_digoal_record_201312 t1  (cost=0.00..10.20 rows=20 width=126)
(144 rows)



优化, 增加一个查询条件.

and t1.createtime >= '2012-11-28'


因为提交时间肯定比支付时间早, 所以这么做逻辑上是允许的.
优化后,

select 
t2.thirid as qudaotype,
count(*) as totalcount,
sum(
  case 
  when ( t1.digoaltime is null or (t1.digoaltime-t2.submittime) > interval '10 min' )
  then 1
  else 0
  end
) as notrespcount
from
tbl_digoal_record_201211 t1
join
tbl_digoal_submit_log_201211 t2
on 
(t1.digoalorderid=t2.digoalorderid
and substr(to_char(t2.submittime,'yyyymmddhh24mi'),1,11) = '20121128101'
and t1.createtime >= '2012-11-28'
)
group by qudaotype
order by qudaotype;


执行结果 : 

 qudaotype | totalcount | notrespcount 
-----------+------------+--------------
 10        |          7 |            0
 11        |          1 |            0
 12        |         38 |            0
 13        |         25 |            0
 22        |         14 |            0
 26        |          5 |            0
 42        |          8 |            1
 45        |          3 |            0
 47        |         15 |            0
 48        |          1 |            0
(10 rows)
Time: 1127.975 ms


执行计划 : 

digoalment=> explain select 
t2.thirid as qudaotype,
count(*) as totalcount,
sum(
  case 
  when ( t1.digoaltime is null or (t1.digoaltime-t2.submittime) > interval '10 min' )
  then 1
  else 0
  end
) as notrespcount
from
tbl_digoal_record_201211 t1
join
tbl_digoal_submit_log_201211 t2
on 
(t1.digoalorderid=t2.digoalorderid
and substr(to_char(t2.submittime,'yyyymmddhh24mi'),1,11) = '20121128101'
and t1.createtime >= '2012-11-28'           
)                                                                 
group by qudaotype                                
order by qudaotype;
                                                                     QUERY PLAN                                                     
                 
------------------------------------------------------------------------------------------------------------------------------------
-----------------
 Sort  (cost=22579.90..22579.90 rows=1 width=19)
   Sort Key: t2.thirid
   ->  HashAggregate  (cost=22579.88..22579.89 rows=1 width=19)
         ->  Hash Join  (cost=5699.22..22578.84 rows=83 width=19)
               Hash Cond: ((t2.digoalorderid)::text = (t1.digoalorderid)::text)
               ->  Seq Scan on tbl_digoal_submit_log_201211 t2  (cost=0.00..16701.58 rows=2962 width=32)
                     Filter: (substr(to_char(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
               ->  Hash  (cost=5379.71..5379.71 rows=16521 width=29)
                     ->  Index Scan using tbl_digoal_record_201211_createtime_idx on tbl_digoal_record_201211 t1  (cost=0.00..5379.71 rows
=16521 width=29)
                           Index Cond: (createtime >= '2012-11-28 00:00:00'::timestamp without time zone)
(10 rows)


加个immutable函数并建立相关索引后 : 

CREATE OR REPLACE FUNCTION ts_to_char_immutable(i_time timestamp without time zone, i_format text)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE
AS $function$
    select to_char($1, $2);
$function$;

create index idx_tbl_digoal_submit_log_201211_ts1 on tbl_digoal_submit_log_201211 (substr(ts_to_char_immutable(submittime, 'yyyymmddhh24mi'::text), 1, 11));


and substr(to_char(t2.submittime,'yyyymmddhh24mi'),1,11) = '20121128101'
改成
and substr(ts_to_char_immutable(t2.submittime,'yyyymmddhh24mi'),1,11) = '20121128101'


优化SQL后 : 

select 
t2.thirid as qudaotype,
count(*) as totalcount,
sum(
  case 
  when ( t1.digoaltime is null or (t1.digoaltime-t2.submittime) > interval '10 min' )
  then 1
  else 0
  end
) as notrespcount
from
tbl_digoal_record_201211 t1
join
tbl_digoal_submit_log_201211 t2
on 
(t1.digoalorderid=t2.digoalorderid
and substr(ts_to_char_immutable(t2.submittime,'yyyymmddhh24mi'),1,11) = '20121128101'
and t1.createtime >= '2012-11-28'
)
group by qudaotype
order by qudaotype;
 qudaotype | totalcount | notrespcount 
-----------+------------+--------------
 10        |          7 |            0
 11        |          1 |            0
 12        |         38 |            0
 13        |         25 |            0
 22        |         14 |            0
 26        |          5 |            0
 42        |          8 |            1
 45        |          3 |            0
 47        |         15 |            0
 48        |          1 |            0
(10 rows)
Time: 46.675 ms


执行时间目前可以接受.
执行计划 : 

digoalment=> explain select 
t2.thirid as qudaotype,
count(*) as totalcount,
sum(
  case 
  when ( t1.digoaltime is null or (t1.digoaltime-t2.submittime) > interval '10 min' )
  then 1
  else 0
  end
) as notrespcount
from
tbl_digoal_record_201211 t1
join
tbl_digoal_submit_log_201211 t2
on 
(t1.digoalorderid=t2.digoalorderid
and substr(ts_to_char_immutable(t2.submittime,'yyyymmddhh24mi'),1,11) = '20121128101'
and t1.createtime >= '2012-11-28'
)
group by qudaotype
order by qudaotype;
                                                                     QUERY PLAN                                                     
                 
------------------------------------------------------------------------------------------------------------------------------------
-----------------
 Sort  (cost=9554.57..9554.58 rows=1 width=19)
   Sort Key: t2.thirid
   ->  HashAggregate  (cost=9554.55..9554.56 rows=1 width=19)
         ->  Hash Join  (cost=5702.02..9553.52 rows=83 width=19)
               Hash Cond: ((t2.digoalorderid)::text = (t1.digoalorderid)::text)
               ->  Index Scan using idx_tbl_digoal_submit_log_201211_ts1 on tbl_digoal_submit_log_201211 t2  (cost=0.25..3673.70 rows=2963
 width=32)
                     Index Cond: (substr(ts_to_char_immutable(submittime, 'yyyymmddhh24mi'::text), 1, 11) = '20121128101'::text)
               ->  Hash  (cost=5382.14..5382.14 rows=16530 width=29)
                     ->  Index Scan using tbl_digoal_record_201211_createtime_idx on tbl_digoal_record_201211 t1  (cost=0.00..5382.14 rows
=16530 width=29)
                           Index Cond: (createtime >= '2012-11-28 00:00:00'::timestamp without time zone)
(10 rows)


