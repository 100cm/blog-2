PostgreSQL research

PostgreSQL convert text to decimal example

2012-12-10 10:26:49   查看原文>>

    这里要说的是把字符串转换成数字, 有些时候可能会用varchar来存储数值. 但是程序没有做保护的话, 可能就会存进非法数值了.
    例如'a100'
    要把这种text转换成数值的话, 可以使用规则表达式, 或者其他方法.

举例如下 : 

   1. to_number : 
可以把合法的或者不合法的text转换成数值.

  digoal=# select to_number('123.1','000.0');
 to_number 
-----------
     123.1
(1 row)
  digoal=# select to_number('abc123.1.a1','000000.000');
 to_number 
-----------
     123.1
(1 row)



  2. 规则表达式

digoal=# select substring('ab12.3fee4', '(([0-9])+(\.)?([0-9])*)');
 substring 
-----------
 12.3
(1 row)



  3. 外部函数
    可以自由发挥. 例如仅仅将数字抽取出来, 不管在哪个位置.
例如以下C程序是从字符串取出数字的一种方法 : 

[root@db-172-16-3-150 zzz]# cat a.c
#include <stdio.h>

int main (int argc, char * argv[]) {
  unsigned long i, n;
  n = 0;
  if (argc != 2)
    return 1;
  char *s = argv[1];
  for (i = 0; s[i] != '\0'; ++i)
    if (s[i] >= '0' && s[i] <= '9')
      n = 10 * n + (s[i] - '0');
  fprintf(stdout, "n: %lu\n", n);
  return 0;
}

[root@db-172-16-3-150 zzz]# gcc -O3 -Wall -Werror -Wextra -g ./a.c -o a

[root@db-172-16-3-150 zzz]# ./a abc123a1bfefw99132rjf32f39999
n: 1231991323239999


写成PostgreSQL 函数如下 : 
ocz@db-172-16-3-150-> cat atoi_pg.c

/*
  This is a tested external c function file.
*/

#include "postgres.h"
#include "fmgr.h"
#include "utils/builtins.h"

PG_MODULE_MAGIC;

PG_FUNCTION_INFO_V1(atoi_pg);

Datum atoi_pg(PG_FUNCTION_ARGS) {
  int i;
  int64 n = 0;
  char *s = text_to_cstring(PG_GETARG_TEXT_P(0));
  for (i = 0; s[i] != '\0'; ++i)
    if (s[i] >= '0' && s[i] <= '9')
      n = 10 * n + (s[i] - '0');
  PG_RETURN_INT64(n);
}


ocz@db-172-16-3-150-> gcc -O3 -Wall -Wextra -Werror -I /home/ocz/postgresql-9.2.1/src/include -g -fPIC -c ./atoi_pg.c -o atoi_pg.o
ocz@db-172-16-3-150-> gcc -O3 -Wall -Wextra -Werror -I /home/ocz/postgresql-9.2.1/src/include -g -shared atoi_pg.o -o libatoi_pg.so
ocz@db-172-16-3-150-> cp libatoi_pg.so /home/ocz/pgsql9.2.1/lib/
digoal=# create or replace function atoi_pg(i_text text) returns int8 as '$libdir/libatoi_pg.so', 'atoi_pg' language c strict;
CREATE FUNCTION
digoal=# select atoi_pg('afffe12.,..3...few4wf5.6ee');
 atoi_pg 
---------
  123456
(1 row)



【参考】
1. http://www.postgresql.org/docs/9.2/static/xfunc-c.html
2. src/include/fmgr.h
3. src/include/utils/builtins.h
4. src/include/postgres.h
5. http://www.postgresql.org/docs/9.2/static/functions-matching.html
