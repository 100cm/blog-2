PostgreSQL research

PostgreSQL 9.3 extend SQL ERROR REPORT ability

2013-03-11 17:25:33   查看原文>>

PostgreSQL 9.3扩展了SQL错误报告的功能, 可以在错误报告中输出更为详细的信息, 例如引起错误的对象包括schema_name, table_name, constraint_name等.

For some types of errors, the server reports the name of a database object (a table, table column, data type, or constraint) associated with the error; for example, the name of the unique constraint that caused a unique_violation error. Such names are supplied in separate fields of the error report message so that applications need not try to extract them from the possibly-localized human-readable text of the message. As of PostgreSQL 9.3, complete coverage for this feature exists only for errors in SQLSTATE class 23 (integrity constraint violation), but this is likely to be expanded in future.


目前支持错误报告扩展的是分类为23的错误代码, 见本文参考部分.
补丁信息如下 : 
http://git.postgresql.org/gitweb/?p=postgresql.git;a=commitdiff;h=991f3e5ab3f8196d18d5b313c81a5f744f3baaea

This patch addresses the problem that applications currently have to
extract object names from possibly-localized textual error messages,
if they want to know for example which index caused a UNIQUE_VIOLATION
failure.  It adds new error message fields to the wire protocol, which
can carry the name of a table, table column, data type, or constraint
associated with the error.  (Since the protocol spec has always instructed
clients to ignore unrecognized field types, this should not create any
compatibility problem.)

Support for providing these new fields has been added to just a limited set
of error reports (mainly, those in the "integrity constraint violation"
SQLSTATE class), but we will doubtless add them to more calls in future.

Pavel Stehule, reviewed and extensively revised by Peter Geoghegan, with
additional hacking by Tom Lane.


测试 : 
测试分类在23中的以及不在23中的错误 : 

pgdev@db-172-16-3-150-> psql
psql (9.3devel)
Type "help" for help.
digoal=# \c digoal digoal
You are now connected to database "digoal" as user "digoal".


-- 测试表

digoal=> create table test(id int primary key, info text);
CREATE TABLE
digoal=> \set VERBOSITY verbose
digoal=> insert into test values (1, 'digoal');
INSERT 0 1


-- 违反唯一约束, 属于23分类, 所以输出了扩展的错误信息. schema_name, table_name, constraint_name.

digoal=> insert into test values (1, 'digoal');
ERROR:  23505: duplicate key value violates unique constraint "test_pkey"
DETAIL:  Key (id)=(1) already exists.
SCHEMA NAME:  digoal
TABLE NAME:  test
CONSTRAINT NAME:  test_pkey
LOCATION:  _bt_check_unique, nbtinsert.c:398


-- 22分类的错误没有扩展信息

digoal=> select 1/0;
ERROR:  22012: division by zero
LOCATION:  int4div, int.c:719


-- 非空约束属于23分类, 有扩展信息.

digoal=> insert into test values (null, 'abc');
ERROR:  23502: null value in column "id" violates not-null constraint
DETAIL:  Failing row contains (null, abc).
SCHEMA NAME:  digoal
TABLE NAME:  test
COLUMN NAME:  id
LOCATION:  ExecConstraints, execMain.c:1652


-- copy格式错误, 属于22分类, 所以没有扩展信息.

digoal=> copy test from stdin
digoal-> ;
Enter data to be copied followed by a newline.
End with a backslash and a period on a line by itself.
>> 1    'abc'   'd'
>> \.
ERROR:  22P04: extra data after last expected column
CONTEXT:  COPY test, line 1: "1 'abc'   'd'"
LOCATION:  NextCopyFrom, copy.c:2716



未来还会增加其他扩展信息. 不局限于23分类.
在函数中估计也会加入扩展信息的trace 功能.

【参考】
1. http://www.postgresql.org/docs/devel/static/errcodes-appendix.html

Class 23 — Integrity Constraint Violation
23000   integrity_constraint_violation
23001   restrict_violation
23502   not_null_violation
23503   foreign_key_violation
23505   unique_violation
23514   check_violation
23P01   exclusion_violation


2. http://git.postgresql.org/gitweb/?p=postgresql.git;a=commitdiff;h=991f3e5ab3f8196d18d5b313c81a5f744f3baaea
