PostgreSQL research

PostgreSQL multi-column concate query condition performance tuning

2013-03-06 12:25:24   查看原文>>

某系统中的一个查询语句如下 : 

SELECT t1.id, t1.app_id, t1.app_ver, t1.cn_name, t1.app_show_ver, t1.package, 
  t1.digoal_size, t1.developer_id, t1.description, t1.create_time, t1.authentic, t1.app_class_id 
FROM tbl_app_digoal t1 
WHERE t1.app_id||':'||t1.app_ver in ('418:288','156885:9','45110:28','31447:28','210386:43','122981:46','124:78','415:234','65516:30','53142:3405',
  '31494:6','107873:11','532:16780560','116309:3240','282:92','47318:23','65515:154','175299:61','185800:153','72105:4330') 
and t1.deleted = 0;


注意这个条件 : 

 t1.app_id||':'||t1.app_ver in ('418:288','156885:9','45110:28','31447:28','210386:43','122981:46','124:78','415:234','65516:30','53142:3405',
  '31494:6','107873:11','532:16780560','116309:3240','282:92','47318:23','65515:154','175299:61','185800:153','72105:4330') 


没有办法走索引, 且deleted=0的选择性较差, 所以这个SQL走全表扫描.
执行计划和执行时间如下 : 

digoal=> \timing
Timing is on.
digoal=> explain analyze SELECT t1.id, t1.app_id, t1.app_ver, t1.cn_name, t1.app_show_ver, t1.package, 
digoal->   t1.digoal_size, t1.developer_id, t1.description, t1.create_time, t1.authentic, t1.app_class_id 
digoal-> FROM tbl_app_digoal t1 
digoal-> WHERE t1.app_id||':'||t1.app_ver in ('418:288','156885:9','45110:28','31447:28','210386:43','122981:46','124:78','415:234','65516:30','53142:3405',
digoal(>   '31494:6','107873:11','532:16780560','116309:3240','282:92','47318:23','65515:154','175299:61','185800:153','72105:4330') 
digoal-> and t1.deleted = 0;
                                                                                                                                    
               QUERY PLAN                                                                                                           
                                        
------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------
 Seq Scan on tbl_app_digoal t1  (cost=0.00..54528.19 rows=25699 width=625) (actual time=55.781..626.913 rows=20 loops=1)
   Filter: ((deleted = 0::numeric) AND ((((app_id)::text || ':'::text) || (app_ver)::text) = ANY ('{418:288,156885:9,45110:28,31447:
28,210386:43,122981:46,124:78,415:234,65516:30,53142:3405,31494:6,107873:11,532:16780560,116309:3240,282:92,47318:23,65515:154,17529
9:61,185800:153,72105:4330}'::text[])))
 Total runtime: 626.988 ms
(3 rows)
Time: 642.089 ms


表结构 : 

digoal=> \d tbl_app_digoal
                   Table "digoal.tbl_app_digoal"
      Column      |            Type             |       Modifiers        
------------------+-----------------------------+------------------------
 id               | numeric(19,0)               | not null
 app_id           | numeric(19,0)               | not null
 app_ver          | numeric(19,0)               | not null
-- 其他字段略
Indexes:
    "pk_app_digoal" PRIMARY KEY, btree (id)
    "idx_tbl_app_digoal_1" btree (id) WHERE deleted = 0::numeric AND on_off = 1::numeric AND promotion = 1::numeric, tablespace "tbs_an
droid_market_idx"
    "idx_tbl_app_digoal_package_app_ver" btree (package, app_ver), tablespace "tbs_digoal_idx"
    "tbl_app_digoal_app_id_index" btree (app_id), tablespace "tbs_digoal_idx"
Tablespace: "tbs_digoal_idx"



【优化方法一 : 】
将||连接符拆开, 使用多列的in来查询, 如下 : 

digoal=> explain analyze SELECT t1.id, t1.app_id, t1.app_ver, t1.cn_name, t1.app_show_ver, t1.package, 
digoal->   t1.digoal_size, t1.developer_id, t1.description, t1.create_time, t1.authentic, t1.app_class_id 
digoal-> FROM tbl_app_digoal t1 
digoal-> WHERE (t1.app_id, t1.app_ver) in ((418,288),(156885,9),(45110,28),(31447,28),(210386,43),(122981,46),(124,78),(415,234),(65516,30),(53142,3405),
digoal(>   (31494,6),(107873,11),(532,16780560),(116309,3240),(282,92),(47318,23),(65515,154),(175299,61),(185800,153),(72105,4330)) 
digoal-> and t1.deleted = 0;
                                                                                                                                    
                                                                                                                                    
                                                                                                                                    
                                                                                                                                    
                                                                                  QUERY PLAN                                        
                                                                                                                                    
                                                                                                                                    
                                                                                                                                    
                                                                                                                                    
                                          
------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------
 Bitmap Heap Scan on tbl_app_digoal t1  (cost=26.23..157.51 rows=1 width=625) (actual time=0.340..1.347 rows=20 loops=1)
   Recheck Cond: ((app_id = 418::numeric) OR (app_id = 156885::numeric) OR (app_id = 45110::numeric) OR (app_id = 31447::numeric) OR
 (app_id = 210386::numeric) OR (app_id = 122981::numeric) OR (app_id = 124::numeric) OR (app_id = 415::numeric) OR (app_id = 65516::
numeric) OR (app_id = 53142::numeric) OR (app_id = 31494::numeric) OR (app_id = 107873::numeric) OR (app_id = 532::numeric) OR (app_
id = 116309::numeric) OR (app_id = 282::numeric) OR (app_id = 47318::numeric) OR (app_id = 65515::numeric) OR (app_id = 175299::nume
ric) OR (app_id = 185800::numeric) OR (app_id = 72105::numeric))
   Filter: ((deleted = 0::numeric) AND (((app_id = 418::numeric) AND (app_ver = 288::numeric)) OR ((app_id = 156885::numeric) AND (a
pp_ver = 9::numeric)) OR ((app_id = 45110::numeric) AND (app_ver = 28::numeric)) OR ((app_id = 31447::numeric) AND (app_ver = 28::nu
meric)) OR ((app_id = 210386::numeric) AND (app_ver = 43::numeric)) OR ((app_id = 122981::numeric) AND (app_ver = 46::numeric)) OR (
(app_id = 124::numeric) AND (app_ver = 78::numeric)) OR ((app_id = 415::numeric) AND (app_ver = 234::numeric)) OR ((app_id = 65516::
numeric) AND (app_ver = 30::numeric)) OR ((app_id = 53142::numeric) AND (app_ver = 3405::numeric)) OR ((app_id = 31494::numeric) AND
 (app_ver = 6::numeric)) OR ((app_id = 107873::numeric) AND (app_ver = 11::numeric)) OR ((app_id = 532::numeric) AND (app_ver = 1678
0560::numeric)) OR ((app_id = 116309::numeric) AND (app_ver = 3240::numeric)) OR ((app_id = 282::numeric) AND (app_ver = 92::numeric
)) OR ((app_id = 47318::numeric) AND (app_ver = 23::numeric)) OR ((app_id = 65515::numeric) AND (app_ver = 154::numeric)) OR ((app_i
d = 175299::numeric) AND (app_ver = 61::numeric)) OR ((app_id = 185800::numeric) AND (app_ver = 153::numeric)) OR ((app_id = 72105::
numeric) AND (app_ver = 4330::numeric))))
   ->  BitmapOr  (cost=26.23..26.23 rows=118 width=0) (actual time=0.280..0.280 rows=0 loops=1)
         ->  Bitmap Index Scan on tbl_app_digoal_app_id_index  (cost=0.00..1.29 rows=2 width=0) (actual time=0.044..0.044 rows=27 loops
=1)
               Index Cond: (app_id = 418::numeric)
         ->  Bitmap Index Scan on tbl_app_digoal_app_id_index  (cost=0.00..1.29 rows=2 width=0) (actual time=0.013..0.013 rows=4 loops=
1)
               Index Cond: (app_id = 156885::numeric)
         ->  Bitmap Index Scan on tbl_app_digoal_app_id_index  (cost=0.00..1.29 rows=2 width=0) (actual time=0.020..0.020 rows=8 loops=
1)
               Index Cond: (app_id = 45110::numeric)
         ->  Bitmap Index Scan on tbl_app_digoal_app_id_index  (cost=0.00..1.29 rows=2 width=0) (actual time=0.012..0.012 rows=10 loops
=1)
               Index Cond: (app_id = 31447::numeric)
         ->  Bitmap Index Scan on tbl_app_digoal_app_id_index  (cost=0.00..1.29 rows=2 width=0) (actual time=0.012..0.012 rows=1 loops=
1)
               Index Cond: (app_id = 210386::numeric)
         ->  Bitmap Index Scan on tbl_app_digoal_app_id_index  (cost=0.00..1.29 rows=2 width=0) (actual time=0.017..0.017 rows=14 loops
=1)
               Index Cond: (app_id = 122981::numeric)
         ->  Bitmap Index Scan on tbl_app_digoal_app_id_index  (cost=0.00..1.29 rows=2 width=0) (actual time=0.011..0.011 rows=8 loops=
1)
               Index Cond: (app_id = 124::numeric)
         ->  Bitmap Index Scan on tbl_app_digoal_app_id_index  (cost=0.00..1.55 rows=37 width=0) (actual time=0.007..0.007 rows=18 loop
s=1)
               Index Cond: (app_id = 415::numeric)
         ->  Bitmap Index Scan on tbl_app_digoal_app_id_index  (cost=0.00..1.29 rows=2 width=0) (actual time=0.014..0.014 rows=14 loops
=1)
               Index Cond: (app_id = 65516::numeric)
         ->  Bitmap Index Scan on tbl_app_digoal_app_id_index  (cost=0.00..1.29 rows=2 width=0) (actual time=0.012..0.012 rows=9 loops=
1)
               Index Cond: (app_id = 53142::numeric)
         ->  Bitmap Index Scan on tbl_app_digoal_app_id_index  (cost=0.00..1.29 rows=2 width=0) (actual time=0.011..0.011 rows=5 loops=
1)
               Index Cond: (app_id = 31494::numeric)
         ->  Bitmap Index Scan on tbl_app_digoal_app_id_index  (cost=0.00..1.29 rows=2 width=0) (actual time=0.007..0.007 rows=7 loops=
1)
               Index Cond: (app_id = 107873::numeric)
         ->  Bitmap Index Scan on tbl_app_digoal_app_id_index  (cost=0.00..1.29 rows=2 width=0) (actual time=0.012..0.012 rows=16 loops
=1)
               Index Cond: (app_id = 532::numeric)
         ->  Bitmap Index Scan on tbl_app_digoal_app_id_index  (cost=0.00..1.29 rows=2 width=0) (actual time=0.011..0.011 rows=11 loops
=1)
               Index Cond: (app_id = 116309::numeric)
         ->  Bitmap Index Scan on tbl_app_digoal_app_id_index  (cost=0.00..1.55 rows=37 width=0) (actual time=0.014..0.014 rows=16 loop
s=1)
               Index Cond: (app_id = 282::numeric)
         ->  Bitmap Index Scan on tbl_app_digoal_app_id_index  (cost=0.00..1.29 rows=2 width=0) (actual time=0.014..0.014 rows=13 loops
=1)
               Index Cond: (app_id = 47318::numeric)
         ->  Bitmap Index Scan on tbl_app_digoal_app_id_index  (cost=0.00..1.29 rows=2 width=0) (actual time=0.006..0.006 rows=11 loops
=1)
               Index Cond: (app_id = 65515::numeric)
         ->  Bitmap Index Scan on tbl_app_digoal_app_id_index  (cost=0.00..1.29 rows=2 width=0) (actual time=0.011..0.011 rows=9 loops=
1)
               Index Cond: (app_id = 175299::numeric)
         ->  Bitmap Index Scan on tbl_app_digoal_app_id_index  (cost=0.00..1.29 rows=2 width=0) (actual time=0.013..0.013 rows=4 loops=
1)
               Index Cond: (app_id = 185800::numeric)
         ->  Bitmap Index Scan on tbl_app_digoal_app_id_index  (cost=0.00..1.29 rows=2 width=0) (actual time=0.017..0.017 rows=30 loops
=1)
               Index Cond: (app_id = 72105::numeric)
 Total runtime: 1.524 ms
(45 rows)
Time: 3.356 ms


优化后性能明显.
优化前后的HASH结果值一致,包括出现null的情况 : 

digoal=> select 1 where (1,null) in ((1,null));
 ?column? 
----------
(0 rows)
digoal=> select 1||null;
 ?column? 
----------
 
(1 row)
digoal=> select 1 where (null) in (null);
 ?column? 
----------
(0 rows)


HASH结果一致 : 
优化后的SQL HASH sum : 

digoal=> SELECT sum(hashtext(t1.*::text))
digoal-> FROM tbl_app_digoal t1 
digoal-> WHERE (t1.app_id, t1.app_ver) in ((418,288),(156885,9),(45110,28),(31447,28),(210386,43),(122981,46),(124,78),(415,234),(65516,30),(53142,3405),
digoal(>   (31494,6),(107873,11),(532,16780560),(116309,3240),(282,92),(47318,23),(65515,154),(175299,61),(185800,153),(72105,4330)) 
digoal-> and t1.deleted = 0;
     sum     
-------------
 -1956567408
(1 row)
Time: 8.587 ms


优化前的SQL HASH sum : 

digoal=> SELECT sum(hashtext(t1.*::text)) 
digoal-> FROM tbl_app_digoal t1 
digoal-> WHERE t1.app_id||':'||t1.app_ver in ('418:288','156885:9','45110:28','31447:28','210386:43','122981:46','124:78','415:234','65516:30','53142:3405',
digoal(>   '31494:6','107873:11','532:16780560','116309:3240','282:92','47318:23','65515:154','175299:61','185800:153','72105:4330') 
digoal-> and t1.deleted = 0;
     sum     
-------------
 -1956567408
(1 row)
Time: 583.360 ms



【优化方法二 : 】
使用函数索引, 把连接符改成函数. 注意函数必须是immutable的. 
原因请参考 : 
http://blog.163.com/digoal@126/blog/static/163877040201211241434248/

digoal=> create index idx_app_digoal_3 on tbl_app_digoal(concat(app_id,':',app_ver)) tablespace tbs_digoal_idx where deleted=0;
ERROR:  functions in index expression must be marked IMMUTABLE


新建连接函数 : 

digoal=> create function im_concate(numeric, numeric) returns text as $$
  SELECT $1||':'||$2;
$$ language sql strict immutable;
CREATE FUNCTION


新建索引 : 

digoal=> create index idx_app_digoal_4 on tbl_app_digoal (im_concate(app_id,app_ver)) tablespace tbs_digoal_idx where deleted=0;
CREATE INDEX
-- 执行计划及查询时间
digoal=> explain analyze SELECT t1.id, t1.app_id, t1.app_ver, t1.cn_name, t1.app_show_ver, t1.package, 
  t1.digoal_size, t1.developer_id, t1.description, t1.create_time, t1.authentic, t1.app_class_id
FROM tbl_app_digoal t1 
WHERE im_concate(t1.app_id,t1.app_ver) in ('418:288','156885:9','45110:28','31447:28','210386:43','122981:46','124:78','415:234','65516:30','53142:3405',
  '31494:6','107873:11','532:16780560','116309:3240','282:92','47318:23','65515:154','175299:61','185800:153','72105:4330') 
and t1.deleted = 0;
                                                                                                                                    
      QUERY PLAN                                                                                                                    
                       
------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------
-----------------------
 Bitmap Heap Scan on tbl_app_digoal t1  (cost=306.47..27176.14 rows=25738 width=625) (actual time=0.135..0.179 rows=20 loops=1)
   Recheck Cond: ((im_concate(app_id, app_ver) = ANY ('{418:288,156885:9,45110:28,31447:28,210386:43,122981:46,124:78,415:234,65516:
30,53142:3405,31494:6,107873:11,532:16780560,116309:3240,282:92,47318:23,65515:154,175299:61,185800:153,72105:4330}'::text[])) AND (
deleted = 0::numeric))
   ->  Bitmap Index Scan on idx_app_digoal_4  (cost=0.00..300.03 rows=25738 width=0) (actual time=0.126..0.126 rows=20 loops=1)
         Index Cond: (im_concate(app_id, app_ver) = ANY ('{418:288,156885:9,45110:28,31447:28,210386:43,122981:46,124:78,415:234,655
16:30,53142:3405,31494:6,107873:11,532:16780560,116309:3240,282:92,47318:23,65515:154,175299:61,185800:153,72105:4330}'::text[]))
 Total runtime: 0.211 ms
(5 rows)


hash sum : 

SELECT sum(hashtext(t1.*::text)) 
FROM tbl_app_digoal t1 
WHERE im_concate(t1.app_id,t1.app_ver) in ('418:288','156885:9','45110:28','31447:28','210386:43','122981:46','124:78','415:234','65516:30','53142:3405',
   '31494:6','107873:11','532:16780560','116309:3240','282:92','47318:23','65515:154','175299:61','185800:153','72105:4330') 
 and t1.deleted = 0;
     sum     
-------------
 -1956567408
(1 row)
Time: 583.360 ms


优化方法三 : 
如果不想自建函数, 那么使用textcat 也是可以的, textcat是immutable的  : 

digoal=> select proname,provolatile from pg_proc where proname ~ 'cat$';
     proname     | provolatile 
-----------------+-------------
 textcat         | i
 array_cat       | i
 bitcat          | i
 concat          | s
 textanycat      | v
 anytextcat      | v
 byteacat        | i
 tsvector_concat | i
(8 rows)


新建索引 : 

digoal=> create index idx_app_digoal_5 on tbl_app_digoal(textcat(app_id::text,textcat(':',app_ver::text))) tablespace tbs_digoal_idx where deleted=0;
CREATE INDEX


执行计划及时间 : 

digoal=> explain analyze SELECT t1.id, t1.app_id, t1.app_ver, t1.cn_name, t1.app_show_ver, t1.package, 
  t1.digoal_size, t1.developer_id, t1.description, t1.create_time, t1.authentic, t1.app_class_id
FROM tbl_app_digoal t1 
WHERE textcat(app_id::text,textcat(':',app_ver::text)) in ('418:288','156885:9','45110:28','31447:28','210386:43','122981:46','124:78','415:234','65516:30','53142:3405',
  '31494:6','107873:11','532:16780560','116309:3240','282:92','47318:23','65515:154','175299:61','185800:153','72105:4330') 
and t1.deleted = 0;
                                                                                                                                    
                       QUERY PLAN                                                                                                   
                                                        
------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------
 Bitmap Heap Scan on tbl_app_digoal t1  (cost=306.23..21128.58 rows=25740 width=625) (actual time=0.170..0.222 rows=20 loops=1)
   Recheck Cond: ((textcat((app_id)::text, textcat(':'::text, (app_ver)::text)) = ANY ('{418:288,156885:9,45110:28,31447:28,210386:4
3,122981:46,124:78,415:234,65516:30,53142:3405,31494:6,107873:11,532:16780560,116309:3240,282:92,47318:23,65515:154,175299:61,185800
:153,72105:4330}'::text[])) AND (deleted = 0::numeric))
   ->  Bitmap Index Scan on idx_app_digoal_5  (cost=0.00..299.80 rows=25740 width=0) (actual time=0.163..0.163 rows=20 loops=1)
         Index Cond: (textcat((app_id)::text, textcat(':'::text, (app_ver)::text)) = ANY ('{418:288,156885:9,45110:28,31447:28,21038
6:43,122981:46,124:78,415:234,65516:30,53142:3405,31494:6,107873:11,532:16780560,116309:3240,282:92,47318:23,65515:154,175299:61,185
800:153,72105:4330}'::text[]))
 Total runtime: 0.262 ms
(5 rows)


HASH一致 : 

digoal=> SELECT sum(hashtext(t1.*::text))
FROM tbl_app_digoal t1 
WHERE textcat(app_id::text,textcat(':',app_ver::text)) in ('418:288','156885:9','45110:28','31447:28','210386:43','122981:46','124:78','415:234','65516:30','53142:3405',                                                                                       
  '31494:6','107873:11','532:16780560','116309:3240','282:92','47318:23','65515:154','175299:61','185800:153','72105:4330') 
and t1.deleted = 0;
     sum     
-------------
 -1956567408
(1 row)



【参考】
1. http://blog.163.com/digoal@126/blog/static/1638770402012111894618801/
2. http://blog.163.com/digoal@126/blog/static/163877040201211241434248/
