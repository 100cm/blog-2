PostgreSQL research

PostgreSQL DBLINK module's SQL build NOTEs about primary_key_attnums parameter

2013-03-12 23:01:20   查看原文>>

最近在写一个通用的数据表远程复制的触发器函数, 有兴趣的朋友可以阅读以下文章.
http://blog.163.com/digoal@126/blog/static/163877040201321125220134/

在建立复制SQL语句的地方用到了dblink模块的三个函数 : 

1. dblink_build_sql_insert --  builds an INSERT statement using a local tuple, replacing the primary key field values with alternative supplied values
2. dblink_build_sql_delete -- builds a DELETE statement using supplied values for primary key field values
3. dblink_build_sql_update -- builds an UPDATE statement using a local tuple, replacing the primary key field values with alternative supplied values


这三个函数的primary_key_attnums参数在PostgreSQL9.0以及以上版本表示的是逻辑位置, 而在8.x以及以下版本表示的是pg_attribute.attnum.
两者存在较大差别, 在使用时需要注意.

As of PostgreSQL 9.0, the attribute numbers in primary_key_attnums are interpreted as logical column numbers, corresponding to the column's position in SELECT * FROM relname. Previous versions interpreted the numbers as physical column positions. There is a difference if any column(s) to the left of the indicated column have been dropped during the lifetime of the table.


以dblink_build_sql_insert为例, 看看9.x和8.x的版本差别. 
语法如下 : 

dblink_build_sql_insert(text relname,
                        int2vector primary_key_attnums,
                        integer num_primary_key_atts,
                        text[] src_pk_att_vals_array,
                        text[] tgt_pk_att_vals_array) returns text


PostgreSQL 9.2与PostgreSQL 8.4 的dblink_build_sql_insert使用差别如下 : 
PostgreSQL 9.2 : 

ocz@db-172-16-3-150-> psql
psql (9.2.1)
Type "help" for help.
-- 创建模块
digoal=# create extension dblink;
CREATE EXTENSION
-- 创建测试表, PK建立在c3,c5,c6
digoal=# create table build_test(c1 int, c2 text, c3 int2, c4 name, c5 text, c6 timestamp, primary key(c3,c5,c6));
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "build_test_pkey" for table "build_test"
CREATE TABLE
-- 插入测试数据
digoal=# insert into build_test values (1,'test',2,'build','digoal',now());
INSERT 0 1
-- 当前c3,c5,c6的逻辑位置是3,5,6
digoal=# select * from build_test ;
 c1 |  c2  | c3 |  c4   |   c5   |             c6             
----+------+----+-------+--------+----------------------------
  1 | test |  2 | build | digoal | 2013-03-12 21:48:39.799831
(1 row)
-- pg_attribute中的位置
digoal=# select attname,attnum from pg_attribute where attrelid='build_test'::regclass;
 attname  | attnum 
----------+--------
 tableoid |     -7
 cmax     |     -6
 xmax     |     -5
 cmin     |     -4
 xmin     |     -3
 ctid     |     -1
 c1       |      1
 c2       |      2
 c3       |      3
 c4       |      4
 c5       |      5
 c6       |      6
(12 rows)
-- 建立SQL语句. 使用的位置信息为3,5,6
digoal=# select * from dblink_build_sql_insert('build_test', '3 5 6'::int2vector, 3, array['2', 'digoal', '2013-03-12 21:48:39.799831'], array['2', 'digoal', '2013-03-12 21:48:39.799831']);
                                            dblink_build_sql_insert                                             
----------------------------------------------------------------------------------------------------------------
 INSERT INTO build_test(c1,c2,c3,c4,c5,c6) VALUES('1','test','2','build','digoal','2013-03-12 21:48:39.799831')
(1 row)
-- 删除c1列, 主键的逻辑位置将变成2,4,5
digoal=# alter table build_test drop column c1;
ALTER TABLE
digoal=# select * from build_test ;
  c2  | c3 |  c4   |   c5   |             c6             
------+----+-------+--------+----------------------------
 test |  2 | build | digoal | 2013-03-12 21:48:39.799831
(1 row)
-- 使用3,5,6将导致数据错乱或报错.
digoal=# select * from dblink_build_sql_insert('build_test', '3 5 6'::int2vector, 3, array['2', 'digoal', '2013-03-12 21:48:39.799831'], array['2', 'digoal', '2013-03-12 21:48:39.799831']);
ERROR:  invalid attribute number 6
-- 将参数改为逻辑位置, '2 4 5'::int2vector; 使用正常
digoal=# select * from dblink_build_sql_insert('build_test', '2 4 5'::int2vector, 3, array['2', 'digoal', '2013-03-12 21:48:39.799831'], array['2', 'digoal', '2013-03-12 21:48:39.799831']);
                                         dblink_build_sql_insert                                         
---------------------------------------------------------------------------------------------------------
 INSERT INTO build_test(c2,c3,c4,c5,c6) VALUES('test','2','build','digoal','2013-03-12 21:48:39.799831')
(1 row)



PostgreSQL 8.4 : 

-- 创建模块
pg84@db-172-16-3-150-> psql digoal postgres -f $PGHOME/share/contrib/dblink.sql 
pg84@db-172-16-3-150-> psql 
psql (8.4.16)
Type "help" for help.
digoal=# \c digoal digoal
psql (8.4.16)
You are now connected to database "digoal" as user "digoal".
-- 创建测试表, 主键c3,c5,c6. 是目前的物理位置, 也是逻辑位置.
digoal=> create table build_test(c1 int, c2 text, c3 int2, c4 name, c5 text, c6 timestamp, primary key(c3,c5,c6));
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "build_test_pkey" for table "build_test"
CREATE TABLE
-- 插入测试数据
digoal=>  insert into build_test values (1,'test',2,'build','digoal',now());
INSERT 0 1
digoal=> select * from build_test ;
 c1 |  c2  | c3 |  c4   |   c5   |             c6             
----+------+----+-------+--------+----------------------------
  1 | test |  2 | build | digoal | 2013-03-12 22:38:14.358793
(1 row)
-- pg_attribute中显示了物理位置.
-- attisdropped标记列是否被删除. 所以会造成物理位置没有变化但是逻辑位置变化的情况, PostgreSQL 9.x DBLINK build SQL的函数使用的是逻辑位置.
digoal=> select attname,attnum from pg_attribute where attrelid='build_test'::regclass;
 attname  | attnum 
----------+--------
 tableoid |     -7
 cmax     |     -6
 xmax     |     -5
 cmin     |     -4
 xmin     |     -3
 ctid     |     -1
 c1       |      1
 c2       |      2
 c3       |      3
 c4       |      4
 c5       |      5
 c6       |      6
(12 rows)
-- 使用物理位置pg_attribute.attnum, 创建SQL
digoal=> select * from dblink_build_sql_insert('build_test', '3 5 6'::int2vector, 3, array['2', 'digoal', '2013-03-12 22:38:14.358793'], array['2', 'digoal', '2013-03-12 22:38:14.358793']);
                                            dblink_build_sql_insert                                             
----------------------------------------------------------------------------------------------------------------
 INSERT INTO build_test(c1,c2,c3,c4,c5,c6) VALUES('1','test','2','build','digoal','2013-03-12 22:38:14.358793')
(1 row)
-- 删除c1列, 逻辑位置变化, 但是物理位置不变
digoal=> alter table build_test drop column c1;
ALTER TABLE
-- 8.4继续使用物理位置创建SQL没有问题.
digoal=> select * from dblink_build_sql_insert('build_test', '3 5 6'::int2vector, 3, array['2', 'digoal', '2013-03-12 22:38:14.358793'], array['2', 'digoal', '2013-03-12 22:38:14.358793']);
                                         dblink_build_sql_insert                                         
---------------------------------------------------------------------------------------------------------
 INSERT INTO build_test(c2,c3,c4,c5,c6) VALUES('test','2','build','digoal','2013-03-12 22:38:14.358793')
(1 row)




【参考】
1. http://blog.163.com/digoal@126/blog/static/163877040201321125220134/
2. http://blog.163.com/digoal@126/blog/static/1638770402013283547959/
3. http://blog.163.com/digoal@126/blog/static/1638770402013211102130526/
4. http://blog.163.com/digoal@126/blog/static/1638770402012731944439/
5. http://blog.163.com/digoal@126/blog/static/1638770402012731203716/
6. http://www.postgresql.org/docs/9.2/static/contrib-dblink-build-sql-insert.html
