PostgreSQL research

spilt table use logical delete mark

2012-03-26 8:16:29   查看原文>>

有写业务会对表的记录做逻辑删除的标记, 大多数的查询是查没有标记为逻辑删除的记录.
这种做法是把删除和未删除的记录都放在一个表里面, 有两个弊端.
1. 如果表中有某些字段是带有唯一约束的, 那么逻辑删除则只能删一次(标记列以及带有唯一约束的列作为联合唯一), 多次就违反唯一约束了.
2. 记录都放在一个表里面会使得查询性能和更新性能下降.
可以把表按照业务逻辑拆分成未删除和删除的两个表来解决以上问题.
例如 : 
-- 建立测试表的父表

create table a_parent
(name text not null unique,
other_cols text
);


-- 建立未删除表

create table a_undeleted (like a_parent including all) inherits (a_parent);


-- 建立已删除表

create table a_deleted (like a_parent including all) inherits (a_parent);


-- 已删除表不需要name的唯一约束, 因为可能需要多次逻辑删除一条记录.

alter table a_deleted drop constraint a_deleted_name_key;


-- 插入测试数据

insert into a_undeleted select 'digoal'||generate_series(1,10000),'test';


-- 删除测试

digoal=> with t1 as (delete from a_undeleted where name = 'digoal1' returning name,other_cols)
digoal-> insert into a_deleted (name,other_cols) select name,other_cols from t1;
INSERT 0 1
digoal=> select * from a_deleted where name='digoal1';
  name   | other_cols 
---------+------------
 digoal1 | test
(1 row)

digoal=> select * from a_undeleted where name='digoal1';
 name | other_cols 
------+------------
(0 rows)



