PostgreSQL research

Makefile usage

2012-08-07 15:38:49   查看原文>>

如果你的程序是很多个c文件组成的, 某天你对其中的一个c文件做了更改。　其他的都不变。
如果要重新编译的话, 所有的c文件都重新编译显然是很浪费时间的.
gcc编译由4步骤组成, 可以看我前面的BLOG。
其中link前面的一个步骤是产生对象文件如a.c产生a.o的对象文件(gcc -c) .
link是把这些O文件组装成一个可执行文件的过程(gcc -o) .

也就是说如果要提高编译速度, 可以保存这些o文件即对象文件, 只编译变更过的c文件, 然后再link成可执行文件.
一般可以通过文件的时间改变来判断是否需要重新编译。例如 : 
通过c文件和o文件以及bin文件的时间比较哪个文件是变更过的.
Makefile usage - 德哥@Digoal - The Heart,The World.
 
Makefile usage - 德哥@Digoal - The Heart,The World.
 
那么只需要对变更的c文件重新生成o文件然后link. 或者拿最新的o文件link即可.
如果手工来判断, 实在是很繁琐.

还好这个可以交给make来搞定.
make 需要用到的是Makefile 或者 makefile.
makefile的语法 : 
1. target file冒号(一般是每个c文件都写一个targetfile , o文件. 最后是link后的bin文件)

2. depend file(如果target是o文件, 这部分包含了一个c文件和所有的h文件.(<>中的h文件不用写出);  如果是bin文件, 写出所有的o文件即可)
3. rule (如果targetfile是o文件, 这里写gcc -c c文件即可.  如果targetfile是bin文件, 那么gcc 所有的o文件 -o bin文件名)

文件内容和格式如图 : 
Makefile usage - 德哥@Digoal - The Heart,The World.
 
接下来是一个范例 : 

代码中包含1个H文件和2个C文件.
[root@db-172-16-3-150 zzz]# ll
total 16
-rw-r--r-- 1 root root 295 Aug  7 14:44 a.c
-rw-r--r-- 1 root root 107 Aug  7 14:33 encrypt.c
-rw-r--r-- 1 root root  26 Aug  7 14:17 encrypt.h
-rw-r--r-- 1 root root 210 Aug  7 15:21 makefile
encrypt.c的内容.
[root@db-172-16-3-150 zzz]# cat encrypt.c
//#include "encrypt.h"

void encrypt(char *msg) {
  while (* msg) {
    *msg = *msg ^ 31;
    msg++;
  }
}
encrypt.h的内容.
[root@db-172-16-3-150 zzz]# cat encrypt.h
void encrypt(char * msg);
a.c文件的内容.
[root@db-172-16-3-150 zzz]# cat a.c
#include <stdio.h>
#include <encrypt.h>

int main() {
  char msg[80];
  while(fgets(msg,80,stdin)) {
    printf("original msg:%s\n", msg);
    // encode
    encrypt(msg);
    printf("encoded msg:%s\n", msg);
    // decode
    encrypt(msg);
    printf("decoded msg:%s\n", msg);
  }
  return 0;
}
makefile的内容.
[root@db-172-16-3-150 zzz]# cat makefile 
encrypt.o: encrypt.c
        gcc -O3 -Wall -Wextra -Werror -g -c encrypt.c
a.o: a.c encrypt.h
        gcc -O3 -Wall -Wextra -Werror -I/root/zzz -g -c a.c
a: a.o encrypt.o
        gcc -O3 -Wall -Wextra -Werror -g a.o encrypt.o -o a

使用make 生成a文件的命令.
[root@db-172-16-3-150 zzz]# make a
gcc -O3 -Wall -Wextra -Werror -I/root/zzz -g -c a.c
gcc -O3 -Wall -Wextra -Werror -g -c encrypt.c
gcc -O3 -Wall -Wextra -Werror -g a.o encrypt.o -o a

生成a文件的过程中产生了一堆o文件.
[root@db-172-16-3-150 zzz]# ll
total 40
-rwxr-xr-x 1 root root 10349 Aug  7 15:33 a
-rw-r--r-- 1 root root   295 Aug  7 14:44 a.c
-rw-r--r-- 1 root root  6568 Aug  7 15:33 a.o
-rw-r--r-- 1 root root   107 Aug  7 14:33 encrypt.c
-rw-r--r-- 1 root root    26 Aug  7 14:17 encrypt.h
-rw-r--r-- 1 root root  3144 Aug  7 15:33 encrypt.o
-rw-r--r-- 1 root root   210 Aug  7 15:21 makefile



修改encrypt.c : 
删除注释行. 再次make a. 我们看到encrypt.c 重新生成了o文件, 并且重新link了bin文件.

[root@db-172-16-3-150 zzz]# make a
gcc -O3 -Wall -Wextra -Werror -g -c encrypt.c
gcc -O3 -Wall -Wextra -Werror -g a.o encrypt.o -o a


注意rule部分必须是tab开头的. 否则会没有用.

还可以在makefile中使用环境变量. 例如 : 
Makefile usage - 德哥@Digoal - The Heart,The World.
 
