PostgreSQL research

xlogdump for PostgreSQL 9.2 9.1 9.0 8.4 8.3

2013-05-17 13:13:31   查看原文>>

PostgreSQL 9.3 新增了pg_xlogdump的模块, 可以dump xlog中的内容.
如果你的系统是PostgreSQL 9.2以及以下的版本, 那么可以考虑使用xlogdump这个开源软件.
它支持9.x, 8.3, 8.4, 同样可以达到dump xlog的目的.

下载地址 : 
https://github.com/snaga/xlogdump

以PostgreSQL 9.2.4 为例安装xlogdump.

unzip xlogdump-master.zip
cd xlogdump-master
[root@db-172-16-3-33 ~]# export PATH=/opt/pgsql9.2.4/bin:$PATH
[root@db-172-16-3-33 ~]# which pg_config
/opt/pgsql9.2.4/bin/pg_config
gmake USE_PGXS=1
gmake USE_PGXS=1 install


安装输出 : 

[root@db-172-16-3-33 xlogdump-master]# gmake USE_PGXS=1
gcc -O2 -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv -g -DVERSION_STR=\""0.6devel"\" -I. -I/opt/pgsql9.2.4/include -DDATADIR=\"/opt/pgsql9.2.4/share\" -I. -I. -I/opt/pgsql9.2.4/include/server -I/opt/pgsql9.2.4/include/internal -D_GNU_SOURCE -I/usr/include/libxml2   -c -o strlcpy.o strlcpy.c
gcc -O2 -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv -g -DVERSION_STR=\""0.6devel"\" -I. -I/opt/pgsql9.2.4/include -DDATADIR=\"/opt/pgsql9.2.4/share\" -I. -I. -I/opt/pgsql9.2.4/include/server -I/opt/pgsql9.2.4/include/internal -D_GNU_SOURCE -I/usr/include/libxml2   -c -o xlogdump.o xlogdump.c
gcc -O2 -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv -g -DVERSION_STR=\""0.6devel"\" -I. -I/opt/pgsql9.2.4/include -DDATADIR=\"/opt/pgsql9.2.4/share\" -I. -I. -I/opt/pgsql9.2.4/include/server -I/opt/pgsql9.2.4/include/internal -D_GNU_SOURCE -I/usr/include/libxml2   -c -o xlogdump_rmgr.o xlogdump_rmgr.c
gcc -O2 -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv -g -DVERSION_STR=\""0.6devel"\" -I. -I/opt/pgsql9.2.4/include -DDATADIR=\"/opt/pgsql9.2.4/share\" -I. -I. -I/opt/pgsql9.2.4/include/server -I/opt/pgsql9.2.4/include/internal -D_GNU_SOURCE -I/usr/include/libxml2   -c -o xlogdump_statement.o xlogdump_statement.c
cp oid2name-`echo 9.2.4 | sed -e 's/^\([0-9]*\)\.\([0-9]*\).*/\1\2/g'`.txt oid2name.txt
gcc -O2 -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv -g -DVERSION_STR=\""0.6devel"\" -I. -I/opt/pgsql9.2.4/include -DDATADIR=\"/opt/pgsql9.2.4/share\" -I. -I. -I/opt/pgsql9.2.4/include/server -I/opt/pgsql9.2.4/include/internal -D_GNU_SOURCE -I/usr/include/libxml2   -c -o xlogdump_oid2name.o xlogdump_oid2name.c
gcc -O2 -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv -g strlcpy.o xlogdump.o xlogdump_rmgr.o xlogdump_statement.o xlogdump_oid2name.o -L/opt/pgsql9.2.4/lib -lpgport -L/opt/pgsql9.2.4/lib -lpq -L/opt/pgsql9.2.4/lib  -Wl,-rpath,'/opt/pgsql9.2.4/lib',--enable-new-dtags  -lpgport -lxslt -lxml2 -lpam -lssl -lcrypto -lz -lreadline -ltermcap -lcrypt -ldl -lm  -o xlogdump
[root@db-172-16-3-33 xlogdump-master]# gmake USE_PGXS=1 install
/bin/mkdir -p '/opt/pgsql9.2.4/share/contrib'
/bin/mkdir -p '/opt/pgsql9.2.4/share/doc/contrib'
/bin/mkdir -p '/opt/pgsql9.2.4/bin'
/bin/sh /opt/pgsql9.2.4/lib/pgxs/src/makefiles/../../config/install-sh -c -m 644 ./oid2name.txt  '/opt/pgsql9.2.4/share/contrib/'
/bin/sh /opt/pgsql9.2.4/lib/pgxs/src/makefiles/../../config/install-sh -c -m 644 ./README.xlogdump '/opt/pgsql9.2.4/share/doc/contrib/'
/bin/sh /opt/pgsql9.2.4/lib/pgxs/src/makefiles/../../config/install-sh -c  xlogdump '/opt/pgsql9.2.4/bin'


xlogdump安装完成.

[root@db-172-16-3-33 xlogdump-master]# which xlogdump
/opt/pgsql9.2.4/bin/xlogdump


xlogdump的命令行选项 : 

[root@db-172-16-3-33 xlogdump-master]# xlogdump --help
xlogdump version 0.6devel

Usage:
  xlogdump [OPTION]... [segment file(s)]

Options:
  -r, --rmid=RMID           Outputs only the transaction log records
                            containing the specified operation.
                            RMID:Resource Manager
                               0:XLOG
                               1:Transaction
                               2:Storage
                               3:CLOG
                               4:Database
                               5:Tablespace
                               6:MultiXact
                               7:RelMap
                               8:Standby
                               9:Heap2
                              10:Heap
                              11:Btree
                              12:Hash
                              13:Gin
                              14:Gist
                              15:Sequence
                              16:SPGist
  -x, --xid=XID             Outputs only the transaction log records
                            containing the specified transaction id.
  -t, --transactions        Outputs only transaction info: the xid,
                            total length and status of each transaction.
  -s, --statements          Tries to build fake statements that produce the
                            physical changes found within the xlog segments.
  -S, --stats               Collects and shows statistics of the transaction
                            log records from the xlog segments.
  -n, --oid2name            Show object names instead of OIDs with looking up
                            the system catalogs or a cache file.
  -g, --gen_oid2name        Generate an oid2name cache file (oid2name.out)
                            by reading the system catalogs.
  -T, --hide-timestamps     Do not print timestamps.
  -?, --help                Show this help.

oid2name supplimental options:
  -h, --host=HOST           database server host or socket directory
  -p, --port=PORT           database server port number
  -U, --user=NAME           database user name to connect
  -d, --dbname=NAME         database name to connect
  -f, --file=FILE           file name to read oid2name cache

Report bugs to <satoshi.nagayasu@gmail.com>.



使用xlogdump可以从WAL日志中读取到的信息和PostgreSQL 9.3的pg_xlogdump类似.
注意xlogdump多了项统计和oid2name转换的功能. 
pg_xlogdump则多了输出backupblock详细信息的功能.

xlogdump使用举例 : 
SESSION A : 

pg92@db-172-16-3-33-> psql
psql (9.2.4)
Type "help" for help.

digoal=# \d test
     Table "public.test"
 Column |  Type   | Modifiers 
--------+---------+-----------
 id     | integer | 

digoal=# begin;
BEGIN
digoal=# select txid_current();
 txid_current 
--------------
      5140831
(1 row)

digoal=# insert into test values (10);
INSERT 0 1
digoal=# create table new_test (like test including all);
CREATE TABLE
digoal=# insert into new_test values (9);
INSERT 0 1
digoal=# delete from test;
DELETE 11
digoal=# end;
COMMIT
digoal=# checkpoint;
CHECKPOINT


SESSION B : 

[root@db-172-16-3-33 ~]# which xlogdump
/opt/pgsql9.2.4/bin/xlogdump
[root@db-172-16-3-33 ~]# cd /pgdata1919/pg_xlog
[root@db-172-16-3-33 pg_xlog]# ll -rt|tail -n 5
-rw------- 1 pg92 pg92 16777216 May 16 12:39 00000002000000020000007A
-rw------- 1 pg92 pg92 16777216 May 16 12:39 00000002000000020000007B
-rw------- 1 pg92 pg92 16777216 May 16 12:39 00000002000000020000007C
drwx------ 2 pg92 pg92    12288 May 16 12:43 archive_status
-rw------- 1 pg92 pg92 16777216 May 17 12:42 00000002000000020000007D


生成被分析的库的oid2name文件.

[root@db-172-16-3-33 pg_xlog]# xlogdump -g -h 127.0.0.1 -p 1919 -U digoal -d digoal
oid2name.out successfully created.


因为被分析的xlog文件是最后一个文件, 最好关闭数据库后进行分析 : 

pg92@db-172-16-3-33-> pg_ctl stop -m fast
waiting for server to shut down.... done
server stopped


分析 : 

xlogdump -n -s -f ./oid2name.out /pgdata1919/pg_xlog/00000002000000020000007D 2>/dev/null|less


截取xid=5140831的部分.
因为使用了-n参数,所以oid被转成了表名, test, new_test.
其他的含义可以参考 : 
PostgreSQL 9.3 XLOG dump contrib introduce
http://blog.163.com/digoal@126/blog/static/163877040201312311244246/
虽然只插入了2条记录, 创建了1个表, 但是观察到的insert有很多, 有btree的也有heap的, 那是为什么呢?
因为有create table 的动作, 这个动作需要改动很多系统表.
如下 : 

digoal=# select relname from pg_class where pg_relation_filepath(oid) ~ '12531';
 relname 
---------
 pg_type
(1 row)

digoal=# select relname from pg_class where pg_relation_filepath(oid) ~ '12533';
      relname      
-------------------
 pg_type_oid_index
(1 row)

digoal=# select oid,relname from pg_class where pg_relation_filepath(oid) ~ '12534';
 oid  |          relname          
------+---------------------------
 2704 | pg_type_typname_nsp_index
(1 row)

digoal=# select oid,relname from pg_class where pg_relation_filepath(oid) ~ '12656';
 oid  |  relname  
------+-----------
 2608 | pg_depend
(1 row)

digoal=# select oid,relname from pg_class where pg_relation_filepath(oid) ~ '12658';
 oid  |         relname          
------+--------------------------
 2673 | pg_depend_depender_index
(1 row)

digoal=# select oid,relname from pg_class where pg_relation_filepath(oid) ~ '12659';
 oid  |          relname          
------+---------------------------
 2674 | pg_depend_reference_index
(1 row)

digoal=# select oid,relname from pg_class where pg_relation_filepath(oid) ~ '12554';
 oid  | relname  
------+----------
 1259 | pg_class
(1 row)

digoal=# select oid,relname from pg_class where pg_relation_filepath(oid) ~ '12545';
 oid  |             relname             
------+---------------------------------
 2658 | pg_attribute_relid_attnam_index
(1 row)


详细xlog dump数据 : 

[cur:2/7DA24A98, xid:5140831, rmid:10(Heap), len/tot_len:21/497, info:8, prev:2/7DA24A38] insert: s/d/r:pg_default/digoal/test blk/off:0/11 header: none
[cur:2/7DA24A98, xid:5140831, rmid:10(Heap), len/tot_len:21/497, info:8, prev:2/7DA24A38] bkpblock[1]: s/d/r:pg_default/digoal/test blk:0 hole_off/len:68/7772
[cur:2/7DA24C90, xid:5140831, rmid:2(Storage), len/tot_len:16/48, info:16, prev:2/7DA24A98] create rel: s/d/r:pg_default/digoal/new_test
[cur:2/7DA24CC0, xid:5140831, rmid:10(Heap), len/tot_len:21/6797, info:8, prev:2/7DA24C90] insert: s/d/r:pg_default/digoal/12531 blk/off:7/78 header: none
[cur:2/7DA24CC0, xid:5140831, rmid:10(Heap), len/tot_len:21/6797, info:8, prev:2/7DA24C90] bkpblock[1]: s/d/r:pg_default/digoal/12531 blk:7 hole_off/len:384/1472
[page:650, xlp_info:5, xlp_tli:2, xlp_pageaddr:2/7DA28000] XLP_FIRST_IS_CONTRECORD XLP_BKP_REMOVABLE 
[cur:2/7DA26750, xid:5140831, rmid:11(Btree), len/tot_len:18/7854, info:8, prev:2/7DA24CC0] insert_leaf: s/d/r:pg_default/digoal/12533 tid 1/387
[cur:2/7DA26750, xid:5140831, rmid:11(Btree), len/tot_len:18/7854, info:8, prev:2/7DA24CC0] bkpblock[1]: s/d/r:pg_default/digoal/12533 blk:1 hole_off/len:1572/412
[cur:2/7DA28618, xid:5140831, rmid:11(Btree), len/tot_len:18/8202, info:8, prev:2/7DA26750] insert_leaf: s/d/r:pg_default/digoal/12534 tid 1/172
[cur:2/7DA28618, xid:5140831, rmid:11(Btree), len/tot_len:18/8202, info:8, prev:2/7DA26750] bkpblock[1]: s/d/r:pg_default/digoal/12534 blk:1 hole_off/len:1048/64
[cur:2/7DA2A628, xid:5140831, rmid:10(Heap), len/tot_len:21/1661, info:8, prev:2/7DA28618] insert: s/d/r:pg_default/digoal/12656 blk/off:49/26 header: none
[cur:2/7DA2A628, xid:5140831, rmid:10(Heap), len/tot_len:21/1661, info:8, prev:2/7DA28618] bkpblock[1]: s/d/r:pg_default/digoal/12656 blk:49 hole_off/len:128/6608
[page:651, xlp_info:5, xlp_tli:2, xlp_pageaddr:2/7DA2C000] XLP_FIRST_IS_CONTRECORD XLP_BKP_REMOVABLE 
[cur:2/7DA2ACA8, xid:5140831, rmid:11(Btree), len/tot_len:18/5518, info:8, prev:2/7DA2A628] insert_leaf: s/d/r:pg_default/digoal/12658 tid 26/185
[cur:2/7DA2ACA8, xid:5140831, rmid:11(Btree), len/tot_len:18/5518, info:8, prev:2/7DA2A628] bkpblock[1]: s/d/r:pg_default/digoal/12658 blk:26 hole_off/len:796/2748
[cur:2/7DA2C250, xid:5140831, rmid:11(Btree), len/tot_len:18/5854, info:8, prev:2/7DA2ACA8] insert_leaf: s/d/r:pg_default/digoal/12659 tid 18/196
[cur:2/7DA2C250, xid:5140831, rmid:11(Btree), len/tot_len:18/5854, info:8, prev:2/7DA2ACA8] bkpblock[1]: s/d/r:pg_default/digoal/12659 blk:18 hole_off/len:844/2412
[cur:2/7DA2D930, xid:5140831, rmid:10(Heap), len/tot_len:175/207, info:0, prev:2/7DA2C250] insert: s/d/r:pg_default/digoal/12531 blk/off:7/79 header: t_infomask2 30 t_infomask 2057 t_hoff 32
[cur:2/7DA2DA00, xid:5140831, rmid:11(Btree), len/tot_len:34/66, info:0, prev:2/7DA2D930] insert_leaf: s/d/r:pg_default/digoal/12533 tid 1/387
[cur:2/7DA2DA48, xid:5140831, rmid:11(Btree), len/tot_len:42/74, info:0, prev:2/7DA2DA00] insert_leaf: s/d/r:pg_default/digoal/12534 tid 1/40
[cur:2/7DA2DA98, xid:5140831, rmid:10(Heap), len/tot_len:52/84, info:0, prev:2/7DA2DA48] insert: s/d/r:pg_default/digoal/12656 blk/off:49/27 header: t_infomask2 7 t_infomask 2048 t_hoff 24
[cur:2/7DA2DAF0, xid:5140831, rmid:11(Btree), len/tot_len:42/74, info:0, prev:2/7DA2DA98] insert_leaf: s/d/r:pg_default/digoal/12658 tid 26/185
[cur:2/7DA2DB40, xid:5140831, rmid:11(Btree), len/tot_len:18/5014, info:8, prev:2/7DA2DAF0] insert_leaf: s/d/r:pg_default/digoal/12659 tid 31/93
[cur:2/7DA2DB40, xid:5140831, rmid:11(Btree), len/tot_len:18/5014, info:8, prev:2/7DA2DAF0] bkpblock[1]: s/d/r:pg_default/digoal/12659 blk:31 hole_off/len:724/3252
[page:652, xlp_info:5, xlp_tli:2, xlp_pageaddr:2/7DA30000] XLP_FIRST_IS_CONTRECORD XLP_BKP_REMOVABLE 
[cur:2/7DA2EED8, xid:5140831, rmid:10(Heap), len/tot_len:21/5049, info:8, prev:2/7DA2DB40] insert: s/d/r:pg_default/digoal/12554 blk/off:7/37 header: none
[cur:2/7DA2EED8, xid:5140831, rmid:10(Heap), len/tot_len:21/5049, info:8, prev:2/7DA2DB40] bkpblock[1]: s/d/r:pg_default/digoal/12554 blk:7 hole_off/len:460/3220
[cur:2/7DA302A8, xid:5140831, rmid:11(Btree), len/tot_len:18/7174, info:8, prev:2/7DA2EED8] insert_leaf: s/d/r:pg_default/digoal/12556 tid 1/353
[cur:2/7DA302A8, xid:5140831, rmid:11(Btree), len/tot_len:18/7174, info:8, prev:2/7DA2EED8] bkpblock[1]: s/d/r:pg_default/digoal/12556 blk:1 hole_off/len:1436/1092
[cur:2/7DA31EB0, xid:5140831, rmid:11(Btree), len/tot_len:18/7882, info:8, prev:2/7DA302A8] insert_leaf: s/d/r:pg_default/digoal/12557 tid 1/54
[cur:2/7DA31EB0, xid:5140831, rmid:11(Btree), len/tot_len:18/7882, info:8, prev:2/7DA302A8] bkpblock[1]: s/d/r:pg_default/digoal/12557 blk:1 hole_off/len:824/384
[cur:2/7DA33D80, xid:5140831, rmid:10(Heap), len/tot_len:21/397, info:8, prev:2/7DA31EB0] insert: s/d/r:pg_default/digoal/12543 blk/off:45/2 header: none
[cur:2/7DA33D80, xid:5140831, rmid:10(Heap), len/tot_len:21/397, info:8, prev:2/7DA31EB0] bkpblock[1]: s/d/r:pg_default/digoal/12543 blk:45 hole_off/len:32/7872
[page:653, xlp_info:5, xlp_tli:2, xlp_pageaddr:2/7DA34000] XLP_FIRST_IS_CONTRECORD XLP_BKP_REMOVABLE 
[cur:2/7DA33F10, xid:5140831, rmid:11(Btree), len/tot_len:18/1386, info:8, prev:2/7DA33D80] insert_leaf: s/d/r:pg_default/digoal/12545 tid 16/46
[cur:2/7DA33F10, xid:5140831, rmid:11(Btree), len/tot_len:18/1386, info:8, prev:2/7DA33D80] bkpblock[1]: s/d/r:pg_default/digoal/12545 blk:16 hole_off/len:208/6880
[cur:2/7DA34490, xid:5140831, rmid:11(Btree), len/tot_len:18/6414, info:8, prev:2/7DA33F10] insert_leaf: s/d/r:pg_default/digoal/12546 tid 10/315
[cur:2/7DA34490, xid:5140831, rmid:11(Btree), len/tot_len:18/6414, info:8, prev:2/7DA33F10] bkpblock[1]: s/d/r:pg_default/digoal/12546 blk:10 hole_off/len:1284/1852
[cur:2/7DA35DA0, xid:5140831, rmid:10(Heap), len/tot_len:143/175, info:0, prev:2/7DA34490] insert: s/d/r:pg_default/digoal/12543 blk/off:45/3 header: t_infomask2 21 t_infomask 2049 t_hoff 32
[cur:2/7DA35E50, xid:5140831, rmid:11(Btree), len/tot_len:42/74, info:0, prev:2/7DA35DA0] insert_leaf: s/d/r:pg_default/digoal/12545 tid 16/46
[cur:2/7DA35EA0, xid:5140831, rmid:11(Btree), len/tot_len:34/66, info:0, prev:2/7DA35E50] insert_leaf: s/d/r:pg_default/digoal/12546 tid 10/315
[cur:2/7DA35EE8, xid:5140831, rmid:10(Heap), len/tot_len:143/175, info:0, prev:2/7DA35EA0] insert: s/d/r:pg_default/digoal/12543 blk/off:45/4 header: t_infomask2 21 t_infomask 2049 t_hoff 32
[cur:2/7DA35F98, xid:5140831, rmid:11(Btree), len/tot_len:42/74, info:0, prev:2/7DA35EE8] insert_leaf: s/d/r:pg_default/digoal/12545 tid 16/48
[cur:2/7DA35FE8, xid:5140831, rmid:11(Btree), len/tot_len:34/66, info:0, prev:2/7DA35F98] insert_leaf: s/d/r:pg_default/digoal/12546 tid 10/315
[cur:2/7DA36030, xid:5140831, rmid:10(Heap), len/tot_len:143/175, info:0, prev:2/7DA35FE8] insert: s/d/r:pg_default/digoal/12543 blk/off:45/5 header: t_infomask2 21 t_infomask 2049 t_hoff 32
[cur:2/7DA360E0, xid:5140831, rmid:11(Btree), len/tot_len:42/74, info:0, prev:2/7DA36030] insert_leaf: s/d/r:pg_default/digoal/12545 tid 16/46
[cur:2/7DA36130, xid:5140831, rmid:11(Btree), len/tot_len:34/66, info:0, prev:2/7DA360E0] insert_leaf: s/d/r:pg_default/digoal/12546 tid 10/315
[cur:2/7DA36178, xid:5140831, rmid:10(Heap), len/tot_len:143/175, info:0, prev:2/7DA36130] insert: s/d/r:pg_default/digoal/12543 blk/off:45/6 header: t_infomask2 21 t_infomask 2049 t_hoff 32
[cur:2/7DA36228, xid:5140831, rmid:11(Btree), len/tot_len:42/74, info:0, prev:2/7DA36178] insert_leaf: s/d/r:pg_default/digoal/12545 tid 16/49
[cur:2/7DA36278, xid:5140831, rmid:11(Btree), len/tot_len:34/66, info:0, prev:2/7DA36228] insert_leaf: s/d/r:pg_default/digoal/12546 tid 10/315
[cur:2/7DA362C0, xid:5140831, rmid:10(Heap), len/tot_len:143/175, info:0, prev:2/7DA36278] insert: s/d/r:pg_default/digoal/12543 blk/off:45/7 header: t_infomask2 21 t_infomask 2049 t_hoff 32
[cur:2/7DA36370, xid:5140831, rmid:11(Btree), len/tot_len:42/74, info:0, prev:2/7DA362C0] insert_leaf: s/d/r:pg_default/digoal/12545 tid 16/46
[cur:2/7DA363C0, xid:5140831, rmid:11(Btree), len/tot_len:34/66, info:0, prev:2/7DA36370] insert_leaf: s/d/r:pg_default/digoal/12546 tid 10/315
[cur:2/7DA36408, xid:5140831, rmid:10(Heap), len/tot_len:143/175, info:0, prev:2/7DA363C0] insert: s/d/r:pg_default/digoal/12543 blk/off:45/8 header: t_infomask2 21 t_infomask 2049 t_hoff 32
[cur:2/7DA364B8, xid:5140831, rmid:11(Btree), len/tot_len:42/74, info:0, prev:2/7DA36408] insert_leaf: s/d/r:pg_default/digoal/12545 tid 16/50
[cur:2/7DA36508, xid:5140831, rmid:11(Btree), len/tot_len:34/66, info:0, prev:2/7DA364B8] insert_leaf: s/d/r:pg_default/digoal/12546 tid 10/315
[cur:2/7DA36550, xid:5140831, rmid:10(Heap), len/tot_len:52/84, info:0, prev:2/7DA36508] insert: s/d/r:pg_default/digoal/12656 blk/off:49/28 header: t_infomask2 7 t_infomask 2048 t_hoff 24
[cur:2/7DA365A8, xid:5140831, rmid:11(Btree), len/tot_len:18/5182, info:8, prev:2/7DA36550] insert_leaf: s/d/r:pg_default/digoal/1[cur:2/7DA35E50, xid:5140831, rmid:11(Btree), len/tot_len:42/74, info:0, prev:2/7DA35DA0] insert_leaf: s/d/r:pg_default/digoal/12545 tid 16/46
[cur:2/7DA35EA0, xid:5140831, rmid:11(Btree), len/tot_len:34/66, info:0, prev:2/7DA35E50] insert_leaf: s/d/r:pg_default/digoal/12546 tid 10/315
[cur:2/7DA35EE8, xid:5140831, rmid:10(Heap), len/tot_len:143/175, info:0, prev:2/7DA35EA0] insert: s/d/r:pg_default/digoal/12543 blk/off:45/4 header: t_infomask2 21 t_infomask 2049 t_hoff 32
[cur:2/7DA35F98, xid:5140831, rmid:11(Btree), len/tot_len:42/74, info:0, prev:2/7DA35EE8] insert_leaf: s/d/r:pg_default/digoal/12545 tid 16/48
[cur:2/7DA35FE8, xid:5140831, rmid:11(Btree), len/tot_len:34/66, info:0, prev:2/7DA35F98] insert_leaf: s/d/r:pg_default/digoal/12546 tid 10/315
[cur:2/7DA36030, xid:5140831, rmid:10(Heap), len/tot_len:143/175, info:0, prev:2/7DA35FE8] insert: s/d/r:pg_default/digoal/12543 blk/off:45/5 header: t_infomask2 21 t_infomask 2049 t_hoff 32
[cur:2/7DA360E0, xid:5140831, rmid:11(Btree), len/tot_len:42/74, info:0, prev:2/7DA36030] insert_leaf: s/d/r:pg_default/digoal/12545 tid 16/46
[cur:2/7DA36130, xid:5140831, rmid:11(Btree), len/tot_len:34/66, info:0, prev:2/7DA360E0] insert_leaf: s/d/r:pg_default/digoal/12546 tid 10/315
[cur:2/7DA36178, xid:5140831, rmid:10(Heap), len/tot_len:143/175, info:0, prev:2/7DA36130] insert: s/d/r:pg_default/digoal/12543 blk/off:45/6 header: t_infomask2 21 t_infomask 2049 t_hoff 32
[cur:2/7DA36228, xid:5140831, rmid:11(Btree), len/tot_len:42/74, info:0, prev:2/7DA36178] insert_leaf: s/d/r:pg_default/digoal/12545 tid 16/49
[cur:2/7DA36278, xid:5140831, rmid:11(Btree), len/tot_len:34/66, info:0, prev:2/7DA36228] insert_leaf: s/d/r:pg_default/digoal/12546 tid 10/315
[cur:2/7DA362C0, xid:5140831, rmid:10(Heap), len/tot_len:143/175, info:0, prev:2/7DA36278] insert: s/d/r:pg_default/digoal/12543 blk/off:45/7 header: t_infomask2 21 t_infomask 2049 t_hoff 32
[cur:2/7DA36370, xid:5140831, rmid:11(Btree), len/tot_len:42/74, info:0, prev:2/7DA362C0] insert_leaf: s/d/r:pg_default/digoal/12545 tid 16/46
[cur:2/7DA363C0, xid:5140831, rmid:11(Btree), len/tot_len:34/66, info:0, prev:2/7DA36370] insert_leaf: s/d/r:pg_default/digoal/12546 tid 10/315
[cur:2/7DA36408, xid:5140831, rmid:10(Heap), len/tot_len:143/175, info:0, prev:2/7DA363C0] insert: s/d/r:pg_default/digoal/12543 blk/off:45/8 header: t_infomask2 21 t_infomask 2049 t_hoff 32
[cur:2/7DA364B8, xid:5140831, rmid:11(Btree), len/tot_len:42/74, info:0, prev:2/7DA36408] insert_leaf: s/d/r:pg_default/digoal/12545 tid 16/50
[cur:2/7DA36508, xid:5140831, rmid:11(Btree), len/tot_len:34/66, info:0, prev:2/7DA364B8] insert_leaf: s/d/r:pg_default/digoal/12546 tid 10/315
[cur:2/7DA36550, xid:5140831, rmid:10(Heap), len/tot_len:52/84, info:0, prev:2/7DA36508] insert: s/d/r:pg_default/digoal/12656 blk/off:49/28 header: t_infomask2 7 t_infomask 2048 t_hoff 24
[cur:2/7DA365A8, xid:5140831, rmid:11(Btree), len/tot_len:18/5182, info:8, prev:2/7DA36550] insert_leaf: s/d/r:pg_default/digoal/12659 tid 27/75
[cur:2/7DA379E8, xid:5140831, rmid:11(Btree), len/tot_len:18/7758, info:8, prev:2/7DA365A8] bkpblock[1]: s/d/r:pg_default/digoal/12659 blk:27 hole_off/len:1116/508
[cur:2/7DA39850, xid:5140831, rmid:8(Standby), len/tot_len:16/48, info:0, prev:2/7DA379E8] standby
[cur:2/7DA39880, xid:5140831, rmid:10(Heap), len/tot_len:31/63, info:128, prev:2/7DA39850] insert(init): s/d/r:pg_default/digoal/new_test blk/off:0/1 header: t_infomask2 1 t_infomask 2048 t_hoff 24
DELETE FROM test WHERE ...[cur:2/7DA398C0, xid:5140831, rmid:10(Heap), len/tot_len:21/53, info:16, prev:2/7DA39880] delete: s/d/r:pg_default/digoal/test block 0 off 1
DELETE FROM test WHERE ...[cur:2/7DA398F8, xid:5140831, rmid:10(Heap), len/tot_len:21/53, info:16, prev:2/7DA398C0] delete: s/d/r:pg_default/digoal/test block 0 off 2
DELETE FROM test WHERE ...[cur:2/7DA39930, xid:5140831, rmid:10(Heap), len/tot_len:21/53, info:16, prev:2/7DA398F8] delete: s/d/r:pg_default/digoal/test block 0 off 3
DELETE FROM test WHERE ...[cur:2/7DA39968, xid:5140831, rmid:10(Heap), len/tot_len:21/53, info:16, prev:2/7DA39930] delete: s/d/r:pg_default/digoal/test block 0 off 4
DELETE FROM test WHERE ...[cur:2/7DA399A0, xid:5140831, rmid:10(Heap), len/tot_len:21/53, info:16, prev:2/7DA39968] delete: s/d/r:pg_default/digoal/test block 0 off 5
DELETE FROM test WHERE ...[cur:2/7DA399D8, xid:5140831, rmid:10(Heap), len/tot_len:21/53, info:16, prev:2/7DA399A0] delete: s/d/r:pg_default/digoal/test block 0 off 6
DELETE FROM test WHERE ...[cur:2/7DA39A10, xid:5140831, rmid:10(Heap), len/tot_len:21/53, info:16, prev:2/7DA399D8] delete: s/d/r:pg_default/digoal/test block 0 off 7
DELETE FROM test WHERE ...[cur:2/7DA39A48, xid:5140831, rmid:10(Heap), len/tot_len:21/53, info:16, prev:2/7DA39A10] delete: s/d/r:pg_default/digoal/test block 0 off 8
DELETE FROM test WHERE ...[cur:2/7DA39A80, xid:5140831, rmid:10(Heap), len/tot_len:21/53, info:16, prev:2/7DA39A48] delete: s/d/r:pg_default/digoal/test block 0 off 9
DELETE FROM test WHERE ...[cur:2/7DA39AB8, xid:5140831, rmid:10(Heap), len/tot_len:21/53, info:16, prev:2/7DA39A80] delete: s/d/r:pg_default/digoal/test block 0 off 10
DELETE FROM test WHERE ...[cur:2/7DA39AF0, xid:5140831, rmid:10(Heap), len/tot_len:21/53, info:16, prev:2/7DA39AB8] delete: s/d/r:pg_default/digoal/test block 0 off 11
[cur:2/7DA39B28, xid:5140831, rmid:1(Transaction), len/tot_len:368/400, info:0, prev:2/7DA39AF0] d/s:12788/1663 commit at 2013-05-17 12:42:35 CST


xlogdump还可以对xlog文件的rmid进行汇总统计输出, 如下 : 
分析xlog文件的统计信息, 各个RMID的数据量 : 

[root@db-172-16-3-33 pg_xlog]# xlogdump -S /pgdata1919/pg_xlog/00000002000000020000007D 2>/dev/null|less
---------------------------------------------------------------
TimeLineId: 2, LogId: 2, LogSegment: 125

Resource manager stats: 
  [0]XLOG      : 292 records, 18624 bytes (avg 63.8 bytes)
                 checkpoint: 291, switch: 1, backup end: 0
  [1]Transaction: 45755 records, 551500 bytes (avg 12.1 bytes)
                 commit: 3, abort: 0
  [2]Storage   : 2 records, 32 bytes (avg 16.0 bytes)
  [3]CLOG      : 1 record, 4 bytes (avg 4.0 bytes)
  [4]Database  : 0 record, 0 byte (avg 0.0 byte)
  [5]Tablespace: 0 record, 0 byte (avg 0.0 byte)
  [6]MultiXact : 0 record, 0 byte (avg 0.0 byte)
  [7]RelMap    : 0 record, 0 byte (avg 0.0 byte)
  [8]Standby   : 298 records, 5932 bytes (avg 19.9 bytes)
  [9]Heap2     : 1 record, 100 bytes (avg 100.0 bytes)
  [10]Heap      : 45862 records, 2915975 bytes (avg 63.6 bytes)
                 ins: 45787, upd/hot_upd: 0/1, del: 74
  [11]Btree     : 45927 records, 1647280 bytes (avg 35.9 bytes)
  [12]Hash      : 0 record, 0 byte (avg 0.0 byte)
  [13]Gin       : 0 record, 0 byte (avg 0.0 byte)
  [14]Gist      : 0 record, 0 byte (avg 0.0 byte)
  [15]Sequence  : 1386 records, 218988 bytes (avg 158.0 bytes)
  [16]SPGist    : 0 record, 0 byte (avg 0.0 byte)

Backup block stats: 421 blocks, 410580 bytes (avg 975.2 bytes)



[参考]
1. https://github.com/snaga/xlogdump
2. http://www.postgresql.org/docs/9.2/static/wal-internals.html
3. PostgreSQL 9.3 XLOG dump contrib introduce
http://blog.163.com/digoal@126/blog/static/163877040201312311244246/

