PostgreSQL research

PostgreSQL fast bit set 1 count for int4

2015-01-14 17:44:28   查看原文>>

一个关于int的比特位为1的计数函数, 效率还挺高的.

Thanks for all the replies.

I'm giving this a spin, at present. It's based on Rikard's suggestion of using plpgsql script function. Like Jason and other have said, it could be done in a C function (and this was my first inclination), but the hassle of worrying about linking libraries, 32/64-bit installation etc is probably overkill. So this implementation of the 'MIT Hakmem' algorithm seemed like a good compromise between efficiency and efficacy:

CREATE FUNCTION mybitcount(n int4) RETURNS int4 AS $$
  DECLARE tmp int4;
  BEGIN
    tmp = n - ((n >> 1) & 3681400539) - ((n >> 2) & 1227133513);
    RETURN ((tmp + (tmp >> 3)) & 3340530119) % 63;
  END
$$ LANGUAGE plpgsql IMMUTABLE STRICT;


Nathaniel



关于效率, 在一个8核 2.0Ghz的机器上测试.

postgres@localhost-> pgbench -M prepared -n -r -f ./test.sql -c 16 -j 4 -h 127.0.0.1 -T 30
transaction type: Custom query
scaling factor: 1
query mode: prepared
number of clients: 16
number of threads: 4
duration: 30 s
number of transactions actually processed: 2900374
tps = 96665.458393 (including connections establishing)
tps = 96710.178913 (excluding connections establishing)
statement latencies in milliseconds:
        0.164305        select mybitcount(111111);

postgres@localhost-> pgbench -M prepared -n -r -f ./test.sql -c 16 -j 4 -h 127.0.0.1 -T 30
transaction type: Custom query
scaling factor: 1
query mode: prepared
number of clients: 16
number of threads: 4
duration: 30 s
number of transactions actually processed: 2940944
tps = 98020.831406 (including connections establishing)
tps = 98065.039233 (excluding connections establishing)
statement latencies in milliseconds:
        0.162040        select 1; 



但是对于变长的bit, 可以参考redis的bit count, 移植到pg来.

[参考]
1. http://www.postgresql.org/message-id/flat/998131.26971.qm@web25007.mail.ukl.yahoo.com#998131.26971.qm@web25007.mail.ukl.yahoo.com
2. http://en.wikipedia.org/wiki/Hamming_weight
3. http://redis.io/commands/bitcount

Flag Counter
