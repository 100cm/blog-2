PostgreSQL research

PostgreSQL Partial Index use case

2011-02-18 16:41:04   查看原文>>

PostgreSQL的索引功能非常强大，其中有一项partial index在某些特殊场合使用的话非常适合。
例如一个表中包含了激活和非激活的内容，查询只涉及到激活的内容，那么建立partial index就非常适合了。

digoal=> create table tbl_app_info(id int primary key,category varchar(32),appname varchar(32),active boolean);
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "tbl_app_info_pkey" for table "tbl_app_info"
CREATE TABLE
digoal=> insert into tbl_app_info select generate_series(0,100000,2),'游戏','game'||generate_series(0,100000,2),true ;
INSERT 0 50001
digoal=> insert into tbl_app_info select generate_series(1,100000,2),'游戏','game'||generate_series(1,100000,2),false ;
INSERT 0 50000
digoal=> insert into tbl_app_info select generate_series(100001,200000,2),'书籍','book'||generate_series(100001,200000,2),true ;
INSERT 0 50000
digoal=> insert into tbl_app_info select generate_series(100002,200000,2),'书籍','book'||generate_series(100002,200000,2),false ;
INSERT 0 50000
digoal=> create index idx_1 on tbl_app_info(category,game) where active=true;
ERROR:  column "game" does not exist
digoal=> create index idx_1 on tbl_app_info(category,appname) where active=true;
CREATE INDEX
digoal=> analyze tbl_app_info;
ANALYZE
digoal=> explain analyze select * from tbl_app_info where active=true and category='游戏' and appname = 'game1000';
                                                     QUERY PLAN                                                     
---------------------------------------------------------------------------------------------------------------------
 Index Scan using idx_1 on tbl_app_info  (cost=0.00..4.28 rows=1 width=22) (actual time=0.056..0.057 rows=1 loops=1)
   Index Cond: (((category)::text = '游戏'::text) AND ((appname)::text = 'game1000'::text))
 Total runtime: 0.080 ms
(3 rows)

使用partial index好处是节约索引的空间和维护成本。

其他优化手段：
使用维度列(如category)+事实列(如appname)的索引
分区表（如按照category的值分区）
如 : 用户信息表

digoal=> \d tbl_user_info
         Table "digoal.tbl_user_info"
  Column  |         Type          | Modifiers
----------+-----------------------+-----------
 id       | bigint                |
 sex      | character varying(32) |
 username | character varying(32) |
 province | character varying(32) |
 city     | character varying(32) |
 birthday | date                  |
 vocation | character varying(32) |

常用查询:
select * from tbl_user_info where sex='male' and birthday >'1979-01-01' and birthday< '1980-01-01' offset 1000 limit 10;
使用索引 (sex,birthday)
或分区表 tbl_user_info_male 、tbl_user_info_female 将物理数据隔离。
