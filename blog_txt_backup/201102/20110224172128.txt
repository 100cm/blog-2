PostgreSQL research

implement user per database authenticate by db_user_namespace parameter

2011-02-24 17:21:28   查看原文>>

MySQL的权限认证是通过一个全新表来实现的，可以实现用户，IP，数据库的三维认证。
在PostgreSQL中,通过db_user_namespace参数可以实现用户+数据库的认证。默认情况下这个参数是关闭的，关闭状态下创建的用户属于全局用户。
但是目前这只是一个过渡的功能，因为这个参数关闭后，这个用户又会变成全局用户。
来看个例子:
首先修改参数文件，
db_user_namespace = on
pg_ctl reload -D $PGDATA  使其生效

再次连接数据库,
postgres@db-172-16-3-33-> psql -h 127.0.0.1 -d postgres -U digoal
psql: FATAL:  role "digoal@postgres" does not exist
这么连接的话就会报一个错误，因为现在认证的话数据库是使用的per database认证。

在db_user_namespace开启的情况下，
通过全局用户登录如下：（在用户后面加一个@符合）
postgres@db-172-16-3-33-> psql -h 127.0.0.1 -d postgres -U digoal@
psql (9.0.2)
Type "help" for help.

postgres=>

# 创建一个per database认证的用户:
postgres=> \c postgres postgres@
postgres=# create role "digoal@postgres" nosuperuser nocreatedb nocreaterole noinherit login encrypted password 'digoal123';
CREATE ROLE

通过per database用户连接的正确写法:
postgres=# \c postgres digoal
You are now connected to database "postgres" as user "digoal".
# 以下写法是错的
postgres=> \c postgres digoal@postgres
FATAL:  role "digoal@postgres@postgres" does not exist
Previous connection kept

关闭db_user_namespace, per database认证用户仍可使用
修改参数 db_user_namespace = off

postgres@db-172-16-3-33-> pg_ctl reload -D $PGDATA
server signaled
postgres@db-172-16-3-33-> psql -h 127.0.0.1 digoal digoal@postgres
psql (9.0.2)
Type "help" for help.

digoal=> \echo :USER
digoal@postgres

创建的per database认证用户实质上就是名字改变了，在关闭db_user_namespace 后和全局用户没其他区别。
