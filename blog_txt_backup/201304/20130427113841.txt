PostgreSQL research

PostgreSQL notreal-time insert-only count(*) performance tuning case - 7

2013-04-27 11:38:41   查看原文>>

这一篇主要针对的是数组的瘦身优化, 因为前面6篇blog中在统计时抽取的是所有字段组成的数组, 这样内存空间消耗会比较大.
实际上我们只需要被用于统计的字段.
例如log_c1_cnt_day这个统计表,  只需要用到xid, c1, crt_time这三个字段.
因此需要新建统计维度相关的类型. 用法如下.

digoal=# create type log_c1_stat AS(xid int8, c1 int, crt_time timestamp);
CREATE TYPE

postgres=# do language plpgsql $$
declare
  v_log_c1_stat log_c1_stat[];
begin
  select array_agg(i_stat) into v_log_c1_stat from (select (xid,c1,crt_time)::log_c1_stat as i_stat from log limit 10) t;
  raise notice '%', v_log_c1_stat;
  raise notice '%', (v_log_c1_stat[1]).xid;
end;
$$;
NOTICE:  {"(505354161,0,\"2013-04-27 11:04:09.815764\")","(505354161,9,\"2013-04-27 11:04:09.815764\")","(505354161,8,\"2013-04-27 11:04:09.815764\")","(505354161,1,\"2013-04-27 11:04:09.815764\")","(505354161,0,\"2013-04-27 11:04:09.815764\")","(505354161,4,\"2013-04-27 11:04:09.815764\")","(505354161,1,\"2013-04-27 11:04:09.815764\")","(505354161,9,\"2013-04-27 11:04:09.815764\")","(505354161,1,\"2013-04-27 11:04:09.815764\")","(505354161,1,\"2013-04-27 11:04:09.815764\")"}
NOTICE:  505354161
DO


具体的函数我就不重写了.
大家可以参考前面的6篇BLOG进行相应修改.
另一个可以优化的点是多维度处理时的优化, 例如首先计算天的count, 那么在计算按周的count时, 可以使用天的count结果, 而不需要从原始数据进行统计. 按月, 年的统计依次类推. 

【参考】
1. http://blog.163.com/digoal@126/blog/static/163877040201331252945440/
2. http://blog.163.com/digoal@126/blog/static/16387704020133151402415/
3. http://blog.163.com/digoal@126/blog/static/16387704020133155179877/
4. http://blog.163.com/digoal@126/blog/static/16387704020133156636579/
5. http://blog.163.com/digoal@126/blog/static/16387704020133218305242/
6. http://blog.163.com/digoal@126/blog/static/16387704020133224161563/
7. http://blog.163.com/digoal@126/blog/static/16387704020133271134563/
8. http://blog.163.com/digoal@126/blog/static/16387704020134311144755/
