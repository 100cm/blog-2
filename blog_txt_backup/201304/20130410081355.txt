PostgreSQL research

Postgres-XC 1.1devel add __REMOTE_LIMIT_QUERY__ can forward limit to datanode

2013-04-10 8:13:55   查看原文>>

1.0.2的版本中Postgres-XC查询limit语句的话, 会将所有数据传输到coordinator节点, 然后进行limit. 
这个确实非常糟糕. 大表甚至会引起coordinator节点崩溃.
1.1 devel增加了__REMOTE_LIMIT_QUERY__, 可以将limit放到datanode节点执行了, 大大减少了网络传输的数据量, 大大缩短了查询时间.
一下是两个版本的执行计划对比 : 
1.0.2 : 

[postgres@db-172-16-19-13 ~]$ psql
psql (PGXC 1.0.2, based on PG 9.1.7)
Type "help" for help.
digoal=> create table test (id int primary key, info text, crt_time timestamp) distribute by hash(id) to group gp0;
NOTICE:  00000: CREATE TABLE / PRIMARY KEY will create implicit index "test_pkey1" for table "test"
LOCATION:  DefineIndex, indexcmds.c:428
CREATE TABLE
digoal=> insert into test select generate_series(1,10000),md5(random()::text),clock_timestamp();
INSERT 0 10000
digoal=> explain analyze verbose select * from test limit 1;
                                                     QUERY PLAN                                                     
--------------------------------------------------------------------------------------------------------------------
 Limit  (cost=0.00..0.00 rows=1 width=44) (actual time=0.963..0.964 rows=1 loops=1)
   Output: id, info, crt_time
   ->  Result  (cost=0.00..0.00 rows=1000 width=44) (actual time=0.961..0.961 rows=1 loops=1)
         Output: id, info, crt_time
         ->  Data Node Scan on test  (cost=0.00..0.00 rows=1000 width=44) (actual time=0.959..0.959 rows=1 loops=1)
               Output: id, info, crt_time
               Node/s: datanode_1, datanode_2, datanode_3, datanode_4, datanode_5
               Remote query: SELECT id, info, crt_time FROM ONLY test WHERE true
 Total runtime: 20.780 ms
(9 rows)



1.1 devel : 

[pgxc@db-192-168-122-172 ~]$ psql
psql (PGXC 1.1devel, based on PG 9.2beta2)
Type "help" for help.
postgres=# create table test (id int primary key, info text, crt_time timestamp) distribute by hash(id) to group gp0;
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "test_pkey" for table "test"
CREATE TABLE
postgres=# insert into test select generate_series(1,10000),md5(random()::text),clock_timestamp();
INSERT 0 10000
postgres=# explain analyze verbose select * from test limit 1;
                                                            QUERY PLAN                                                            
----------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=0.00..0.00 rows=1 width=44) (actual time=1.253..1.254 rows=1 loops=1)
   Output: test.id, test.info, test.crt_time
   ->  Data Node Scan on "__REMOTE_LIMIT_QUERY__"  (cost=0.00..0.00 rows=1000 width=44) (actual time=1.249..1.249 rows=1 loops=1)
         Output: test.id, test.info, test.crt_time
         Node/s: datanode_1, datanode_2, datanode_3, datanode_4, datanode_5, datanode_6
         Remote query: SELECT id, info, crt_time FROM ONLY test WHERE true LIMIT 1::bigint
 Total runtime: 1.459 ms
(7 rows)



[参考]
1. http://blog.163.com/digoal@126/blog/static/1638770402013388461690/
2. http://postgres-xc.git.sourceforge.net/git/gitweb.cgi?p=postgres-xc/postgres-xc;a=log;h=refs/heads/master;pg=0
