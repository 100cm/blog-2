PostgreSQL research

PostgreSQL on OCZ VERTEX4 512G performance test

2013-04-11 15:13:55   查看原文>>

测试环境 : 

DELL R610
CPU : Intel(R) Xeon(R) CPU           E5504  @ 2.00GHz
OS : Ubuntu 12.04 x64
KERNEL : 
Linux digoal-PowerEdge-R610 3.5.0-26-generic #42~precise1-Ubuntu SMP Mon Mar 11 22:17:58 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux
MEM : 98GB
DISK : OCZ-VERTEX4 512GB
RAID card : 03:00.0 RAID bus controller: LSI Logic / Symbios Logic MegaRAID SAS 1078 (rev 04)
Database : PostgreSQL 9.2.4



# 硬盘信息如下 : 

root@digoal-PowerEdge-R610:~# smartctl -x -d megaraid,3 /dev/sdc
smartctl 5.41 2011-06-09 r3365 [x86_64-linux-3.5.0-26-generic] (local build)
Copyright (C) 2002-11 by Bruce Allen, http://smartmontools.sourceforge.net

/dev/sdc [megaraid_disk_03] [SAT]: Device open changed type from 'megaraid' to 'sat'
=== START OF INFORMATION SECTION ===
Device Model:     OCZ-VERTEX4
Serial Number:    OCZ-69ZP9CV0NG6QQTCH
LU WWN Device Id: 5 e83a97 b67351960
Firmware Version: 1.5
User Capacity:    512,110,190,592 bytes [512 GB]
Sector Size:      512 bytes logical/physical
Device is:        Not in smartctl database [for details use: -P showall]
ATA Version is:   9
ATA Standard is:  Exact ATA specification draft version not indicated
Local Time is:    Thu Apr 11 14:42:32 2013 CST
SMART support is: Available - device has SMART capability.
SMART support is: Enabled

=== START OF READ SMART DATA SECTION ===
SMART overall-health self-assessment test result: PASSED
Warning: This result is based on an Attribute check.

General SMART Values:
Offline data collection status:  (0x00) Offline data collection activity
                                        was never started.
                                        Auto Offline Data Collection: Disabled.
Self-test execution status:      (   0) The previous self-test routine completed
                                        without error or no self-test has ever 
                                        been run.
Total time to complete Offline 
data collection:                (    0) seconds.
Offline data collection
capabilities:                    (0x1d) SMART execute Offline immediate.
                                        No Auto Offline data collection support.
                                        Abort Offline collection upon new
                                        command.
                                        Offline surface scan supported.
                                        Self-test supported.
                                        No Conveyance Self-test supported.
                                        No Selective Self-test supported.
SMART capabilities:            (0x0003) Saves SMART data before entering
                                        power-saving mode.
                                        Supports SMART auto save timer.
Error logging capability:        (0x00) Error logging NOT supported.
                                        General Purpose Logging supported.
Short self-test routine 
recommended polling time:        (   0) minutes.
Extended self-test routine
recommended polling time:        (   0) minutes.

SMART Attributes Data Structure revision number: 18
Vendor Specific SMART Attributes with Thresholds:
ID# ATTRIBUTE_NAME          FLAGS    VALUE WORST THRESH FAIL RAW_VALUE
  1 Raw_Read_Error_Rate     ------   007   000   000    -    7
  3 Spin_Up_Time            ------   100   100   000    -    0
  4 Start_Stop_Count        ------   100   100   000    -    0
  5 Reallocated_Sector_Ct   ------   100   100   000    -    0
  9 Power_On_Hours          ------   100   100   000    -    83
 12 Power_Cycle_Count       ------   100   100   000    -    9
232 Available_Reservd_Space ------   100   100   000    -    6835587931
233 Media_Wearout_Indicator ------   100   000   000    -    100
                            ||||||_ K auto-keep
                            |||||__ C event count
                            ||||___ R error rate
                            |||____ S speed/performance
                            ||_____ O updated online
                            |______ P prefailure warning

General Purpose Log Directory Version 0
SMART           Log Directory Version 1 [multi-sector log support]
GP/S  Log at address 0x00 has    1 sectors [Log Directory]
SMART Log at address 0x06 has    1 sectors [SMART self-test log]
SMART Log at address 0x07 has    1 sectors [Extended self-test log]
SMART Log at address 0x09 has    1 sectors [Selective self-test log]
SMART Log at address 0x10 has    1 sectors [NCQ Command Error]
SMART Log at address 0xa0 has  255 sectors [Device vendor specific log]

SMART Extended Comprehensive Error Log (GP Log 0x03) not supported
SMART Error Log not supported
SMART Extended Self-test Log (GP Log 0x07) not supported
Warning! SMART Self-Test Log Structure error: invalid SMART checksum.
SMART Self-test log structure revision number 1
No self-tests have been logged.  [To run self-tests, use: smartctl -t]


Device does not support Selective Self Tests/Logging
Warning: device does not support SCT Commands
SATA Phy Event Counters (GP Log 0x11) not supported



# 关闭raid cache后的iops测试 : 

pg92@digoal-PowerEdge-R610-> cd /data04/pg92
pg92@digoal-PowerEdge-R610-> pg_test_fsync 
2 seconds per test
O_DIRECT supported on this platform for open_datasync and open_sync.

Compare file sync methods using one 16kB write:
(in wal_sync_method preference order, except fdatasync
is Linux's default)
        open_datasync                   11309.527 ops/sec
        fdatasync                        9873.674 ops/sec
        fsync                            9083.037 ops/sec
        fsync_writethrough                            n/a
        open_sync                       10592.235 ops/sec

Compare file sync methods using two 16kB writes:
(in wal_sync_method preference order, except fdatasync
is Linux's default)
        open_datasync                    5739.670 ops/sec
        fdatasync                        6533.026 ops/sec
        fsync                            5925.739 ops/sec
        fsync_writethrough                            n/a
        open_sync                        5277.821 ops/sec

Compare open_sync with different write sizes:
(This is designed to compare the cost of writing 16kB
in different write open_sync sizes.)
         1 * 16kB open_sync write       10545.957 ops/sec
         2 *  8kB open_sync writes       6830.758 ops/sec
         4 *  4kB open_sync writes       3976.476 ops/sec
         8 *  2kB open_sync writes       2178.427 ops/sec
        16 *  1kB open_sync writes       1130.901 ops/sec

Test if fsync on non-write file descriptor is honored:
(If the times are similar, fsync() can sync data written
on a different descriptor.)
        write, fsync, close              8421.806 ops/sec
        write, close, fsync              8394.089 ops/sec

Non-Sync'ed 16kB writes:
        write                           146398.402 ops/sec



测试模型参考 : 
http://blog.163.com/digoal@126/blog/static/163877040201221382150858/
包含:select, insert, update.

测试表 : 

create table user_info
(userid int,
engname text,
cnname text,
occupation text,
birthday date,
signname text,
email text,
qq numeric,
crt_time timestamp without time zone,
mod_time timestamp without time zone
);

create table user_session
(userid int,
logintime timestamp(0) without time zone,
login_count bigint default 0,
logouttime timestamp(0) without time zone,
online_interval interval default interval '0'
);

create table user_login_rec
(userid int,
login_time timestamp without time zone,
ip inet
);

create table user_logout_rec
(userid int,
logout_time timestamp without time zone,
ip inet
);



初始化数据 : 

insert into user_info (userid,engname,cnname,occupation,birthday,signname,email,qq,crt_time,mod_time)
select generate_series(1,20000000),
'digoal.zhou',
'德哥',
'DBA',
'1970-01-01'
,E'公益是一辈子的事, I\'m Digoal.Zhou, Just do it!',
'digoal@126.com',
276732431,
clock_timestamp(),
NULL;

insert into user_session (userid) select generate_series(1,20000000);

set work_mem='2048MB';
set maintenance_work_mem='2048MB';
alter table user_info add constraint pk_user_info primary key (userid);
alter table user_session add constraint pk_user_session primary key (userid);



测试函数 : 

-- 模拟用户登录的函数
create or replace function f_user_login 
(i_userid int,
OUT o_userid int,
OUT o_engname text,
OUT o_cnname text,
OUT o_occupation text,
OUT o_birthday date,
OUT o_signname text,
OUT o_email text,
OUT o_qq numeric
)
as $BODY$
declare
begin
select userid,engname,cnname,occupation,birthday,signname,email,qq
into o_userid,o_engname,o_cnname,o_occupation,o_birthday,o_signname,o_email,o_qq
from user_info where userid=i_userid;
insert into user_login_rec (userid,login_time,ip) values (i_userid,now(),inet_client_addr());
update user_session set logintime=now(),login_count=login_count+1 where userid=i_userid;
return;
end;
$BODY$
language plpgsql;
-- 模拟用户退出的函数
create or replace function f_user_logout
(i_userid int,
OUT o_result int
)
as $BODY$
declare
begin
insert into user_logout_rec (userid,logout_time,ip) values (i_userid,now(),inet_client_addr());
update user_session set logouttime=now(),online_interval=online_interval+(now()-logintime) where userid=i_userid;
o_result := 0;
return;
exception 
when others then
o_result := 1;
return;
end;
$BODY$
language plpgsql;



数据库配置 : 

listen_addresses = '0.0.0.0'            # what IP address(es) to listen on;
port = 1919                             # (change requires restart)
max_connections = 8000                  # (change requires restart)
superuser_reserved_connections = 13     # (change requires restart)
unix_socket_directory = '.'             # (change requires restart)
unix_socket_permissions = 0700          # begin with 0 to use octal notation
tcp_keepalives_idle = 60                # TCP_KEEPIDLE, in seconds;
tcp_keepalives_interval = 10            # TCP_KEEPINTVL, in seconds;
tcp_keepalives_count = 1                # TCP_KEEPCNT;
shared_buffers = 8096MB                 # min 128kB
max_prepared_transactions = 100         # zero disables the feature
maintenance_work_mem = 512MB            # min 1MB
max_stack_depth = 6MB                   # min 100kB
synchronous_commit = on         # synchronization level;
wal_sync_method = open_datasync         # the default is the first option
checkpoint_segments = 128               # in logfile segments, min 1, 16MB each
random_page_cost = 1.0                  # same scale as above
effective_cache_size = 81920MB
log_destination = 'csvlog'              # Valid values are combinations of
logging_collector = on          # Enable capturing of stderr and csvlog
log_directory = 'pg_log'                # directory where log files are written,
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log' # log file name pattern,
log_file_mode = 0600                    # creation mode for log files,
log_truncate_on_rotation = on           # If on, an existing log file with the
log_rotation_age = 1d                   # Automatic rotation of logfiles will
log_rotation_size = 10MB                # Automatic rotation of logfiles will
log_checkpoints = on
log_connections = on
log_disconnections = on
log_error_verbosity = verbose           # terse, default, or verbose messages
log_timezone = 'PRC'
log_autovacuum_min_duration = 0 # -1 disables, 0 logs all actions and
datestyle = 'iso, mdy'
timezone = 'PRC'
lc_messages = 'C'                       # locale for system error message
lc_monetary = 'C'                       # locale for monetary formatting
lc_numeric = 'C'                        # locale for number formatting
lc_time = 'C'                           # locale for time formatting
default_text_search_config = 'pg_catalog.english'



raid配置 : 
(改成write back, 相当于启用RAID写缓存)
PostgreSQL OCZ VERTEX4 512G performance test - 德哥@Digoal - The Heart,The World.
 
测试结果 : 

pg92@db-172-16-3-33-> cat login.sql 
\setrandom userid 1 20000000
SELECT f_user_login(:userid);
pg92@db-172-16-3-33-> nohup pgbench -M prepared -r -c 16 -f ./login.sql -j 8 -n -T 1800 -h 172.16.3.150 -p 1919 -U postgres postgres >>./bench.log 2>&1 &
transaction type: Custom query
scaling factor: 1
query mode: prepared
number of clients: 16
number of threads: 8
duration: 1800 s
number of transactions actually processed: 24242107
tps = 13467.713701 (including connections establishing)
tps = 13467.789458 (excluding connections establishing)
statement latencies in milliseconds:
        0.001491        \setrandom userid 1 20000000
        1.184882        SELECT f_user_login(:userid);



raid配置 : 
(改成write through, 相当于不启用RAID写缓存)
PostgreSQL OCZ VERTEX4 512G performance test - 德哥@Digoal - The Heart,The World.
 
测试结果 : 

pg92@db-172-16-3-33-> cat login.sql 
\setrandom userid 1 20000000
SELECT f_user_login(:userid);
transaction type: Custom query
scaling factor: 1
query mode: prepared
number of clients: 16
number of threads: 8
duration: 1800 s
number of transactions actually processed: 25311714
tps = 14061.938174 (including connections establishing)
tps = 14062.024086 (excluding connections establishing)
statement latencies in milliseconds:
        0.001499        \setrandom userid 1 20000000
        1.134695        SELECT f_user_login(:userid);


# 性能超越开启raid cache的情况.

iostat : 

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          60.64    0.00   13.89    2.42    0.00   23.06

Device:         rrqm/s   wrqm/s     r/s     w/s    rkB/s    wkB/s avgrq-sz avgqu-sz   await r_await w_await  svctm  %util
sda               0.00     0.00    0.00    0.00     0.00     0.00     0.00     0.00    0.00    0.00    0.00   0.00   0.00
sdb               0.00     0.00    0.00    0.00     0.00     0.00     0.00     0.00    0.00    0.00    0.00   0.00   0.00
sdc               0.00     7.00    1.00 5076.00    56.00 86788.00    34.21     0.46    0.09    4.00    0.09   0.09  45.20
dm-0              0.00     0.00    1.00 5083.00    56.00 86788.00    34.16     0.44    0.09    4.00    0.09   0.09  43.60


表大小 : 

postgres=# \dt+
                           List of relations
 Schema |      Name       | Type  |  Owner   |    Size    | Description 
--------+-----------------+-------+----------+------------+-------------
 public | user_info       | table | postgres | 3006 MB    | 
 public | user_login_rec  | table | postgres | 4220 MB    | 
 public | user_logout_rec | table | postgres | 8192 bytes | 
 public | user_session    | table | postgres | 1496 MB    | 
(4 rows)



[小结]
1. OCZ vertex 4的硬盘素质还算不错. 关闭raid 写cache的情况下. util没到100%
2. 在多次restart -m immediate的情形下, 未出现数据丢失以及阿弟测试中出现的主键重复的现象.

[参考]
1. http://blog.163.com/digoal@126/blog/static/163877040201221382150858/
