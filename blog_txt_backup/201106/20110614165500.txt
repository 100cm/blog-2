PostgreSQL research

PostgreSQL freespacemap file crash recovery

2011-06-14 16:55:00   查看原文>>

自从PostgreSQL 8.4以后,freespace map 就单独记录到文件里面了，以前都是在数据库启动以后记录在内存里面的.
freespacemap 由数据库对象对应的系统文件加一个后缀_fsm组成.
在PostgreSQL中，每个字节记录一个PAGE的freespace信息。也就是说一个PAGE记录的剩余空间最小单位是page_size/2^8 。
为了提高FSM的查询速度，FSM自身的PAGE里面是TREE的结构。为了性能考虑,freespacemap的信息并不是实时更新的,另外需要注意的是，对于索引，只记录了两种状态，使用和完全未使用的PAGE状态。
关于FSM具体可以参考我以前写的相关BLOG或参考源代码。

下面主要是测试一下fsm被破坏之后如何修复。
1. 首先创建测试数据
digoal=> create table tbl_user_log (id int,firstname text,lastname text,corp text,createtime timestamp without time zone);
CREATE TABLE
digoal=> insert into tbl_user_log select generate_series(1,1000000),'zhou','digoal'||generate_series(1,1000000),'sky-mobi',clock_timestamp();
INSERT 0 1000000
2. 查找到文件路径
digoal=> select pg_relation_filepath('tbl_user_log'::regclass);
             pg_relation_filepath             
----------------------------------------------
 pg_tblspc/16385/PG_9.1_201105231/16386/57372
(1 row)
3. 新建pg_freespacemap模块,用于查找FREESPACEMAP.
\c digoal postgres
create extension pg_freespacemap;

fsm crash场景测试 : 
1. 删除fsm 
postgres@db5-> cd $PGDATA/pg_tblspc/16385/PG_9.1_201105231/16386/
postgres@db5-> ll|grep 57372
-rw------- 1 postgres postgres  66M Jun 14 16:36 57372
-rw------- 1 postgres postgres  40K Jun 14 16:33 57372_fsm
# 57372_fsm 这个就是对应的tbl_user_log的freespace map 文件.
postgres@db5-> rm 57372_fsm
rm: remove regular file `57372_fsm'? y
# 查看freespacemap信息,返回正常(这部分信息是从共享内存区取出)。
digoal=# select pg_freespace('digoal.tbl_user_log');
# 修复
digoal=> vacuum verbose tbl_user_log;
INFO:  vacuuming "digoal.tbl_user_log"
INFO:  "tbl_user_log": found 0 removable, 1000000 nonremovable row versions in 8334 out of 8334 pages
DETAIL:  0 dead row versions cannot be removed yet.
There were 0 unused item pointers.
0 pages are entirely empty.
CPU 0.00s/0.00u sec elapsed 8.22 sec.
INFO:  vacuuming "pg_toast.pg_toast_57372"
INFO:  index "pg_toast_57372_index" now contains 0 row versions in 1 pages
DETAIL:  0 index row versions were removed.
0 index pages have been deleted, 0 are currently reusable.
CPU 0.00s/0.00u sec elapsed 0.00 sec.
INFO:  "pg_toast_57372": found 0 removable, 0 nonremovable row versions in 0 out of 0 pages
DETAIL:  0 dead row versions cannot be removed yet.
There were 0 unused item pointers.
0 pages are entirely empty.
CPU 0.00s/0.00u sec elapsed 0.00 sec.
VACUUM
digoal=> \q
postgres@db5-> ll|grep 57372
-rw------- 1 postgres postgres  66M Jun 14 16:40 57372
-rw------- 1 postgres postgres  40K Jun 14 16:39 57372_fsm
-rw------- 1 postgres postgres 8.0K Jun 14 16:39 57372_vm

2. 编辑，纂改 fsm
# 首先找到测试删除数据的对应PAGE
digoal=# select min(ctid),max(ctid) from digoal.tbl_user_log where id<20000;
   min   |   max    
---------+----------
 (0,1) | (166,79)
(1 row)
一会把这些数据删掉，那么page从0-166应该出现剩余空间.
digoal=# delete from digoal.tbl_user_log where id<=20000;
DELETE 20000
# 立刻去查看freespacemap
digoal=# select pg_freespace('digoal.tbl_user_log');
 pg_freespace 
--------------
 (0,0)
 (1,0)
 (2,0)
 (3,0)
 (4,0)
 (5,0)
.......
 (166,0)
 (167,0)
 (168,0)
＃可以看出freespacemap确实不是实时更新的。
# 下面来更新一下.
digoal=# vacuum verbose digoal.tbl_user_log;
INFO:  vacuuming "digoal.tbl_user_log"
INFO:  "tbl_user_log": removed 10001 row versions in 167 pages
INFO:  "tbl_user_log": found 10001 removable, 40 nonremovable row versions in 167 out of 8334 pages
DETAIL:  0 dead row versions cannot be removed yet.
There were 0 unused item pointers.
0 pages are entirely empty.
CPU 0.00s/0.00u sec elapsed 0.01 sec.
INFO:  vacuuming "pg_toast.pg_toast_57372"
INFO:  index "pg_toast_57372_index" now contains 0 row versions in 1 pages
DETAIL:  0 index row versions were removed.
0 index pages have been deleted, 0 are currently reusable.
CPU 0.00s/0.00u sec elapsed 0.00 sec.
INFO:  "pg_toast_57372": found 0 removable, 0 nonremovable row versions in 0 out of 0 pages
DETAIL:  0 dead row versions cannot be removed yet.
There were 0 unused item pointers.
0 pages are entirely empty.
CPU 0.00s/0.00u sec elapsed 0.00 sec.
VACUUM
# 再次查看freespacemap
digoal=# select pg_freespace('digoal.tbl_user_log');
 pg_freespace 
--------------
 (0,7680)
 (1,7680)
 (2,7680)
 (3,7680)
................
 (165,7680)
 (166,5120)
 (167,0)
 (168,0)
# 结果与预期一致.
# 下面来纂改一下fsm的数据
postgres@db5-> pg_ctl stop -m fast
waiting for server to shut down..... done
server stopped
# md5值先保留一下
postgres@db5-> md5sum 57372_fsm
c97a9f672900532f38560bc87a6ab7e0  57372_fsm
# 纂改后MD5
postgres@db5-> md5sum 57372_fsm
cf642ab29c09733666eaea3e0acb4b97  57372_fsm
# 启动数据库
pg_ctl start
# FSM数据不可用，查询当前的FSM
postgres@db5-> psql -h 127.0.0.1 digoal postgres
psql (9.1beta2)
Type "help" for help.

digoal=# select pg_freespace('digoal.tbl_user_log');
 pg_freespace 
--------------
 (0,0)
 (1,0)
 (2,0)
 (3,0)
 (4,0)
。。。。。。。。。。。。
 (165,0)
 (166,0)
 (167,0)
 (168,0)
 (169,0)

# 修复
digoal=# vacuum verbose digoal.tbl_user_log ;
INFO:  vacuuming "digoal.tbl_user_log"
INFO:  "tbl_user_log": found 0 removable, 40 nonremovable row versions in 167 out of 8334 pages
DETAIL:  0 dead row versions cannot be removed yet.
There were 20000 unused item pointers.
0 pages are entirely empty.
CPU 0.00s/0.00u sec elapsed 0.24 sec.
WARNING:  invalid page header in block 0 of relation pg_tblspc/16385/PG_9.1_201105231/16386/57372_fsm; zeroing out page
WARNING:  invalid page header in block 1 of relation pg_tblspc/16385/PG_9.1_201105231/16386/57372_fsm; zeroing out page
INFO:  vacuuming "pg_toast.pg_toast_57372"
INFO:  index "pg_toast_57372_index" now contains 0 row versions in 1 pages
DETAIL:  0 index row versions were removed.
0 index pages have been deleted, 0 are currently reusable.
CPU 0.00s/0.00u sec elapsed 0.00 sec.
INFO:  "pg_toast_57372": found 0 removable, 0 nonremovable row versions in 0 out of 0 pages
DETAIL:  0 dead row versions cannot be removed yet.
There were 0 unused item pointers.
0 pages are entirely empty.
CPU 0.00s/0.00u sec elapsed 0.00 sec.
VACUUM
# 查看当前fsm，恢复正常
digoal=# select pg_freespace('digoal.tbl_user_log');
 pg_freespace 
--------------
 (0,7680)
 (1,7680)
 (2,7680)
 (3,7680)
 (4,7680)
。。。。。。。。
 (165,7680)
 (166,5120)
 (167,0)
 (168,0)
 (169,0)

# 重新看fsm文件的MD5，未变化，还是不正常.
postgres@db5-> md5sum 57372_fsm
cf642ab29c09733666eaea3e0acb4b97  57372_fsm

# vacuum freeze verbose tbl_user_log之后,恢复正常.
postgres@db5-> md5sum 57372_fsm
a8f5d5028a3329cc1395eeb0e3bf3f31  57372_fsm
# 如果还是不行,可以选择vacuum full。
