PostgreSQL research

add network card|interface to docker container online

2014-12-05 16:48:51   查看原文>>

本文将讲解一下如何对一个正在运行的container添加网卡. 
其实就是用的netns, 使用--net=none或--net=bridge都无所谓.

启动一个容器, 默认使用bridge. 所以会自动创建一个网卡.

[root@localhost ~]# docker run --name=test -t -i --rm centos:centos6 /bin/bash
[root@878894e4216d /]# ip link
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN 
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
49: eth0: <BROADCAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP qlen 1000
    link/ether 1e:a6:7f:14:f1:e5 brd ff:ff:ff:ff:ff:ff



为这个容器添加一块网卡 : 
首选要获得容器的PID.

[root@localhost ~]# docker inspect -f '{{.State.Pid}}' test
27175


将这个PID的进程信息ns/net拷贝到/var/run/netns.

[root@localhost ~]# mkdir -p /var/run/netns
[root@localhost ~]# ln -s /proc/27175/ns/net /var/run/netns/27175


在本地添加一对peer接口.

[root@localhost ~]# ip link add v1 type veth peer name vp1


将一个端口加入网桥

[root@localhost ~]# brctl show
bridge name     bridge id               STP enabled     interfaces
br0             8000.000000000000       no
docker0         8000.56847afe9799       no              veth19a1
                                                        veth7428
virbr0          8000.000000000000       yes
[root@localhost ~]# brctl addif docker0 vp1
[root@localhost ~]# ip link set vp1 up


另一个端口加入container的network namespace.

[root@localhost ~]# ip link set v1 netns 27175


为加入container的端口配置IP地址.

[root@localhost ~]# ip netns help
Usage: ip netns list
       ip netns add NAME
       ip netns delete NAME
       ip netns identify PID
       ip netns pids NAME
       ip netns exec NAME cmd ...
       ip netns monitor

[root@localhost ~]# ip netns exec 27175 ip link set v1 up
[root@localhost ~]# ip netns exec 27175 ip addr add 172.17.0.99/16 dev v1


测试是否正常 : 

[root@localhost ~]# ping 172.17.0.99
PING 172.17.0.99 (172.17.0.99) 56(84) bytes of data.
64 bytes from 172.17.0.99: icmp_seq=1 ttl=64 time=0.107 ms
^C
--- 172.17.0.99 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 0.107/0.107/0.107/0.000 ms


容器中多了一个端口, v1 : 

[root@878894e4216d /]# ip addr
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN 
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
49: eth0: <BROADCAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP qlen 1000
    link/ether 1e:a6:7f:14:f1:e5 brd ff:ff:ff:ff:ff:ff
    inet 172.17.0.8/16 scope global eth0
       valid_lft forever preferred_lft forever
    inet6 fe80::1ca6:7fff:fe14:f1e5/64 scope link 
       valid_lft forever preferred_lft forever
52: v1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP qlen 1000
    link/ether 1a:5a:59:97:d3:78 brd ff:ff:ff:ff:ff:ff
    inet 172.17.0.99/16 scope global v1
       valid_lft forever preferred_lft forever
    inet6 fe80::185a:59ff:fe97:d378/64 scope link 
       valid_lft forever preferred_lft forever



为什么要创建/var/run/netns目录呢?
参考man ip-netns
network namespace name存储在/var/run/netns/中.

DESCRIPTION
       A network namespace is logically another copy of the network stack, with its own routes, firewall rules, and network
       devices.

       By convention a named network namespace is an object at /var/run/netns/NAME that can be opened.  The file descriptor
       resulting from opening /var/run/netns/NAME refers to the specified network namespace.  Holding that file descriptor open
       keeps the network namespace alive.  The file descriptor can be used with the setns(2) system call to change the network
       namespace associated with a task.

       For applications that are aware of network namespaces, the convention is to look for global network configuration files
       first in /etc/netns/NAME/ then in /etc/.  For example, if you want a different version of /etc/resolv.conf for a network
       namespace used to isolate your vpn you would name it /etc/netns/myvpn/resolv.conf.

       ip netns exec automates handling of this configuration, file convention for network namespace unaware applications, by
       creating a mount namespace and bind mounting all of the per network namespace configure files into their traditional
       location in /etc.

       ip netns list - show all of the named network namespaces

              This command displays all of the network namespaces in /var/run/netns

       ip netns add NAME - create a new named network namespace

              If NAME is available in /var/run/netns/ this command creates a new network namespace and assigns NAME.

       ip netns delete NAME - delete the name of a network namespace

              If NAME is present in /var/run/netns it is umounted and the mount point is removed.  If this is the last user of
              the network namespace the network namespace will be freed, otherwise the network namespace persists until it has
              no more users.  ip netns delete may fail if the mount point is in use in another mount namespace.

       ip netns identify PID - Report network namespaces names for process

              This command walks through /var/run/netns and finds all the network namespace names for network namespace of the
              specified process.



[参考]
1. man ip-netns

Flag Counter
