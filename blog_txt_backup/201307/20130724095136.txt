PostgreSQL research

PostgreSQL pgbench BUG or not?

2013-07-24 9:51:36   查看原文>>

在测试pgbench 新功能速率限制时. 发现一个疑似pgbench的BUG.
无论是否使用rate限速选项都会发生.
如下 : 
代码版本 : http://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=10a509d82956dee14eb2011bd266cd3c728ae188
使用其他版本测试都有这个问题, 因为计算时间的代码部分是一样的.
安装后测试 : 

vi test.sql
select 1;


测试结果 : 

pg94@db-172-16-3-33-> pgbench  -M prepared -n -r -f ./test.sql -T 10 -c 800 -j 100 digoal
transaction type: Custom query
scaling factor: 1
query mode: prepared
number of clients: 800
number of threads: 100
duration: 10 s
number of transactions actually processed: 2037960
tps = 199534.267305 (including connections establishing)
tps = 675603.691013 (excluding connections establishing)
statement latencies in milliseconds:
        1.019046        select 1;


注意当pgbench客户端线程数达到一定值后excluding connections的tps就不准确了.
包含连接时间和不包含连接时间产生的值偏差非常大.

pg94@db-172-16-3-33-> pgbench  -M prepared -n -r -f ./test.sql -T 10 -c 800 -j 10 digoal
transaction type: Custom query
scaling factor: 1
query mode: prepared
number of clients: 800
number of threads: 10
duration: 10 s
number of transactions actually processed: 1035345
tps = 102285.117970 (including connections establishing)
tps = 115616.181725 (excluding connections establishing)
statement latencies in milliseconds:
        6.812371        select 1;


当线程数较小时, 结果偏差不大. 
[分析]
1. 包含和不包含连接时间的计算 : 

        tps_include = normal_xacts / time_include;
        tps_exclude = normal_xacts / (time_include -
                                                (INSTR_TIME_GET_DOUBLE(conn_total_time) / nthreads));


因为PostgreSQL采用C-S结构, 新建连接时postgres将为每个连接fork子进程. 10秒的测试时间,大多花在创建连接上.  把测试时间延长后这个值会比较靠谱. 

pg93@db-172-16-3-33-> pgbench -M prepared -n -r -f ./test.sql -c 160 -j 160 -T 120 digoal 
transaction type: Custom query
scaling factor: 1
query mode: prepared
number of clients: 160
number of threads: 160
duration: 120 s
number of transactions actually processed: 28424102
tps = 236795.526880 (including connections establishing)
tps = 350493.897174 (excluding connections establishing)
statement latencies in milliseconds:
        0.438618        select 1;


2. 测试结果同时也说明了PostgreSQL不适合高并发的短连接类型的业务. 如果有这类业务, 请务必使用连接池. 例如pgbouncer, 或者程序的连接池.
3. 2013-08-06出的一个补丁, 未解决这个问题, 见一下博文
http://blog.163.com/digoal@126/blog/static/1638770402013772212424/
