PostgreSQL research

PostgreSQL 9.4devel Implement the FILTER clause for aggregate function calls extend the SQL standard

2013-07-18 14:36:21   查看原文>>

PostgreSQL 9.4开发版对聚合函数的语法有小小的增强, 增加了一个FILTER子句, 可以作为聚合函数的输入过滤条件. 比较有实用价值.
开发版下载地址 : 
http://ftp.postgresql.org/pub/snapshot/dev/postgresql-snapshot.tar.gz
例如 : 
统计各分数线内的count.

digoal=# create table score(id int primary key, cname name, score int);
CREATE TABLE
digoal=# insert into score values(1, '刘德华', 99);
INSERT 0 1
digoal=# insert into score values(2, '张学友', 89);
INSERT 0 1
digoal=# insert into score values(3, '郭富城', 88);
INSERT 0 1
digoal=# insert into score values(4, '黎明', 70);
INSERT 0 1
digoal=# insert into score select generate_series(5,100),md5(random()::text),trunc(random()*100);
INSERT 0 96



方法 1 举例 : 
使用case when .. then .. ... else .. end 语法.

digoal=# select sum(case when score>=90 then 1 else 0 end) AS a, sum(case when score>=80 and score<90 then 1 else 0 end) AS b, sum(case when score>=70 and score<80 then 1 else 0 end) AS c, sum(case when score<70 then 1 else 0 end) AS d, count(*) AS all from score; 
 a  | b  | c  | d  | all 
----+----+----+----+-----
 14 | 17 | 11 | 58 | 100
(1 row)



方法 2 举例 :  
使用聚合函数的FILTER进行过滤.

digoal=# select count(*) filter (where score>=90) AS a, 
count(*) filter (where score>=80 and score<90) AS b, 
count(*) filter (where score>=70 and score<80) AS c, 
count(*) filter (where score<70) AS d, 
count(*) AS all 
from score;
 a  | b  | c  | d  | all 
----+----+----+----+-----
 14 | 17 | 11 | 58 | 100
(1 row)



语法 : 

aggregate_name (expression [ , ... ] [ order_by_clause ] ) [ FILTER ( WHERE filter_clause ) ]
aggregate_name (ALL expression [ , ... ] [ order_by_clause ] ) [ FILTER ( WHERE filter_clause ) ]
aggregate_name (DISTINCT expression [ , ... ] [ order_by_clause ] ) [ FILTER ( WHERE filter_clause ) ]
aggregate_name ( * ) [ FILTER ( WHERE filter_clause ) ]


[参考]
1. http://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=b560ec1b0d7b910ce13edc51ffaafaca72136e3b
2. http://www.postgresql.org/docs/devel/static/sql-select.html
3. http://www.postgresql.org/docs/devel/static/sql-expressions.html#SYNTAX-AGGREGATES
