PostgreSQL research

quick maintenance postgresql data use cursor

2014-09-02 15:27:12   查看原文>>

有时候可能会需要快速对表的某些数据进行维护, 例如删除一个大表的某些记录, 
一般的方法是通过条件来定位需要操作的数据记录, 其实还可以有其他方法, 例如数据访问方法, 这种方法比较巧妙.
举个例子 : 
我们可以利用访问方法来删除特定的记录, 例如全表扫描, 根据数据块顺序扫描, 所以删除前面的记录很方便.
索引扫描, 则根据索引顺序或倒序, 或范围来扫描, 那么可以方便的根据索引的顺序来删除所需要删除的数据.
bitmap index scan则是根据索引扫描出数据后, 再根据CTID物理排序, 从物理排序这个方向来删除所需要删除的数据.
本例可以看到利用全表扫描来删除前面的数据.
例如打开一个游标, 这个游标使用全表扫描, 要删除5条记录的话, 一个FOR循环就搞定了. 
效率非常之高, 不管你的表有多大.

postgres=#  \dt+ t16
                   List of relations
 Schema | Name | Type  |  Owner   | Size  | Description 
--------+------+-------+----------+-------+-------------
 public | t16  | table | postgres | 13 GB | 
(1 row)


postgres=# select c1 from t16 limit 10;
 c1 
----
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
(10 rows)


postgres=# do language plpgsql $$      
declare
  ref refcursor;
begin
  open ref for select 1 from t16;
  for i in 1..5 loop
    move ref;
    if found then
      delete from t16 where current of ref;
    else 
      exit;
    end if;
  end loop; 
  close ref;
end;
$$;
DO
Time: 1.295 ms


postgres=# select c1 from t16 limit 10;
 c1 
----
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
(10 rows)


但是, 如果你使用其他方法的话, 看执行计划就该知道效率非常低下, 例如以下SQL : 

postgres=# explain delete from t16 where ctid in (select ctid from t16 limit 5);
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Delete on t16  (cost=0.00..5916667.96 rows=5 width=36)
   ->  Nested Loop Semi Join  (cost=0.00..5916667.96 rows=5 width=36)
         Join Filter: (t16.ctid = "ANY_subquery".ctid)
         ->  Seq Scan on t16  (cost=0.00..2166667.08 rows=50000008 width=6)
         ->  Materialize  (cost=0.00..0.29 rows=5 width=36)
               ->  Subquery Scan on "ANY_subquery"  (cost=0.00..0.27 rows=5 width=36)
                     ->  Limit  (cost=0.00..0.22 rows=5 width=6)
                           ->  Seq Scan on t16 t16_1  (cost=0.00..2166667.08 rows=50000008 width=6)
(8 rows)
Time: 1.166 ms

postgres=# delete from t16 where ctid in (select ctid from t16 limit 5);
DELETE 5
Time: 58200.443 ms



[参考]
1. http://www.postgresql.org/docs/9.3/static/plpgsql-cursors.html

Flag Counter
