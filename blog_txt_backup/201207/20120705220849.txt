PostgreSQL research

SQL tuning example(max speedup 2400 times) : use function index and use window function prevent subquery

2012-07-05 22:08:49   查看原文>>

最近在一个业务系统上发现的慢查询，虽然调用不频繁，但是还是忍不住优化了一下。
主要突出两点： 
1. to_char 函数由于不是immutable的, 所以无法建立函数索引. 
新建一个函数功能与to_char一致, 并设置为immutable, 因此调整SQL中的to_char部分改为新建的这个函数.
使用函数索引提升查询性能.

2. 在一个查询语句中使用了select distinct phonenum,cost,transactionid,spcode from tbl_digoal_201207 这样的子查询, 进行JOIN关联.
注意子查询是否可以被提升, 和from_collapse_limit 的参数配置有关, 提升后的关联表小于这个配置时, 可以提升.
详见
http://www.postgresql.org/docs/9.4/static/runtime-config-query.html#RUNTIME-CONFIG-QUERY-OTHER
在外层使用窗口函数把这个子查询消除掉, 这样就可以使用索引关联了. 提升2400倍.


CREATE OR REPLACE FUNCTION ts_to_char_immutable(i_time timestamp,i_format text) 
  RETURNS text
AS
$BODY$
    select to_char($1, $2);
$BODY$
LANGUAGE sql
IMMUTABLE;

create index CONCURRENTLY idx_app_digoal_201207_ts on tbl_digoal_201207 (substr(ts_to_char_immutable(motime,'yyyymmddhh24mi'),1,11)) tablespace tbs_digoal_idx;
create index CONCURRENTLY idx_app_digoal_mr_201207_ts on tbl_digoal_mr_201207 (substr(ts_to_char_immutable(mrtime,'yyyymmddhh24mi'),1,11)) tablespace tbs_digoal_idx where status='DELIVRD';



慢查询1优化 : 7513 毫秒 -> 589 毫秒

select t1.spcode,sum(t1.cost::numeric) as mosum,t2.provider,t2.provincecode,t2.city,max(substr(to_char(t1.motime,'yyyymmddhh24mi'),1,11)) as stattime  
from tbl_digoal_201207 t1
left join tbl_mobile t2  
on (substr(t1.phonenum,1,7)=t2.phonenum)  
where substr(to_char(t1.motime,'yyyymmddhh24mi'),1,11)='20120705182'  
group by t2.provider,t1.spcode,t2.provincecode,t2.city;
7513 毫秒
执行计划 : 
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=136676.81..136719.75 rows=4294 width=25)
   ->  Hash Left Join  (cost=8531.84..136203.23 rows=18943 width=25)
         Hash Cond: (substr((t1.phonenum)::text, 1, 7) = (t2.phonenum)::text)
         ->  Seq Scan on tbl_digoal_201207 t1  (cost=0.00..125445.11 rows=18943 width=26)
               Filter: (substr(to_char(motime, 'yyyymmddhh24mi'::text), 1, 11) = '20120705182'::text)
         ->  Hash  (cost=4152.26..4152.26 rows=238526 width=19)
               ->  Seq Scan on tbl_mobile t2  (cost=0.00..4152.26 rows=238526 width=19)
(7 rows)



改为 : 

select t1.spcode,sum(t1.cost::numeric) as mosum,t2.provider,t2.provincecode,t2.city,max(substr(to_char(t1.motime,'yyyymmddhh24mi'),1,11)) as stattime  
from tbl_digoal_201207 t1 
left join tbl_mobile t2  
on (substr(t1.phonenum,1,7)=t2.phonenum)  
where substr(ts_to_char_immutable(motime,'yyyymmddhh24mi'),1,11)='20120705182'  
group by t2.provider,t1.spcode,t2.provincecode,t2.city;
589 毫秒
执行计划 : 
                                                         QUERY PLAN                                                          
-----------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=40631.74..40674.68 rows=4294 width=25)
   ->  Hash Left Join  (cost=8830.10..40158.09 rows=18946 width=25)
         Hash Cond: (substr((t1.phonenum)::text, 1, 7) = (t2.phonenum)::text)
         ->  Bitmap Heap Scan on tbl_digoal_201207 t1  (cost=298.26..29399.87 rows=18946 width=26)
               Recheck Cond: (substr(ts_to_char_immutable(motime, 'yyyymmddhh24mi'::text), 1, 11) = '20120705182'::text)
               ->  Bitmap Index Scan on idx_app_digoal_201207_ts  (cost=0.00..293.52 rows=18946 width=0)
                     Index Cond: (substr(ts_to_char_immutable(motime, 'yyyymmddhh24mi'::text), 1, 11) = '20120705182'::text)
         ->  Hash  (cost=4152.26..4152.26 rows=238526 width=19)
               ->  Seq Scan on tbl_mobile t2  (cost=0.00..4152.26 rows=238526 width=19)
(9 rows)




慢查询2优化 : 8305 毫秒 -> 680 毫秒

select t1.newreserve as reserve, t1.newtype as type, t1.spcode,count(t1.id) as mosum,t2.provider,t2.provincecode,t2.city,  max(substr(to_char(t1.motime,'yyyymmddhh24mi'),1,11)) as stattime  
from 
(select (case when reserve='0' then '0' else '-1'  end)  newreserve, (case when type in('30','31') then 'wap' else 'sms' end) newtype, spcode,phonenum,id,motime from tbl_digoal_201207 where  substr(to_char(motime,'yyyymmddhh24mi'),1,11)='20120705182') t1 
left join tbl_mobile t2  
on (substr(t1.phonenum,1,7)=t2.phonenum)  
group by t2.provider,t2.provincecode,t1.spcode,newreserve,t2.city,newtype;
8305 毫秒
执行计划 : 
             QUERY PLAN                                                                                                             
                                     
------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------
 GroupAggregate  (cost=138078.08..138978.06 rows=18947 width=34)
   ->  Sort  (cost=138078.08..138125.45 rows=18947 width=34)
         Sort Key: t2.provider, t2.provincecode, tbl_digoal_201207.spcode, (CASE WHEN ((tbl_digoal_201207.reserve)::text = '
0'::text) THEN '0'::text ELSE '-1'::text END), t2.city, (CASE WHEN ((tbl_digoal_201207.type)::text = ANY ('{30,31}'::text[])) TH
EN 'wap'::text ELSE 'sms'::text END)
         ->  Hash Left Join  (cost=8531.84..136359.43 rows=18947 width=34)
               Hash Cond: (substr((tbl_digoal_201207.phonenum)::text, 1, 7) = (t2.phonenum)::text)
               ->  Seq Scan on tbl_digoal_201207  (cost=0.00..125468.45 rows=18947 width=35)
                     Filter: (substr(to_char(motime, 'yyyymmddhh24mi'::text), 1, 11) = '20120705182'::text)
               ->  Hash  (cost=4152.26..4152.26 rows=238526 width=19)
                     ->  Seq Scan on tbl_mobile t2  (cost=0.00..4152.26 rows=238526 width=19)
(9 rows)



改为 : 

select t1.newreserve as reserve, t1.newtype as type, t1.spcode,count(t1.id) as mosum,t2.provider,t2.provincecode,t2.city,  max(substr(to_char(t1.motime,'yyyymmddhh24mi'),1,11)) as stattime  
from 
(select (case when reserve='0' then '0' else '-1'  end)  newreserve, (case when type in('30','31') then 'wap' else 'sms' end) newtype, spcode,phonenum,id,motime from tbl_digoal_201207 where  substr(ts_to_char_immutable(motime,'yyyymmddhh24mi'),1,11)='20120705182') t1 
left join tbl_mobile t2
on (substr(t1.phonenum,1,7)=t2.phonenum)  
group by t2.provider,t2.provincecode,t1.spcode,newreserve,t2.city,newtype;
680 毫秒
执行计划 : 
             QUERY PLAN                                                                                                             
                                     
------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------
 GroupAggregate  (cost=42013.10..42913.13 rows=18948 width=34)
   ->  Sort  (cost=42013.10..42060.47 rows=18948 width=34)
         Sort Key: t2.provider, t2.provincecode, tbl_digoal_201207.spcode, (CASE WHEN ((tbl_digoal_201207.reserve)::text = '
0'::text) THEN '0'::text ELSE '-1'::text END), t2.city, (CASE WHEN ((tbl_digoal_201207.type)::text = ANY ('{30,31}'::text[])) TH
EN 'wap'::text ELSE 'sms'::text END)
         ->  Hash Left Join  (cost=8830.11..40294.37 rows=18948 width=34)
               Hash Cond: (substr((tbl_digoal_201207.phonenum)::text, 1, 7) = (t2.phonenum)::text)
               ->  Bitmap Heap Scan on tbl_digoal_201207  (cost=298.28..29403.35 rows=18948 width=35)
                     Recheck Cond: (substr(ts_to_char_immutable(motime, 'yyyymmddhh24mi'::text), 1, 11) = '20120705182'::text)
                     ->  Bitmap Index Scan on idx_app_digoal_201207_ts  (cost=0.00..293.54 rows=18948 width=0)
                           Index Cond: (substr(ts_to_char_immutable(motime, 'yyyymmddhh24mi'::text), 1, 11) = '20120705182'::text)
               ->  Hash  (cost=4152.26..4152.26 rows=238526 width=19)
                     ->  Seq Scan on tbl_mobile t2  (cost=0.00..4152.26 rows=238526 width=19)
(11 rows)




慢查询3优化 : 48453 毫秒 -> 21 毫秒

select a1.spcode,sum(a1.cost::numeric) as income,count(0) as itemcount,a2.provincecode,a2.city,a2.provider  from  
( select t1.spcode,t1.phonenum,t2.cost from tbl_digoal_mr_201207 t1,  
  (select distinct phonenum,cost,transactionid,spcode from tbl_digoal_201207)  t2  
  where t1.status='DELIVRD' and  
  substr(to_char(t1.mrtime,'yyyymmddhh24mi'),1,11)='20120705182'  
  and t1.transactionid=t2.transactionid 
  and t1.spcode=t2.spcode  
  and t1.phonenum=t2.phonenum
) a1 
left join tbl_mobile a2  
on (substr(a1.phonenum,1,7)=a2.phonenum)  
group by a1.spcode,a2.provincecode,a2.city,a2.provider;
48453 毫秒
执行计划 : 
                                                                              QUERY PLAN                                            
                                  
------------------------------------------------------------------------------------------------------------------------------------
----------------------------------
 HashAggregate  (cost=948791.42..948791.43 rows=1 width=17)
   ->  Nested Loop Left Join  (cost=851962.34..948791.40 rows=1 width=17)
         ->  Merge Join  (cost=851962.33..948790.60 rows=1 width=18)
               Merge Cond: ((tbl_digoal_201207.phonenum)::text = (t1.phonenum)::text)
               Join Filter: (((t1.spcode)::text = (tbl_digoal_201207.spcode)::text) AND ((t1.transactionid)::text = (tbl_app_cha
rge_201207.transactionid)::text))
               ->  Unique  (cost=733221.17..780593.44 rows=3745199 width=37)
                     ->  Sort  (cost=733221.17..742695.63 rows=3789781 width=37)
                           Sort Key: tbl_digoal_201207.phonenum, tbl_digoal_201207.cost, tbl_digoal_201207.transactionid
, tbl_digoal_201207.spcode
                           ->  Seq Scan on tbl_digoal_201207  (cost=0.00..97057.81 rows=3789781 width=37)
               ->  Sort  (cost=118741.16..118778.52 rows=14945 width=34)
                     Sort Key: t1.phonenum
                     ->  Seq Scan on tbl_digoal_mr_201207 t1  (cost=0.00..117704.92 rows=14945 width=34)
                           Filter: (((status)::text = 'DELIVRD'::text) AND (substr(to_char(mrtime, 'yyyymmddhh24mi'::text), 1, 11) =
 '20120705182'::text))
         ->  Index Scan using tbl_mobile_pkey on tbl_mobile a2  (cost=0.00..0.79 rows=1 width=19)
               Index Cond: (substr((t1.phonenum)::text, 1, 7) = (phonenum)::text)
(15 rows)



改为 : 

select t3.spcode,sum(t3.cost::numeric) as income,count(0) as itemcount,a2.provincecode,a2.city,a2.provider from (
select row_number() over (partition by t2.phonenum,t2.cost,t2.transactionid,t2.spcode) as rn,t1.spcode,t2.cost,t2.phonenum from  
  tbl_digoal_mr_201207 t1 join 
  tbl_digoal_201207 t2  
  on( t1.status='DELIVRD' and
  substr(ts_to_char_immutable(t1.mrtime,'yyyymmddhh24mi'),1,11)='20120705182'  
  and t1.transactionid=t2.transactionid
  and t1.spcode=t2.spcode
  and t1.phonenum=t2.phonenum)
  ) as t3
left join tbl_mobile a2
on (substr(t3.phonenum,1,7)=a2.phonenum) 
where t3.rn=1    -- rn过滤需放在join 条件外面. 否则left join后不会过滤rn<>1的记录.
group by t3.spcode,a2.provincecode,a2.city,a2.provider;
21 毫秒
执行计划 : 
                                                                                     QUERY PLAN                                     
                                                
------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------
 HashAggregate  (cost=1498171.75..1498171.76 rows=1 width=18)
   ->  Nested Loop Left Join  (cost=1498168.28..1498171.73 rows=1 width=18)
         ->  Subquery Scan on t3  (cost=1498168.28..1498168.32 rows=1 width=19)
               Filter: (t3.rn = 1)
               ->  WindowAgg  (cost=1498168.28..1498168.31 rows=1 width=41)
                     ->  Sort  (cost=1498168.28..1498168.28 rows=1 width=41)
                           Sort Key: t2.phonenum, t2.cost, t2.transactionid, t1.spcode
                           ->  Nested Loop  (cost=0.25..1498168.27 rows=1 width=41)
                                 ->  Index Scan using idx_digoal_mr_201206_ts on tbl_digoal_mr_201206 t1  (cost=0.25..3619.1
6 rows=84151 width=34)
                                       Index Cond: (substr(ts_to_char_immutable(mrtime, 'yyyymmddhh24mi'::text), 1, 11) = '201206010
00'::text)
                                 ->  Index Scan using idx_mo_transactionid_201206 on tbl_digoal_201206 t2  (cost=0.00..17.75 row
s=1 width=38)
                                       Index Cond: ((transactionid)::text = (t1.transactionid)::text)
                                       Filter: (((t1.phonenum)::text = (phonenum)::text) AND ((t1.spcode)::text = (spcode)::text))
         ->  Index Scan using tbl_mobile_pkey on tbl_mobile a2  (cost=0.00..3.40 rows=1 width=19)
               Index Cond: (substr((t3.phonenum)::text, 1, 7) = (phonenum)::text)
(16 rows)



慢查询4优化 : 1376 毫秒 -> 2 毫秒

select t1.spcode,t2.provider,t1.cost,t2.province,t2.city,t1.motime  
from tbl_digoal_201207 t1 
left join tbl_mobile t2  
on (substr(t1.phonenum,1,7)=t2.phonenum)  
where t1.spcode = '500'
and substr(to_char(t1.motime,'yyyymmddhh24mi'),1,11)='20120705182';
1376 毫秒
执行计划 : 
                                                             QUERY PLAN                                                             
 
------------------------------------------------------------------------------------------------------------------------------------
-
 Nested Loop Left Join  (cost=0.00..135167.58 rows=45 width=30)
   ->  Seq Scan on tbl_digoal_201207 t1  (cost=0.00..134969.30 rows=45 width=26)
         Filter: (((spcode)::text = '500'::text) AND (substr(to_char(motime, 'yyyymmddhh24mi'::text), 1, 11) = '20120705182'::text))
   ->  Index Scan using tbl_mobile_pkey on tbl_mobile t2  (cost=0.00..4.40 rows=1 width=24)
         Index Cond: (substr((t1.phonenum)::text, 1, 7) = (phonenum)::text)
(5 rows)



改为 : 

select t1.spcode,t2.provider,t1.cost,t2.province,t2.city,t1.motime  
from tbl_digoal_201207 t1 
left join tbl_mobile t2  
on (substr(t1.phonenum,1,7)=t2.phonenum)  
where t1.spcode = '500'
and substr(ts_to_char_immutable(t1.motime,'yyyymmddhh24mi'),1,11)='20120705182';
2 毫秒
执行计划 : 
                                                      QUERY PLAN                                                       
-----------------------------------------------------------------------------------------------------------------------
 Nested Loop Left Join  (cost=293.58..29649.95 rows=45 width=30)
   ->  Bitmap Heap Scan on tbl_digoal_201207 t1  (cost=293.58..29451.67 rows=45 width=26)
         Recheck Cond: (substr(ts_to_char_immutable(motime, 'yyyymmddhh24mi'::text), 1, 11) = '20120705182'::text)
         Filter: ((spcode)::text = '500'::text)
         ->  Bitmap Index Scan on idx_app_digoal_201207_ts  (cost=0.00..293.57 rows=18952 width=0)
               Index Cond: (substr(ts_to_char_immutable(motime, 'yyyymmddhh24mi'::text), 1, 11) = '20120705182'::text)
   ->  Index Scan using tbl_mobile_pkey on tbl_mobile t2  (cost=0.00..4.40 rows=1 width=24)
         Index Cond: (substr((t1.phonenum)::text, 1, 7) = (phonenum)::text)
(8 rows)


【注意】
1. 添加完索引并修改SQL语句后如果执行计划还不对的, 需要使用强制计划. 如set enable_hashjoin=off; set enable_mergejoin=off;
但是这样将会影响所有新建的SESSION的默认参数.
有几种办法. 
1. 在应用程序数据库驱动连接参数里面配置这两个选项。
2. 对于以上SQL关联的应用, 使用独立的用户, 设置这个用户的search_path以及以上两个参数.

alter role test set enable_hashjoin=off;
alter role test set enable_mergejoin=off;
alter role test set search_path="指定schema, public";
使用以下SQL可以查看到角色的特定配置.
postgres=# select rolname,rolconfig from pg_roles;


3. 配置数据库的默认选项. 语法如下.

ALTER DATABASE name SET configuration_parameter { TO | = } { value | DEFAULT }
ALTER DATABASE name SET configuration_parameter FROM CURRENT
ALTER DATABASE name RESET configuration_parameter
ALTER DATABASE name RESET ALL;


