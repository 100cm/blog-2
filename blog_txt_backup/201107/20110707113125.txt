PostgreSQL research

use chkpass type encrypted password in PostgreSQL

2011-07-07 11:31:25   查看原文>>

chkpass这个extension利用标准的UNIX函数crypt()对cstring 进行加密。
因此chkpass和crypt()的所有使用限制一样，如只能存储8位长度的密码。
chkpass创建后，在数据库里面多出6个函数其中2个比较函数，一个数据类型，还有两个运算符。
chkpass_out和raw的区别在于显示方面,raw 不显示前面的冒号。

CREATE FUNCTION eq(chkpass, text)
        RETURNS bool
        AS 'MODULE_PATHNAME', 'chkpass_eq'
        LANGUAGE C STRICT;
CREATE FUNCTION ne(chkpass, text)
        RETURNS bool
        AS 'MODULE_PATHNAME', 'chkpass_ne'
        LANGUAGE C STRICT;
CREATE FUNCTION chkpass_in(cstring)
        RETURNS chkpass
        AS 'MODULE_PATHNAME'
        LANGUAGE C STRICT;
CREATE FUNCTION chkpass_out(chkpass)
        RETURNS cstring
        AS 'MODULE_PATHNAME'
        LANGUAGE C STRICT;
CREATE FUNCTION raw(chkpass)
        RETURNS text
        AS 'MODULE_PATHNAME', 'chkpass_rout'
        LANGUAGE C STRICT;
CREATE TYPE chkpass (
        internallength = 16,
        input = chkpass_in,
        output = chkpass_out
);
CREATE OPERATOR = (
        leftarg = chkpass,
        rightarg = text,
        negator = <>,
        procedure = eq
);
CREATE OPERATOR <> (
        leftarg = chkpass,
        rightarg = text,
        negator = =,
        procedure = ne
);

如:
digoal=> insert into tbl_test (id,passwd) values (1,'abc');
digoal=> select id,passwd,chkpass_out(passwd),raw(passwd) from tbl_test;
 id |     passwd     |  chkpass_out   |      raw      
----+----------------+----------------+---------------
  1 | :G325RU.X/ya7U | :G325RU.X/ya7U | G325RU.X/ya7U
(1 row)

如果密码明文的第一个字符是冒号的话，需要使用转义
digoal=> insert into tbl_test (id,passwd) values (2,':abc');
digoal=> select id,passwd,chkpass_out(passwd),raw(passwd) from tbl_test;
 id |     passwd     |  chkpass_out   |      raw      
----+----------------+----------------+---------------
  1 | :G325RU.X/ya7U | :G325RU.X/ya7U | G325RU.X/ya7U
  2 | :abc           | :abc           | abc
(2 rows)
digoal=> insert into tbl_test (id,passwd) values (3,'\:abc');
digoal=> select id,passwd,chkpass_out(passwd),raw(passwd) from tbl_test;
 id |     passwd     |  chkpass_out   |      raw      
----+----------------+----------------+---------------
  1 | :G325RU.X/ya7U | :G325RU.X/ya7U | G325RU.X/ya7U
  2 | :abc           | :abc           | abc
  3 | :rADvTP7V8KnHc | :rADvTP7V8KnHc | rADvTP7V8KnHc
(3 rows)

比较密码时使用运算符号或函数都可以.
digoal=> select * from tbl_test where passwd='abc';
 id |     passwd     
----+----------------
  1 | :G325RU.X/ya7U
(1 row)
digoal=> select * from tbl_test where passwd='\:abc';
 id |     passwd     
----+----------------
  3 | :rADvTP7V8KnHc
(1 row)

digoal=> select * from tbl_test where eq(passwd,'\:abc');
 id |     passwd     
----+----------------
  3 | :rADvTP7V8KnHc
(1 row)

密码长度超过8位的数字不比较，所以只要前8位字符一致都认为是一致的:
digoal=> select chkpass_in('123456789')='123456781234';
 ?column? 
----------
 t
(1 row)
digoal=> select chkpass_in('123456789')='12345678';
 ?column? 
----------
 t
(1 row)

digoal=> select chkpass_in('123456789')='12345677';
 ?column? 
----------
 f
(1 row)

